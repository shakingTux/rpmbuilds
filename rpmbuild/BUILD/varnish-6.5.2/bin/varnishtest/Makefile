# Makefile.in generated by automake 1.16.1 from Makefile.am.
# bin/varnishtest/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#

# This file helps set up a varnishtest execution without a traditional
# pre-defined list of tests. Test cases are expected to be located in a
# tests/ directory relative to the Makefile's source directory.
#
# When a difference is detected, a refresh is triggered by calling the
# vtc-refresh-tests target that must be defined in the including Makefile.
#
# The current assumption is that all the tests for the Makefile are VTCs
# and may be revisited if needed.


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/varnish
pkgincludedir = $(includedir)/varnish
pkglibdir = $(libdir)/varnish
pkglibexecdir = $(libexecdir)/varnish
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-suse-linux-gnu
host_triplet = x86_64-suse-linux-gnu
target_triplet = x86_64-suse-linux-gnu
bin_PROGRAMS = varnishtest$(EXEEXT)
subdir = bin/varnishtest
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/varnish.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_lib_readline.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_with_curses.m4 \
	$(top_srcdir)/m4/ld-version-script.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_varnishtest_OBJECTS = varnishtest-teken.$(OBJEXT) \
	varnishtest-vtc.$(OBJEXT) varnishtest-vtc_barrier.$(OBJEXT) \
	varnishtest-vtc_client.$(OBJEXT) \
	varnishtest-vtc_gzip.$(OBJEXT) \
	varnishtest-vtc_haproxy.$(OBJEXT) \
	varnishtest-vtc_h2_hpack.$(OBJEXT) \
	varnishtest-vtc_h2_tbl.$(OBJEXT) \
	varnishtest-vtc_http.$(OBJEXT) varnishtest-vtc_http2.$(OBJEXT) \
	varnishtest-vtc_log.$(OBJEXT) varnishtest-vtc_logexp.$(OBJEXT) \
	varnishtest-vtc_misc.$(OBJEXT) varnishtest-vtc_main.$(OBJEXT) \
	varnishtest-vtc_process.$(OBJEXT) \
	varnishtest-vtc_proxy.$(OBJEXT) \
	varnishtest-vtc_server.$(OBJEXT) \
	varnishtest-vtc_sess.$(OBJEXT) varnishtest-vtc_subr.$(OBJEXT) \
	varnishtest-vtc_syslog.$(OBJEXT) \
	varnishtest-vtc_varnish.$(OBJEXT)
varnishtest_OBJECTS = $(am_varnishtest_OBJECTS)
am__DEPENDENCIES_1 =
varnishtest_DEPENDENCIES =  \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvarnishapi/libvarnishapi.la \
	$(top_builddir)/lib/libvgz/libvgz.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
varnishtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(varnishtest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/varnishtest-teken.Po \
	./$(DEPDIR)/varnishtest-vtc.Po \
	./$(DEPDIR)/varnishtest-vtc_barrier.Po \
	./$(DEPDIR)/varnishtest-vtc_client.Po \
	./$(DEPDIR)/varnishtest-vtc_gzip.Po \
	./$(DEPDIR)/varnishtest-vtc_h2_hpack.Po \
	./$(DEPDIR)/varnishtest-vtc_h2_tbl.Po \
	./$(DEPDIR)/varnishtest-vtc_haproxy.Po \
	./$(DEPDIR)/varnishtest-vtc_http.Po \
	./$(DEPDIR)/varnishtest-vtc_http2.Po \
	./$(DEPDIR)/varnishtest-vtc_log.Po \
	./$(DEPDIR)/varnishtest-vtc_logexp.Po \
	./$(DEPDIR)/varnishtest-vtc_main.Po \
	./$(DEPDIR)/varnishtest-vtc_misc.Po \
	./$(DEPDIR)/varnishtest-vtc_process.Po \
	./$(DEPDIR)/varnishtest-vtc_proxy.Po \
	./$(DEPDIR)/varnishtest-vtc_server.Po \
	./$(DEPDIR)/varnishtest-vtc_sess.Po \
	./$(DEPDIR)/varnishtest-vtc_subr.Po \
	./$(DEPDIR)/varnishtest-vtc_syslog.Po \
	./$(DEPDIR)/varnishtest-vtc_varnish.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(varnishtest_SOURCES)
DIST_SOURCES = $(varnishtest_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.vtc.log=.log)
VTC_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
VTC_LOG_COMPILE = $(VTC_LOG_COMPILER) $(AM_VTC_LOG_FLAGS) \
	$(VTC_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver $(top_srcdir)/vtc.am
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AM_LT_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized -pthread -Wall -Werror -Wno-error=unused-result   -Werror  -Wno-format-y2k  -Wstrict-prototypes  -Wmissing-prototypes  -Wpointer-arith  -Wcast-qual  -Wwrite-strings  -Wshadow  -Wunused-parameter  -Wcast-align  -Wchar-subscripts  -Wnested-externs  -Wextra  -Wno-sign-compare  -fstack-protector -Wno-missing-field-initializers
CPP = gcc -E
CPPFLAGS = 
CURSES_CFLAGS = -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw
CURSES_LIB = 
CURSES_LIBS = -lncursesw -ltinfo
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl 
DOT = no
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXTCFLAGS = -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JEMALLOC_LDADD = 
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEDIT_CFLAGS = -I/usr/include/editline
LIBEDIT_LIBS = -ledit
LIBM = -lm
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUNWIND_CFLAGS = 
LIBUNWIND_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NET_LIBS =  
NM = /usr/bin/nm -B
NMEDIT = 
NSL_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = varnish
PACKAGE_BUGREPORT = varnish-dev@varnish-cache.org
PACKAGE_NAME = Varnish
PACKAGE_STRING = Varnish 6.5.2
PACKAGE_TARNAME = varnish
PACKAGE_URL = 
PACKAGE_VERSION = 6.5.2
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_CONFIG = 
PCRE_LIBS = -lpcre
PKG_CONFIG = /usr/bin/x86_64-suse-linux-gnu-pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = :/usr/lib64/pkgconfig:/usr/share/pkgconfig
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3.6
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.6
RANLIB = ranlib
RST2HTML = rst2html
RST2MAN = rst2man
RT_LIBS = -lrt 
SAN_CFLAGS = 
SAN_LDFLAGS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOCKET_LIBS = 
SPHINX = sphinx-build-3.6
STRIP = strip
VARNISH_STATE_DIR = ${localstatedir}/varnish
VCC_CC = exec gcc -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized -Wall -Werror -Wno-error=unused-result   -Werror  -Wno-format-y2k  -Wstrict-prototypes  -Wmissing-prototypes  -Wpointer-arith  -Wcast-qual  -Wwrite-strings  -Wshadow  -Wunused-parameter  -Wcast-align  -Wchar-subscripts  -Wnested-externs  -Wextra  -Wno-sign-compare  -fstack-protector -Wno-missing-field-initializers -pthread -fpic -shared -Wl,-x -o %o %s
VERSION = 6.5.2
VMOD_LDFLAGS = -module -export-dynamic -avoid-version -shared
VSC_GEN_C = VSC_lck.c VSC_main.c VSC_mempool.c VSC_mgt.c VSC_sma.c VSC_smf.c VSC_smu.c VSC_vbe.c
VSC_GEN_H = VSC_lck.h VSC_main.h VSC_mempool.h VSC_mgt.h VSC_sma.h VSC_smf.h VSC_smu.h VSC_vbe.h
abs_builddir = /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
abs_srcdir = /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
abs_top_builddir = /root/rpmbuild/BUILD/varnish-6.5.2
abs_top_srcdir = /root/rpmbuild/BUILD/varnish-6.5.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = /usr/bin
build = x86_64-suse-linux-gnu
build_alias = x86_64-suse-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = suse
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = /usr/share/doc/packages/varnish
dvidir = ${docdir}
exec_prefix = /usr
host = x86_64-suse-linux-gnu
host_alias = x86_64-suse-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/install-sh
libdir = /usr/lib64
libexecdir = /usr/lib
libvgz_extra_cflags =  -Wno-unknown-warning-option -Wno-implicit-fallthrough
localedir = ${datarootdir}/locale
localstatedir = /var/cache
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/varnish
pkgpythondir = ${pythondir}/varnish
pkgsysconfdir = ${sysconfdir}/varnish
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python3.6/site-packages
pythondir = ${prefix}/lib/python3.6/site-packages
runstatedir = ${localstatedir}/run
sbindir = /usr/sbin
sharedstatedir = /var/lib
srcdir = .
sysconfdir = /etc
target = x86_64-suse-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = suse
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
vmoddir = $(pkglibdir)/vmods
TESTS = tests/a00000.vtc tests/a00001.vtc tests/a00002.vtc tests/a00003.vtc tests/a00004.vtc tests/a00005.vtc tests/a00006.vtc tests/a00007.vtc tests/a00008.vtc tests/a00010.vtc tests/a00011.vtc tests/a00012.vtc tests/a00013.vtc tests/a00014.vtc tests/a00015.vtc tests/a00018.vtc tests/a00019.vtc tests/a00020.vtc tests/a02000.vtc tests/a02001.vtc tests/a02002.vtc tests/a02003.vtc tests/a02004.vtc tests/a02005.vtc tests/a02006.vtc tests/a02007.vtc tests/a02008.vtc tests/a02009.vtc tests/a02010.vtc tests/a02011.vtc tests/a02012.vtc tests/a02013.vtc tests/a02014.vtc tests/a02015.vtc tests/a02016.vtc tests/a02017.vtc tests/a02018.vtc tests/a02019.vtc tests/a02020.vtc tests/a02021.vtc tests/a02022.vtc tests/a02023.vtc tests/a02024.vtc tests/a02025.vtc tests/a02026.vtc tests/b00000.vtc tests/b00001.vtc tests/b00002.vtc tests/b00003.vtc tests/b00004.vtc tests/b00005.vtc tests/b00006.vtc tests/b00007.vtc tests/b00008.vtc tests/b00009.vtc tests/b00010.vtc tests/b00011.vtc tests/b00012.vtc tests/b00013.vtc tests/b00014.vtc tests/b00015.vtc tests/b00016.vtc tests/b00017.vtc tests/b00018.vtc tests/b00019.vtc tests/b00020.vtc tests/b00021.vtc tests/b00022.vtc tests/b00023.vtc tests/b00024.vtc tests/b00025.vtc tests/b00026.vtc tests/b00027.vtc tests/b00028.vtc tests/b00029.vtc tests/b00030.vtc tests/b00031.vtc tests/b00032.vtc tests/b00033.vtc tests/b00034.vtc tests/b00035.vtc tests/b00036.vtc tests/b00037.vtc tests/b00038.vtc tests/b00039.vtc tests/b00040.vtc tests/b00041.vtc tests/b00042.vtc tests/b00043.vtc tests/b00044.vtc tests/b00045.vtc tests/b00046.vtc tests/b00047.vtc tests/b00048.vtc tests/b00049.vtc tests/b00050.vtc tests/b00051.vtc tests/b00052.vtc tests/b00053.vtc tests/b00054.vtc tests/b00055.vtc tests/b00056.vtc tests/b00057.vtc tests/b00059.vtc tests/b00060.vtc tests/b00061.vtc tests/b00062.vtc tests/b00063.vtc tests/b00064.vtc tests/b00065.vtc tests/b00066.vtc tests/b00067.vtc tests/b00068.vtc tests/b00069.vtc tests/b00070.vtc tests/b00071.vtc tests/b00072.vtc tests/b00073.vtc tests/c00001.vtc tests/c00002.vtc tests/c00003.vtc tests/c00004.vtc tests/c00005.vtc tests/c00006.vtc tests/c00007.vtc tests/c00008.vtc tests/c00009.vtc tests/c00010.vtc tests/c00011.vtc tests/c00012.vtc tests/c00013.vtc tests/c00014.vtc tests/c00015.vtc tests/c00016.vtc tests/c00017.vtc tests/c00018.vtc tests/c00019.vtc tests/c00020.vtc tests/c00021.vtc tests/c00022.vtc tests/c00023.vtc tests/c00024.vtc tests/c00025.vtc tests/c00026.vtc tests/c00027.vtc tests/c00028.vtc tests/c00031.vtc tests/c00034.vtc tests/c00035.vtc tests/c00036.vtc tests/c00037.vtc tests/c00038.vtc tests/c00039.vtc tests/c00040.vtc tests/c00041.vtc tests/c00043.vtc tests/c00044.vtc tests/c00045.vtc tests/c00046.vtc tests/c00047.vtc tests/c00048.vtc tests/c00049.vtc tests/c00050.vtc tests/c00051.vtc tests/c00052.vtc tests/c00053.vtc tests/c00054.vtc tests/c00055.vtc tests/c00056.vtc tests/c00057.vtc tests/c00058.vtc tests/c00059.vtc tests/c00060.vtc tests/c00061.vtc tests/c00062.vtc tests/c00063.vtc tests/c00064.vtc tests/c00065.vtc tests/c00066.vtc tests/c00067.vtc tests/c00068.vtc tests/c00069.vtc tests/c00070.vtc tests/c00071.vtc tests/c00072.vtc tests/c00073.vtc tests/c00074.vtc tests/c00075.vtc tests/c00076.vtc tests/c00077.vtc tests/c00078.vtc tests/c00079.vtc tests/c00080.vtc tests/c00081.vtc tests/c00082.vtc tests/c00083.vtc tests/c00084.vtc tests/c00085.vtc tests/c00086.vtc tests/c00087.vtc tests/c00088.vtc tests/c00089.vtc tests/c00090.vtc tests/c00091.vtc tests/c00092.vtc tests/c00093.vtc tests/c00094.vtc tests/c00095.vtc tests/c00096.vtc tests/c00097.vtc tests/c00098.vtc tests/c00099.vtc tests/c00100.vtc tests/c00101.vtc tests/d00000.vtc tests/d00001.vtc tests/d00002.vtc tests/d00003.vtc tests/d00004.vtc tests/d00005.vtc tests/d00006.vtc tests/d00007.vtc tests/d00008.vtc tests/d00009.vtc tests/d00010.vtc tests/d00011.vtc tests/d00012.vtc tests/d00013.vtc tests/d00014.vtc tests/d00015.vtc tests/d00016.vtc tests/d00017.vtc tests/d00018.vtc tests/d00019.vtc tests/d00020.vtc tests/d00021.vtc tests/d00022.vtc tests/d00023.vtc tests/d00024.vtc tests/d00025.vtc tests/d00026.vtc tests/d00027.vtc tests/d00028.vtc tests/d00029.vtc tests/d00030.vtc tests/d00031.vtc tests/d00032.vtc tests/d00033.vtc tests/d00034.vtc tests/d00035.vtc tests/d00036.vtc tests/d00037.vtc tests/d00038.vtc tests/d00039.vtc tests/d00040.vtc tests/d00041.vtc tests/e00000.vtc tests/e00001.vtc tests/e00002.vtc tests/e00003.vtc tests/e00004.vtc tests/e00005.vtc tests/e00006.vtc tests/e00007.vtc tests/e00008.vtc tests/e00009.vtc tests/e00010.vtc tests/e00011.vtc tests/e00012.vtc tests/e00013.vtc tests/e00014.vtc tests/e00015.vtc tests/e00016.vtc tests/e00017.vtc tests/e00018.vtc tests/e00019.vtc tests/e00020.vtc tests/e00021.vtc tests/e00022.vtc tests/e00023.vtc tests/e00024.vtc tests/e00025.vtc tests/e00026.vtc tests/e00027.vtc tests/e00028.vtc tests/e00030.vtc tests/e00031.vtc tests/e00032.vtc tests/e00033.vtc tests/f00001.vtc tests/f00004.vtc tests/f00005.vtc tests/f00007.vtc tests/g00000.vtc tests/g00001.vtc tests/g00002.vtc tests/g00003.vtc tests/g00004.vtc tests/g00005.vtc tests/g00006.vtc tests/g00007.vtc tests/g00008.vtc tests/h00001.vtc tests/h00002.vtc tests/h00003.vtc tests/h00004.vtc tests/h00005.vtc tests/h00006.vtc tests/h00007.vtc tests/i00000.vtc tests/j00000.vtc tests/j00001.vtc tests/j00003.vtc tests/j00004.vtc tests/l00000.vtc tests/l00001.vtc tests/l00002.vtc tests/l00003.vtc tests/l00004.vtc tests/l00005.vtc tests/m00000.vtc tests/m00001.vtc tests/m00003.vtc tests/m00004.vtc tests/m00005.vtc tests/m00006.vtc tests/m00007.vtc tests/m00008.vtc tests/m00011.vtc tests/m00013.vtc tests/m00014.vtc tests/m00015.vtc tests/m00016.vtc tests/m00017.vtc tests/m00018.vtc tests/m00019.vtc tests/m00020.vtc tests/m00021.vtc tests/m00022.vtc tests/m00023.vtc tests/m00024.vtc tests/m00025.vtc tests/m00026.vtc tests/m00027.vtc tests/m00028.vtc tests/m00029.vtc tests/m00031.vtc tests/m00032.vtc tests/m00033.vtc tests/m00034.vtc tests/m00035.vtc tests/m00036.vtc tests/m00037.vtc tests/m00038.vtc tests/m00039.vtc tests/m00040.vtc tests/m00041.vtc tests/m00042.vtc tests/m00043.vtc tests/m00044.vtc tests/m00045.vtc tests/m00046.vtc tests/m00047.vtc tests/m00048.vtc tests/m00049.vtc tests/m00050.vtc tests/m00051.vtc tests/m00052.vtc tests/o00000.vtc tests/o00001.vtc tests/o00002.vtc tests/o00003.vtc tests/o00004.vtc tests/o00005.vtc tests/p00000.vtc tests/p00002.vtc tests/p00003.vtc tests/p00004.vtc tests/p00005.vtc tests/p00006.vtc tests/p00007.vtc tests/p00008.vtc tests/p00009.vtc tests/r00102.vtc tests/r00251.vtc tests/r00255.vtc tests/r00262.vtc tests/r00263.vtc tests/r00292.vtc tests/r00306.vtc tests/r00310.vtc tests/r00318.vtc tests/r00325.vtc tests/r00326.vtc tests/r00345.vtc tests/r00386.vtc tests/r00387.vtc tests/r00400.vtc tests/r00409.vtc tests/r00411.vtc tests/r00412.vtc tests/r00416.vtc tests/r00425.vtc tests/r00427.vtc tests/r00433.vtc tests/r00445.vtc tests/r00466.vtc tests/r00476.vtc tests/r00494.vtc tests/r00495.vtc tests/r00498.vtc tests/r00502.vtc tests/r00506.vtc tests/r00524.vtc tests/r00545.vtc tests/r00549.vtc tests/r00558.vtc tests/r00561.vtc tests/r00590.vtc tests/r00612.vtc tests/r00641.vtc tests/r00655.vtc tests/r00667.vtc tests/r00679.vtc tests/r00686.vtc tests/r00694.vtc tests/r00700.vtc tests/r00702.vtc tests/r00704.vtc tests/r00722.vtc tests/r00733.vtc tests/r00742.vtc tests/r00763.vtc tests/r00769.vtc tests/r00776.vtc tests/r00781.vtc tests/r00789.vtc tests/r00795.vtc tests/r00801.vtc tests/r00803.vtc tests/r00806.vtc tests/r00832.vtc tests/r00861.vtc tests/r00873.vtc tests/r00878.vtc tests/r00894.vtc tests/r00896.vtc tests/r00902.vtc tests/r00911.vtc tests/r00913.vtc tests/r00915.vtc tests/r00916.vtc tests/r00917.vtc tests/r00921.vtc tests/r00940.vtc tests/r00941.vtc tests/r00942.vtc tests/r00948.vtc tests/r00956.vtc tests/r00961.vtc tests/r00962.vtc tests/r00963.vtc tests/r00965.vtc tests/r00972.vtc tests/r00979.vtc tests/r00980.vtc tests/r00984.vtc tests/r01002.vtc tests/r01014.vtc tests/r01029.vtc tests/r01030.vtc tests/r01036.vtc tests/r01037.vtc tests/r01038.vtc tests/r01068.vtc tests/r01073.vtc tests/r01086.vtc tests/r01092.vtc tests/r01109.vtc tests/r01113.vtc tests/r01120.vtc tests/r01123.vtc tests/r01134.vtc tests/r01140.vtc tests/r01144.vtc tests/r01145.vtc tests/r01156.vtc tests/r01157.vtc tests/r01164.vtc tests/r01168.vtc tests/r01169.vtc tests/r01175.vtc tests/r01176.vtc tests/r01184.vtc tests/r01211.vtc tests/r01212.vtc tests/r01218.vtc tests/r01225.vtc tests/r01255.vtc tests/r01266.vtc tests/r01274.vtc tests/r01275.vtc tests/r01284.vtc tests/r01287.vtc tests/r01296.vtc tests/r01312.vtc tests/r01320.vtc tests/r01332.vtc tests/r01333.vtc tests/r01337.vtc tests/r01349.vtc tests/r01350.vtc tests/r01355.vtc tests/r01356.vtc tests/r01367.vtc tests/r01391.vtc tests/r01395.vtc tests/r01398.vtc tests/r01399.vtc tests/r01401.vtc tests/r01404.vtc tests/r01406.vtc tests/r01417.vtc tests/r01419.vtc tests/r01441.vtc tests/r01442.vtc tests/r01468.vtc tests/r01478.vtc tests/r01485.vtc tests/r01490.vtc tests/r01493.vtc tests/r01494.vtc tests/r01498.vtc tests/r01499.vtc tests/r01501.vtc tests/r01504.vtc tests/r01510.vtc tests/r01512.vtc tests/r01518.vtc tests/r01524.vtc tests/r01532.vtc tests/r01557.vtc tests/r01562.vtc tests/r01566.vtc tests/r01569.vtc tests/r01575.vtc tests/r01577.vtc tests/r01578.vtc tests/r01581.vtc tests/r01598.vtc tests/r01602.vtc tests/r01608.vtc tests/r01612.vtc tests/r01613.vtc tests/r01624.vtc tests/r01627.vtc tests/r01637.vtc tests/r01638.vtc tests/r01641.vtc tests/r01644.vtc tests/r01648.vtc tests/r01650.vtc tests/r01660.vtc tests/r01662.vtc tests/r01665.vtc tests/r01672.vtc tests/r01684.vtc tests/r01688.vtc tests/r01691.vtc tests/r01693.vtc tests/r01729.vtc tests/r01730.vtc tests/r01737.vtc tests/r01739.vtc tests/r01746.vtc tests/r01755.vtc tests/r01761.vtc tests/r01762.vtc tests/r01764.vtc tests/r01765.vtc tests/r01768.vtc tests/r01772.vtc tests/r01775.vtc tests/r01777.vtc tests/r01781.vtc tests/r01783.vtc tests/r01801.vtc tests/r01804.vtc tests/r01806.vtc tests/r01807.vtc tests/r01810.vtc tests/r01818.vtc tests/r01821.vtc tests/r01826.vtc tests/r01834.vtc tests/r01837.vtc tests/r01838.vtc tests/r01843.vtc tests/r01847.vtc tests/r01856.vtc tests/r01857.vtc tests/r01858.vtc tests/r01878.vtc tests/r01879.vtc tests/r01881.vtc tests/r01890.vtc tests/r01914.vtc tests/r01918.vtc tests/r01924.vtc tests/r01927.vtc tests/r01941.vtc tests/r01953.vtc tests/r01955.vtc tests/r01956.vtc tests/r01990.vtc tests/r02035.vtc tests/r02036.vtc tests/r02042.vtc tests/r02069.vtc tests/r02084.vtc tests/r02105.vtc tests/r02135.vtc tests/r02142.vtc tests/r02148.vtc tests/r02157.vtc tests/r02175.vtc tests/r02177.vtc tests/r02219.vtc tests/r02233.vtc tests/r02258.vtc tests/r02262.vtc tests/r02266.vtc tests/r02270.vtc tests/r02275.vtc tests/r02291.vtc tests/r02300.vtc tests/r02305.vtc tests/r02310.vtc tests/r02319.vtc tests/r02321.vtc tests/r02325.vtc tests/r02339.vtc tests/r02342.vtc tests/r02351.vtc tests/r02367.vtc tests/r02372.vtc tests/r02387.vtc tests/r02395.vtc tests/r02406.vtc tests/r02413.vtc tests/r02422.vtc tests/r02429.vtc tests/r02432.vtc tests/r02433.vtc tests/r02451.vtc tests/r02471.vtc tests/r02488.vtc tests/r02494.vtc tests/r02527.vtc tests/r02530.vtc tests/r02539.vtc tests/r02554.vtc tests/r02555.vtc tests/r02589.vtc tests/r02617.vtc tests/r02618.vtc tests/r02633.vtc tests/r02645.vtc tests/r02646.vtc tests/r02647.vtc tests/r02649.vtc tests/r02679.vtc tests/r02686.vtc tests/r02690.vtc tests/r02700.vtc tests/r02702.vtc tests/r02705.vtc tests/r02763.vtc tests/r02775.vtc tests/r02831.vtc tests/r02839.vtc tests/r02849.vtc tests/r02872.vtc tests/r02880.vtc tests/r02887.vtc tests/r02923.vtc tests/r02934.vtc tests/r02937.vtc tests/r02946.vtc tests/r02964.vtc tests/r02976.vtc tests/r02990.vtc tests/r03003.vtc tests/r03006.vtc tests/r03019.vtc tests/r03038.vtc tests/r03079.vtc tests/r03089.vtc tests/r03093.vtc tests/r03098.vtc tests/r03109.vtc tests/r03131.vtc tests/r03159.vtc tests/r03169.vtc tests/r03189.vtc tests/r03221.vtc tests/r03241.vtc tests/r03253.vtc tests/r03266.vtc tests/r03301.vtc tests/r03319.vtc tests/r03353.vtc tests/r03360.vtc tests/r03394.vtc tests/r03402.vtc tests/r03410.vtc tests/s00000.vtc tests/s00001.vtc tests/s00002.vtc tests/s00003.vtc tests/s00004.vtc tests/s00005.vtc tests/s00006.vtc tests/s00007.vtc tests/s00008.vtc tests/s00009.vtc tests/s00010.vtc tests/s00011.vtc tests/s00012.vtc tests/t02000.vtc tests/t02001.vtc tests/t02002.vtc tests/t02003.vtc tests/t02004.vtc tests/t02005.vtc tests/t02006.vtc tests/t02007.vtc tests/t02008.vtc tests/t02009.vtc tests/t02010.vtc tests/t02011.vtc tests/t02012.vtc tests/t02013.vtc tests/t02014.vtc tests/t02015.vtc tests/t02016.vtc tests/u00000.vtc tests/u00003.vtc tests/u00004.vtc tests/u00005.vtc tests/u00006.vtc tests/u00007.vtc tests/u00008.vtc tests/u00009.vtc tests/u00010.vtc tests/u00011.vtc tests/u00012.vtc tests/u00013.vtc tests/u00014.vtc tests/u00015.vtc tests/v00000.vtc tests/v00001.vtc tests/v00002.vtc tests/v00003.vtc tests/v00004.vtc tests/v00005.vtc tests/v00006.vtc tests/v00008.vtc tests/v00010.vtc tests/v00011.vtc tests/v00012.vtc tests/v00013.vtc tests/v00014.vtc tests/v00015.vtc tests/v00016.vtc tests/v00017.vtc tests/v00018.vtc tests/v00019.vtc tests/v00020.vtc tests/v00021.vtc tests/v00024.vtc tests/v00025.vtc tests/v00027.vtc tests/v00031.vtc tests/v00032.vtc tests/v00033.vtc tests/v00034.vtc tests/v00037.vtc tests/v00038.vtc tests/v00039.vtc tests/v00040.vtc tests/v00041.vtc tests/v00042.vtc tests/v00043.vtc tests/v00045.vtc tests/v00046.vtc tests/v00047.vtc tests/v00049.vtc tests/v00050.vtc tests/v00051.vtc tests/v00052.vtc tests/v00054.vtc tests/v00055.vtc tests/v00056.vtc tests/v00057.vtc tests/v00058.vtc tests/v00059.vtc tests/v00060.vtc tests/v00062.vtc tests/v00063.vtc tests/v00064.vtc tests/v00065.vtc
VTC_LOG_COMPILER = $(top_builddir)/bin/varnishtest/varnishtest -v -i
TEST_EXTENSIONS = .vtc
DISTCLEANFILES = _.ok
AM_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_builddir)/include \
	-I$(top_srcdir)/lib/libvgz

varnishtest_SOURCES = \
		hpack.h \
		cmds.h \
		vtc.h \
		teken.c \
		teken.h \
		teken_scs.h \
		teken_subr.h \
		teken_subr_compat.h \
		teken_wcwidth.h \
		vtc.c \
		vtc_barrier.c \
		vtc_client.c \
		vtc_gzip.c \
		vtc_haproxy.c \
		vtc_h2_dectbl.h \
		vtc_h2_enctbl.h \
		vtc_h2_hpack.c \
		vtc_h2_priv.h \
		vtc_h2_stattbl.h \
		vtc_h2_tbl.c \
		vtc_http.c \
		vtc_http.h \
		vtc_http2.c \
		vtc_log.c \
		vtc_logexp.c \
		vtc_misc.c \
		vtc_main.c \
		vtc_process.c \
		vtc_proxy.c \
		vtc_server.c \
		vtc_sess.c \
		vtc_subr.c \
		vtc_syslog.c \
		vtc_varnish.c

varnishtest_LDADD = \
		$(top_builddir)/lib/libvarnish/libvarnish.la \
		$(top_builddir)/lib/libvarnishapi/libvarnishapi.la \
		$(top_builddir)/lib/libvgz/libvgz.a \
		 \
		-lpcre \
		${PTHREAD_LIBS} ${NET_LIBS} ${LIBM}

varnishtest_CFLAGS = \
		 \
		-DVTEST_WITH_VTC_LOGEXPECT \
		-DVTEST_WITH_VTC_VARNISH \
		-DTOP_BUILDDIR='"${top_builddir}"'

EXTRA_DIST = $(top_srcdir)/bin/varnishtest/tests/*.vtc \
	$(top_srcdir)/bin/varnishtest/tests/README \
	$(top_srcdir)/bin/varnishtest/gensequences \
	$(top_srcdir)/bin/varnishtest/sequences \
	$(top_srcdir)/bin/varnishtest/teken.3 \
	huffman_gen.py

BUILT_SOURCES = vtc_h2_dectbl.h
CLEANFILES = \
	$(builddir)/teken_state.h	\
	$(BUILT_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .trs .vtc .vtc$(EXEEXT)
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/vtc.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign bin/varnishtest/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign bin/varnishtest/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/vtc.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

varnishtest$(EXEEXT): $(varnishtest_OBJECTS) $(varnishtest_DEPENDENCIES) $(EXTRA_varnishtest_DEPENDENCIES) 
	@rm -f varnishtest$(EXEEXT)
	$(AM_V_CCLD)$(varnishtest_LINK) $(varnishtest_OBJECTS) $(varnishtest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/varnishtest-teken.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_barrier.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_client.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_gzip.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_h2_hpack.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_h2_tbl.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_haproxy.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_http.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_http2.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_log.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_logexp.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_main.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_misc.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_process.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_proxy.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_server.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_sess.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_subr.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_syslog.Po # am--include-marker
#include ./$(DEPDIR)/varnishtest-vtc_varnish.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

varnishtest-teken.o: teken.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-teken.o -MD -MP -MF $(DEPDIR)/varnishtest-teken.Tpo -c -o varnishtest-teken.o `test -f 'teken.c' || echo '$(srcdir)/'`teken.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-teken.Tpo $(DEPDIR)/varnishtest-teken.Po
#	$(AM_V_CC)source='teken.c' object='varnishtest-teken.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-teken.o `test -f 'teken.c' || echo '$(srcdir)/'`teken.c

varnishtest-teken.obj: teken.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-teken.obj -MD -MP -MF $(DEPDIR)/varnishtest-teken.Tpo -c -o varnishtest-teken.obj `if test -f 'teken.c'; then $(CYGPATH_W) 'teken.c'; else $(CYGPATH_W) '$(srcdir)/teken.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-teken.Tpo $(DEPDIR)/varnishtest-teken.Po
#	$(AM_V_CC)source='teken.c' object='varnishtest-teken.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-teken.obj `if test -f 'teken.c'; then $(CYGPATH_W) 'teken.c'; else $(CYGPATH_W) '$(srcdir)/teken.c'; fi`

varnishtest-vtc.o: vtc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc.Tpo -c -o varnishtest-vtc.o `test -f 'vtc.c' || echo '$(srcdir)/'`vtc.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc.Tpo $(DEPDIR)/varnishtest-vtc.Po
#	$(AM_V_CC)source='vtc.c' object='varnishtest-vtc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc.o `test -f 'vtc.c' || echo '$(srcdir)/'`vtc.c

varnishtest-vtc.obj: vtc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc.Tpo -c -o varnishtest-vtc.obj `if test -f 'vtc.c'; then $(CYGPATH_W) 'vtc.c'; else $(CYGPATH_W) '$(srcdir)/vtc.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc.Tpo $(DEPDIR)/varnishtest-vtc.Po
#	$(AM_V_CC)source='vtc.c' object='varnishtest-vtc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc.obj `if test -f 'vtc.c'; then $(CYGPATH_W) 'vtc.c'; else $(CYGPATH_W) '$(srcdir)/vtc.c'; fi`

varnishtest-vtc_barrier.o: vtc_barrier.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_barrier.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_barrier.Tpo -c -o varnishtest-vtc_barrier.o `test -f 'vtc_barrier.c' || echo '$(srcdir)/'`vtc_barrier.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_barrier.Tpo $(DEPDIR)/varnishtest-vtc_barrier.Po
#	$(AM_V_CC)source='vtc_barrier.c' object='varnishtest-vtc_barrier.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_barrier.o `test -f 'vtc_barrier.c' || echo '$(srcdir)/'`vtc_barrier.c

varnishtest-vtc_barrier.obj: vtc_barrier.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_barrier.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_barrier.Tpo -c -o varnishtest-vtc_barrier.obj `if test -f 'vtc_barrier.c'; then $(CYGPATH_W) 'vtc_barrier.c'; else $(CYGPATH_W) '$(srcdir)/vtc_barrier.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_barrier.Tpo $(DEPDIR)/varnishtest-vtc_barrier.Po
#	$(AM_V_CC)source='vtc_barrier.c' object='varnishtest-vtc_barrier.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_barrier.obj `if test -f 'vtc_barrier.c'; then $(CYGPATH_W) 'vtc_barrier.c'; else $(CYGPATH_W) '$(srcdir)/vtc_barrier.c'; fi`

varnishtest-vtc_client.o: vtc_client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_client.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_client.Tpo -c -o varnishtest-vtc_client.o `test -f 'vtc_client.c' || echo '$(srcdir)/'`vtc_client.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_client.Tpo $(DEPDIR)/varnishtest-vtc_client.Po
#	$(AM_V_CC)source='vtc_client.c' object='varnishtest-vtc_client.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_client.o `test -f 'vtc_client.c' || echo '$(srcdir)/'`vtc_client.c

varnishtest-vtc_client.obj: vtc_client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_client.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_client.Tpo -c -o varnishtest-vtc_client.obj `if test -f 'vtc_client.c'; then $(CYGPATH_W) 'vtc_client.c'; else $(CYGPATH_W) '$(srcdir)/vtc_client.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_client.Tpo $(DEPDIR)/varnishtest-vtc_client.Po
#	$(AM_V_CC)source='vtc_client.c' object='varnishtest-vtc_client.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_client.obj `if test -f 'vtc_client.c'; then $(CYGPATH_W) 'vtc_client.c'; else $(CYGPATH_W) '$(srcdir)/vtc_client.c'; fi`

varnishtest-vtc_gzip.o: vtc_gzip.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_gzip.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_gzip.Tpo -c -o varnishtest-vtc_gzip.o `test -f 'vtc_gzip.c' || echo '$(srcdir)/'`vtc_gzip.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_gzip.Tpo $(DEPDIR)/varnishtest-vtc_gzip.Po
#	$(AM_V_CC)source='vtc_gzip.c' object='varnishtest-vtc_gzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_gzip.o `test -f 'vtc_gzip.c' || echo '$(srcdir)/'`vtc_gzip.c

varnishtest-vtc_gzip.obj: vtc_gzip.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_gzip.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_gzip.Tpo -c -o varnishtest-vtc_gzip.obj `if test -f 'vtc_gzip.c'; then $(CYGPATH_W) 'vtc_gzip.c'; else $(CYGPATH_W) '$(srcdir)/vtc_gzip.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_gzip.Tpo $(DEPDIR)/varnishtest-vtc_gzip.Po
#	$(AM_V_CC)source='vtc_gzip.c' object='varnishtest-vtc_gzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_gzip.obj `if test -f 'vtc_gzip.c'; then $(CYGPATH_W) 'vtc_gzip.c'; else $(CYGPATH_W) '$(srcdir)/vtc_gzip.c'; fi`

varnishtest-vtc_haproxy.o: vtc_haproxy.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_haproxy.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_haproxy.Tpo -c -o varnishtest-vtc_haproxy.o `test -f 'vtc_haproxy.c' || echo '$(srcdir)/'`vtc_haproxy.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_haproxy.Tpo $(DEPDIR)/varnishtest-vtc_haproxy.Po
#	$(AM_V_CC)source='vtc_haproxy.c' object='varnishtest-vtc_haproxy.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_haproxy.o `test -f 'vtc_haproxy.c' || echo '$(srcdir)/'`vtc_haproxy.c

varnishtest-vtc_haproxy.obj: vtc_haproxy.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_haproxy.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_haproxy.Tpo -c -o varnishtest-vtc_haproxy.obj `if test -f 'vtc_haproxy.c'; then $(CYGPATH_W) 'vtc_haproxy.c'; else $(CYGPATH_W) '$(srcdir)/vtc_haproxy.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_haproxy.Tpo $(DEPDIR)/varnishtest-vtc_haproxy.Po
#	$(AM_V_CC)source='vtc_haproxy.c' object='varnishtest-vtc_haproxy.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_haproxy.obj `if test -f 'vtc_haproxy.c'; then $(CYGPATH_W) 'vtc_haproxy.c'; else $(CYGPATH_W) '$(srcdir)/vtc_haproxy.c'; fi`

varnishtest-vtc_h2_hpack.o: vtc_h2_hpack.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_h2_hpack.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_h2_hpack.Tpo -c -o varnishtest-vtc_h2_hpack.o `test -f 'vtc_h2_hpack.c' || echo '$(srcdir)/'`vtc_h2_hpack.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_h2_hpack.Tpo $(DEPDIR)/varnishtest-vtc_h2_hpack.Po
#	$(AM_V_CC)source='vtc_h2_hpack.c' object='varnishtest-vtc_h2_hpack.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_h2_hpack.o `test -f 'vtc_h2_hpack.c' || echo '$(srcdir)/'`vtc_h2_hpack.c

varnishtest-vtc_h2_hpack.obj: vtc_h2_hpack.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_h2_hpack.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_h2_hpack.Tpo -c -o varnishtest-vtc_h2_hpack.obj `if test -f 'vtc_h2_hpack.c'; then $(CYGPATH_W) 'vtc_h2_hpack.c'; else $(CYGPATH_W) '$(srcdir)/vtc_h2_hpack.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_h2_hpack.Tpo $(DEPDIR)/varnishtest-vtc_h2_hpack.Po
#	$(AM_V_CC)source='vtc_h2_hpack.c' object='varnishtest-vtc_h2_hpack.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_h2_hpack.obj `if test -f 'vtc_h2_hpack.c'; then $(CYGPATH_W) 'vtc_h2_hpack.c'; else $(CYGPATH_W) '$(srcdir)/vtc_h2_hpack.c'; fi`

varnishtest-vtc_h2_tbl.o: vtc_h2_tbl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_h2_tbl.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_h2_tbl.Tpo -c -o varnishtest-vtc_h2_tbl.o `test -f 'vtc_h2_tbl.c' || echo '$(srcdir)/'`vtc_h2_tbl.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_h2_tbl.Tpo $(DEPDIR)/varnishtest-vtc_h2_tbl.Po
#	$(AM_V_CC)source='vtc_h2_tbl.c' object='varnishtest-vtc_h2_tbl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_h2_tbl.o `test -f 'vtc_h2_tbl.c' || echo '$(srcdir)/'`vtc_h2_tbl.c

varnishtest-vtc_h2_tbl.obj: vtc_h2_tbl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_h2_tbl.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_h2_tbl.Tpo -c -o varnishtest-vtc_h2_tbl.obj `if test -f 'vtc_h2_tbl.c'; then $(CYGPATH_W) 'vtc_h2_tbl.c'; else $(CYGPATH_W) '$(srcdir)/vtc_h2_tbl.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_h2_tbl.Tpo $(DEPDIR)/varnishtest-vtc_h2_tbl.Po
#	$(AM_V_CC)source='vtc_h2_tbl.c' object='varnishtest-vtc_h2_tbl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_h2_tbl.obj `if test -f 'vtc_h2_tbl.c'; then $(CYGPATH_W) 'vtc_h2_tbl.c'; else $(CYGPATH_W) '$(srcdir)/vtc_h2_tbl.c'; fi`

varnishtest-vtc_http.o: vtc_http.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_http.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_http.Tpo -c -o varnishtest-vtc_http.o `test -f 'vtc_http.c' || echo '$(srcdir)/'`vtc_http.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_http.Tpo $(DEPDIR)/varnishtest-vtc_http.Po
#	$(AM_V_CC)source='vtc_http.c' object='varnishtest-vtc_http.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_http.o `test -f 'vtc_http.c' || echo '$(srcdir)/'`vtc_http.c

varnishtest-vtc_http.obj: vtc_http.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_http.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_http.Tpo -c -o varnishtest-vtc_http.obj `if test -f 'vtc_http.c'; then $(CYGPATH_W) 'vtc_http.c'; else $(CYGPATH_W) '$(srcdir)/vtc_http.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_http.Tpo $(DEPDIR)/varnishtest-vtc_http.Po
#	$(AM_V_CC)source='vtc_http.c' object='varnishtest-vtc_http.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_http.obj `if test -f 'vtc_http.c'; then $(CYGPATH_W) 'vtc_http.c'; else $(CYGPATH_W) '$(srcdir)/vtc_http.c'; fi`

varnishtest-vtc_http2.o: vtc_http2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_http2.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_http2.Tpo -c -o varnishtest-vtc_http2.o `test -f 'vtc_http2.c' || echo '$(srcdir)/'`vtc_http2.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_http2.Tpo $(DEPDIR)/varnishtest-vtc_http2.Po
#	$(AM_V_CC)source='vtc_http2.c' object='varnishtest-vtc_http2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_http2.o `test -f 'vtc_http2.c' || echo '$(srcdir)/'`vtc_http2.c

varnishtest-vtc_http2.obj: vtc_http2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_http2.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_http2.Tpo -c -o varnishtest-vtc_http2.obj `if test -f 'vtc_http2.c'; then $(CYGPATH_W) 'vtc_http2.c'; else $(CYGPATH_W) '$(srcdir)/vtc_http2.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_http2.Tpo $(DEPDIR)/varnishtest-vtc_http2.Po
#	$(AM_V_CC)source='vtc_http2.c' object='varnishtest-vtc_http2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_http2.obj `if test -f 'vtc_http2.c'; then $(CYGPATH_W) 'vtc_http2.c'; else $(CYGPATH_W) '$(srcdir)/vtc_http2.c'; fi`

varnishtest-vtc_log.o: vtc_log.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_log.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_log.Tpo -c -o varnishtest-vtc_log.o `test -f 'vtc_log.c' || echo '$(srcdir)/'`vtc_log.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_log.Tpo $(DEPDIR)/varnishtest-vtc_log.Po
#	$(AM_V_CC)source='vtc_log.c' object='varnishtest-vtc_log.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_log.o `test -f 'vtc_log.c' || echo '$(srcdir)/'`vtc_log.c

varnishtest-vtc_log.obj: vtc_log.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_log.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_log.Tpo -c -o varnishtest-vtc_log.obj `if test -f 'vtc_log.c'; then $(CYGPATH_W) 'vtc_log.c'; else $(CYGPATH_W) '$(srcdir)/vtc_log.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_log.Tpo $(DEPDIR)/varnishtest-vtc_log.Po
#	$(AM_V_CC)source='vtc_log.c' object='varnishtest-vtc_log.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_log.obj `if test -f 'vtc_log.c'; then $(CYGPATH_W) 'vtc_log.c'; else $(CYGPATH_W) '$(srcdir)/vtc_log.c'; fi`

varnishtest-vtc_logexp.o: vtc_logexp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_logexp.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_logexp.Tpo -c -o varnishtest-vtc_logexp.o `test -f 'vtc_logexp.c' || echo '$(srcdir)/'`vtc_logexp.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_logexp.Tpo $(DEPDIR)/varnishtest-vtc_logexp.Po
#	$(AM_V_CC)source='vtc_logexp.c' object='varnishtest-vtc_logexp.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_logexp.o `test -f 'vtc_logexp.c' || echo '$(srcdir)/'`vtc_logexp.c

varnishtest-vtc_logexp.obj: vtc_logexp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_logexp.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_logexp.Tpo -c -o varnishtest-vtc_logexp.obj `if test -f 'vtc_logexp.c'; then $(CYGPATH_W) 'vtc_logexp.c'; else $(CYGPATH_W) '$(srcdir)/vtc_logexp.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_logexp.Tpo $(DEPDIR)/varnishtest-vtc_logexp.Po
#	$(AM_V_CC)source='vtc_logexp.c' object='varnishtest-vtc_logexp.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_logexp.obj `if test -f 'vtc_logexp.c'; then $(CYGPATH_W) 'vtc_logexp.c'; else $(CYGPATH_W) '$(srcdir)/vtc_logexp.c'; fi`

varnishtest-vtc_misc.o: vtc_misc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_misc.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_misc.Tpo -c -o varnishtest-vtc_misc.o `test -f 'vtc_misc.c' || echo '$(srcdir)/'`vtc_misc.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_misc.Tpo $(DEPDIR)/varnishtest-vtc_misc.Po
#	$(AM_V_CC)source='vtc_misc.c' object='varnishtest-vtc_misc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_misc.o `test -f 'vtc_misc.c' || echo '$(srcdir)/'`vtc_misc.c

varnishtest-vtc_misc.obj: vtc_misc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_misc.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_misc.Tpo -c -o varnishtest-vtc_misc.obj `if test -f 'vtc_misc.c'; then $(CYGPATH_W) 'vtc_misc.c'; else $(CYGPATH_W) '$(srcdir)/vtc_misc.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_misc.Tpo $(DEPDIR)/varnishtest-vtc_misc.Po
#	$(AM_V_CC)source='vtc_misc.c' object='varnishtest-vtc_misc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_misc.obj `if test -f 'vtc_misc.c'; then $(CYGPATH_W) 'vtc_misc.c'; else $(CYGPATH_W) '$(srcdir)/vtc_misc.c'; fi`

varnishtest-vtc_main.o: vtc_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_main.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_main.Tpo -c -o varnishtest-vtc_main.o `test -f 'vtc_main.c' || echo '$(srcdir)/'`vtc_main.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_main.Tpo $(DEPDIR)/varnishtest-vtc_main.Po
#	$(AM_V_CC)source='vtc_main.c' object='varnishtest-vtc_main.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_main.o `test -f 'vtc_main.c' || echo '$(srcdir)/'`vtc_main.c

varnishtest-vtc_main.obj: vtc_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_main.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_main.Tpo -c -o varnishtest-vtc_main.obj `if test -f 'vtc_main.c'; then $(CYGPATH_W) 'vtc_main.c'; else $(CYGPATH_W) '$(srcdir)/vtc_main.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_main.Tpo $(DEPDIR)/varnishtest-vtc_main.Po
#	$(AM_V_CC)source='vtc_main.c' object='varnishtest-vtc_main.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_main.obj `if test -f 'vtc_main.c'; then $(CYGPATH_W) 'vtc_main.c'; else $(CYGPATH_W) '$(srcdir)/vtc_main.c'; fi`

varnishtest-vtc_process.o: vtc_process.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_process.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_process.Tpo -c -o varnishtest-vtc_process.o `test -f 'vtc_process.c' || echo '$(srcdir)/'`vtc_process.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_process.Tpo $(DEPDIR)/varnishtest-vtc_process.Po
#	$(AM_V_CC)source='vtc_process.c' object='varnishtest-vtc_process.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_process.o `test -f 'vtc_process.c' || echo '$(srcdir)/'`vtc_process.c

varnishtest-vtc_process.obj: vtc_process.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_process.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_process.Tpo -c -o varnishtest-vtc_process.obj `if test -f 'vtc_process.c'; then $(CYGPATH_W) 'vtc_process.c'; else $(CYGPATH_W) '$(srcdir)/vtc_process.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_process.Tpo $(DEPDIR)/varnishtest-vtc_process.Po
#	$(AM_V_CC)source='vtc_process.c' object='varnishtest-vtc_process.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_process.obj `if test -f 'vtc_process.c'; then $(CYGPATH_W) 'vtc_process.c'; else $(CYGPATH_W) '$(srcdir)/vtc_process.c'; fi`

varnishtest-vtc_proxy.o: vtc_proxy.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_proxy.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_proxy.Tpo -c -o varnishtest-vtc_proxy.o `test -f 'vtc_proxy.c' || echo '$(srcdir)/'`vtc_proxy.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_proxy.Tpo $(DEPDIR)/varnishtest-vtc_proxy.Po
#	$(AM_V_CC)source='vtc_proxy.c' object='varnishtest-vtc_proxy.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_proxy.o `test -f 'vtc_proxy.c' || echo '$(srcdir)/'`vtc_proxy.c

varnishtest-vtc_proxy.obj: vtc_proxy.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_proxy.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_proxy.Tpo -c -o varnishtest-vtc_proxy.obj `if test -f 'vtc_proxy.c'; then $(CYGPATH_W) 'vtc_proxy.c'; else $(CYGPATH_W) '$(srcdir)/vtc_proxy.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_proxy.Tpo $(DEPDIR)/varnishtest-vtc_proxy.Po
#	$(AM_V_CC)source='vtc_proxy.c' object='varnishtest-vtc_proxy.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_proxy.obj `if test -f 'vtc_proxy.c'; then $(CYGPATH_W) 'vtc_proxy.c'; else $(CYGPATH_W) '$(srcdir)/vtc_proxy.c'; fi`

varnishtest-vtc_server.o: vtc_server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_server.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_server.Tpo -c -o varnishtest-vtc_server.o `test -f 'vtc_server.c' || echo '$(srcdir)/'`vtc_server.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_server.Tpo $(DEPDIR)/varnishtest-vtc_server.Po
#	$(AM_V_CC)source='vtc_server.c' object='varnishtest-vtc_server.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_server.o `test -f 'vtc_server.c' || echo '$(srcdir)/'`vtc_server.c

varnishtest-vtc_server.obj: vtc_server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_server.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_server.Tpo -c -o varnishtest-vtc_server.obj `if test -f 'vtc_server.c'; then $(CYGPATH_W) 'vtc_server.c'; else $(CYGPATH_W) '$(srcdir)/vtc_server.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_server.Tpo $(DEPDIR)/varnishtest-vtc_server.Po
#	$(AM_V_CC)source='vtc_server.c' object='varnishtest-vtc_server.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_server.obj `if test -f 'vtc_server.c'; then $(CYGPATH_W) 'vtc_server.c'; else $(CYGPATH_W) '$(srcdir)/vtc_server.c'; fi`

varnishtest-vtc_sess.o: vtc_sess.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_sess.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_sess.Tpo -c -o varnishtest-vtc_sess.o `test -f 'vtc_sess.c' || echo '$(srcdir)/'`vtc_sess.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_sess.Tpo $(DEPDIR)/varnishtest-vtc_sess.Po
#	$(AM_V_CC)source='vtc_sess.c' object='varnishtest-vtc_sess.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_sess.o `test -f 'vtc_sess.c' || echo '$(srcdir)/'`vtc_sess.c

varnishtest-vtc_sess.obj: vtc_sess.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_sess.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_sess.Tpo -c -o varnishtest-vtc_sess.obj `if test -f 'vtc_sess.c'; then $(CYGPATH_W) 'vtc_sess.c'; else $(CYGPATH_W) '$(srcdir)/vtc_sess.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_sess.Tpo $(DEPDIR)/varnishtest-vtc_sess.Po
#	$(AM_V_CC)source='vtc_sess.c' object='varnishtest-vtc_sess.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_sess.obj `if test -f 'vtc_sess.c'; then $(CYGPATH_W) 'vtc_sess.c'; else $(CYGPATH_W) '$(srcdir)/vtc_sess.c'; fi`

varnishtest-vtc_subr.o: vtc_subr.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_subr.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_subr.Tpo -c -o varnishtest-vtc_subr.o `test -f 'vtc_subr.c' || echo '$(srcdir)/'`vtc_subr.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_subr.Tpo $(DEPDIR)/varnishtest-vtc_subr.Po
#	$(AM_V_CC)source='vtc_subr.c' object='varnishtest-vtc_subr.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_subr.o `test -f 'vtc_subr.c' || echo '$(srcdir)/'`vtc_subr.c

varnishtest-vtc_subr.obj: vtc_subr.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_subr.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_subr.Tpo -c -o varnishtest-vtc_subr.obj `if test -f 'vtc_subr.c'; then $(CYGPATH_W) 'vtc_subr.c'; else $(CYGPATH_W) '$(srcdir)/vtc_subr.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_subr.Tpo $(DEPDIR)/varnishtest-vtc_subr.Po
#	$(AM_V_CC)source='vtc_subr.c' object='varnishtest-vtc_subr.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_subr.obj `if test -f 'vtc_subr.c'; then $(CYGPATH_W) 'vtc_subr.c'; else $(CYGPATH_W) '$(srcdir)/vtc_subr.c'; fi`

varnishtest-vtc_syslog.o: vtc_syslog.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_syslog.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_syslog.Tpo -c -o varnishtest-vtc_syslog.o `test -f 'vtc_syslog.c' || echo '$(srcdir)/'`vtc_syslog.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_syslog.Tpo $(DEPDIR)/varnishtest-vtc_syslog.Po
#	$(AM_V_CC)source='vtc_syslog.c' object='varnishtest-vtc_syslog.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_syslog.o `test -f 'vtc_syslog.c' || echo '$(srcdir)/'`vtc_syslog.c

varnishtest-vtc_syslog.obj: vtc_syslog.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_syslog.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_syslog.Tpo -c -o varnishtest-vtc_syslog.obj `if test -f 'vtc_syslog.c'; then $(CYGPATH_W) 'vtc_syslog.c'; else $(CYGPATH_W) '$(srcdir)/vtc_syslog.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_syslog.Tpo $(DEPDIR)/varnishtest-vtc_syslog.Po
#	$(AM_V_CC)source='vtc_syslog.c' object='varnishtest-vtc_syslog.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_syslog.obj `if test -f 'vtc_syslog.c'; then $(CYGPATH_W) 'vtc_syslog.c'; else $(CYGPATH_W) '$(srcdir)/vtc_syslog.c'; fi`

varnishtest-vtc_varnish.o: vtc_varnish.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_varnish.o -MD -MP -MF $(DEPDIR)/varnishtest-vtc_varnish.Tpo -c -o varnishtest-vtc_varnish.o `test -f 'vtc_varnish.c' || echo '$(srcdir)/'`vtc_varnish.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_varnish.Tpo $(DEPDIR)/varnishtest-vtc_varnish.Po
#	$(AM_V_CC)source='vtc_varnish.c' object='varnishtest-vtc_varnish.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_varnish.o `test -f 'vtc_varnish.c' || echo '$(srcdir)/'`vtc_varnish.c

varnishtest-vtc_varnish.obj: vtc_varnish.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -MT varnishtest-vtc_varnish.obj -MD -MP -MF $(DEPDIR)/varnishtest-vtc_varnish.Tpo -c -o varnishtest-vtc_varnish.obj `if test -f 'vtc_varnish.c'; then $(CYGPATH_W) 'vtc_varnish.c'; else $(CYGPATH_W) '$(srcdir)/vtc_varnish.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishtest-vtc_varnish.Tpo $(DEPDIR)/varnishtest-vtc_varnish.Po
#	$(AM_V_CC)source='vtc_varnish.c' object='varnishtest-vtc_varnish.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishtest_CFLAGS) $(CFLAGS) -c -o varnishtest-vtc_varnish.obj `if test -f 'vtc_varnish.c'; then $(CYGPATH_W) 'vtc_varnish.c'; else $(CYGPATH_W) '$(srcdir)/vtc_varnish.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.vtc.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(VTC_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_VTC_LOG_DRIVER_FLAGS) $(VTC_LOG_DRIVER_FLAGS) -- $(VTC_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.vtc$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(VTC_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_VTC_LOG_DRIVER_FLAGS) $(VTC_LOG_DRIVER_FLAGS) -- $(VTC_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/varnishtest-teken.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_barrier.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_client.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_gzip.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_h2_hpack.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_h2_tbl.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_haproxy.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_http.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_http2.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_log.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_logexp.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_main.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_misc.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_process.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_proxy.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_server.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_sess.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_subr.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_syslog.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_varnish.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/varnishtest-teken.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_barrier.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_client.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_gzip.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_h2_hpack.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_h2_tbl.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_haproxy.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_http.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_http2.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_log.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_logexp.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_main.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_misc.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_process.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_proxy.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_server.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_sess.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_subr.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_syslog.Po
	-rm -f ./$(DEPDIR)/varnishtest-vtc_varnish.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


vtc-refresh-tests:
	@cd $(top_builddir) && ./config.status --recheck

check-am: vtc-check-tests

vtc-check-tests:
	@mkdir -p tests ; \
	LC_ALL=C; \
	if [ "$$(cd $(srcdir) && echo tests/*.vtc)" != "$(TESTS)" ]; then \
		$(MAKE) $(AM_MAKEFLAGS) vtc-refresh-tests ; \
	fi

teken.c: teken_state.h

teken_state.h:	$(srcdir)/sequences $(srcdir)/gensequences
	awk -f $(srcdir)/gensequences $(srcdir)/sequences \
	    > $(builddir)/teken_state.h

vtc_h2_hpack.c: vtc_h2_dectbl.h
vtc_h2_dectbl.h: huffman_gen.py $(top_srcdir)/include/tbl/vhp_huffman.h
	$(PYTHON) $(srcdir)/huffman_gen.py \
	    $(top_srcdir)/include/tbl/vhp_huffman.h > $@_
	mv $@_ $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
