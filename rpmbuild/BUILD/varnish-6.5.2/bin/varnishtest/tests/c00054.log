**** dT   0.000
*    top  TEST ./tests/c00054.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 37709
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.56033.753a35ab
**   top  === varnishtest "bitmap params masking"
*    top  VTEST bitmap params masking
**   top  === server s1 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=37007
**** s1   macro def s1_sock=127.0.0.1 37007
*    s1   Listen on 127.0.0.1 37007
**   top  === varnish v1 -vcl+backend {} -start
**   s1   Started on 127.0.0.1 37007 (1 iterations)
**** dT   0.005
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.56033.753a35ab/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 36357' -P /tmp/vtc.56033.753a35ab/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.56033.753a35ab/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 36357' -P /tmp/vtc.56033.753a35ab/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   PID: 56052
**** v1   macro def v1_pid=56052
**** v1   macro def v1_name=/tmp/vtc.56033.753a35ab/v1
**** dT   0.013
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.112
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 7
***  v1   CLI RX  107
**** v1   CLI RX|acykxmononzkvsitelzkekblmgtlghoj
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** v1   CLI TX|auth d4338ace09c9b36b6e3a620e292a8674869d1f5ae5e8830e9089ed89771d34e4
**** dT   0.113
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**** v1   CLI TX|vcl.inline vcl1 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|backend s1 { .host = "127.0.0.1"; .port = "37007"; }
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.213
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.281
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl1
***  v1   CLI RX  200
**   v1   Start
**** v1   CLI TX|start
**** dT   0.284
***  v1   debug|Debug: Child (56064) Started
**** dT   0.309
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   debug|Info: Child (56064) said Child starts
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
**** dT   0.314
**** v1   vsl|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892678.155932/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl1.1634892678.155932/vgc.so" as "vcl1"
**** v1   vsl|          0 CLI             - Rd vcl.use "vcl1"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** dT   0.410
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 33599
**** v1   CLI TX|debug.xid 999
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 33599
**   v1   Listen on 127.0.0.1 33599
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=33599
**** v1   macro def v1_sock=127.0.0.1 33599
**   top  === varnish v1 -cliok "param.show vsl_mask"
**** v1   CLI TX|param.show vsl_mask
***  v1   CLI RX  200
**** v1   CLI RX|vsl_mask
**** v1   CLI RX|        Value is: -ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VCL_trace,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|        Default is: -Debug,-ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VCL_trace,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|
**** v1   CLI RX|        Mask individual VSL messages from being logged.
**** v1   CLI RX|           default             Set default value
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix in front of VSL tag name to unmask/mask
**** v1   CLI RX|        individual VSL messages.
**** v1   CLI RX|
**   v1   CLI 200 <param.show vsl_mask>
**   top  === varnish v1 -cliok "param.set vsl_mask +VCL_trace"
**** v1   CLI TX|param.set vsl_mask +VCL_trace
***  v1   CLI RX  200
**   v1   CLI 200 <param.set vsl_mask +VCL_trace>
**   top  === varnish v1 -cliok "param.show vsl_mask"
**** v1   CLI TX|param.show vsl_mask
***  v1   CLI RX  200
**** v1   CLI RX|vsl_mask
**** v1   CLI RX|        Value is: -ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|        Default is: -Debug,-ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VCL_trace,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|
**** v1   CLI RX|        Mask individual VSL messages from being logged.
**** v1   CLI RX|           default             Set default value
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix in front of VSL tag name to unmask/mask
**** v1   CLI RX|        individual VSL messages.
**** v1   CLI RX|
**   v1   CLI 200 <param.show vsl_mask>
**   top  === varnish v1 -cliok "param.set vsl_mask -WorkThread,-TTL"
**** v1   CLI TX|param.set vsl_mask -WorkThread,-TTL
***  v1   CLI RX  200
**   v1   CLI 200 <param.set vsl_mask -WorkThread,-TTL>
**   top  === varnish v1 -cliok "param.show vsl_mask"
**** v1   CLI TX|param.show vsl_mask
**** dT   0.411
***  v1   CLI RX  200
**** v1   CLI RX|vsl_mask
**** v1   CLI RX|        Value is: -ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-TTL,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|        Default is: -Debug,-ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VCL_trace,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|
**** v1   CLI RX|        Mask individual VSL messages from being logged.
**** v1   CLI RX|           default             Set default value
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix in front of VSL tag name to unmask/mask
**** v1   CLI RX|        individual VSL messages.
**** v1   CLI RX|
**   v1   CLI 200 <param.show vsl_mask>
**   top  === varnish v1 -cliok "param.set vsl_mask +WorkThread,+TTL,+Hash...
**** v1   CLI TX|param.set vsl_mask +WorkThread,+TTL,+Hash
***  v1   CLI RX  200
**   v1   CLI 200 <param.set vsl_mask +WorkThread,+TTL,+Hash>
**   top  === varnish v1 -cliok "param.show vsl_mask"
**** v1   CLI TX|param.show vsl_mask
***  v1   CLI RX  200
**** v1   CLI RX|vsl_mask
**** v1   CLI RX|        Value is: -ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|        Default is: -Debug,-ObjProtocol,-ObjStatus,-ObjReason,-ObjHeader,-VCL_trace,-WorkThread,-Hash,-VfpAcct,-H2RxHdr,-H2RxBody,-H2TxHdr,-H2TxBody
**** v1   CLI RX|
**** v1   CLI RX|        Mask individual VSL messages from being logged.
**** v1   CLI RX|           default             Set default value
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix in front of VSL tag name to unmask/mask
**** v1   CLI RX|        individual VSL messages.
**** v1   CLI RX|
**   v1   CLI 200 <param.show vsl_mask>
**   top  === varnish v1 -clierr 106 "param.set vsl_mask FooBar"
**** v1   CLI TX|param.set vsl_mask FooBar
***  v1   CLI RX  106
**** v1   CLI RX|Missing '+' or '-' (FooBar)
**** v1   CLI RX|
**** v1   CLI RX|(attempting to set param 'vsl_mask' to 'FooBar')
**   v1   CLI 106 <param.set vsl_mask FooBar>
**   top  === varnish v1 -clierr 106 "param.set vsl_mask -FooBar"
**** v1   CLI TX|param.set vsl_mask -FooBar
***  v1   CLI RX  106
**** v1   CLI RX|Unknown VSL tag (-FooBar)
**** v1   CLI RX|
**** v1   CLI RX|(attempting to set param 'vsl_mask' to '-FooBar')
**   v1   CLI 106 <param.set vsl_mask -FooBar>
**   top  === varnish v1 -clierr 106 {param.set vsl_mask \"}
**** v1   CLI TX|param.set vsl_mask \"
***  v1   CLI RX  106
**** v1   CLI RX|Cannot parse: Missing '"'
**** v1   CLI RX|
**** v1   CLI RX|(attempting to set param 'vsl_mask' to '"')
**   v1   CLI 106 <param.set vsl_mask \">
**   top  === varnish v1 -cliok "param.set debug +workspace"
**** v1   CLI TX|param.set debug +workspace
***  v1   CLI RX  200
**   v1   CLI 200 <param.set debug +workspace>
**   top  === varnish v1 -cliok "param.show debug"
**** v1   CLI TX|param.show debug
***  v1   CLI RX  200
**** v1   CLI RX|debug
**** v1   CLI RX|        Value is: +workspace,+vtc_mode
**** v1   CLI RX|        Default is: none
**** v1   CLI RX|
**** v1   CLI RX|        Enable/Disable various kinds of debugging.
**** v1   CLI RX|           none                Disable all debugging
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix to set/reset individual bits:
**** v1   CLI RX|           req_state           VSL Request state engine
**** v1   CLI RX|           workspace           VSL Workspace operations
**** v1   CLI RX|           waitinglist         VSL Waitinglist events
**** v1   CLI RX|           syncvsl             Make VSL synchronous
**** v1   CLI RX|           hashedge            Edge cases in Hash
**** v1   CLI RX|           vclrel              Rapid VCL release
**** v1   CLI RX|           lurker              VSL Ban lurker
**** v1   CLI RX|           esi_chop            Chop ESI fetch to bits
**** v1   CLI RX|           flush_head          Flush after http1 head
**** v1   CLI RX|           vtc_mode            Varnishtest Mode
**** v1   CLI RX|           witness             Emit WITNESS lock records
**** v1   CLI RX|           vsm_keep            Keep the VSM file on restart
**** v1   CLI RX|           drop_pools          Drop thread pools (testing)
**** v1   CLI RX|           slow_acceptor       Slow down Acceptor
**** v1   CLI RX|           h2_nocheck          Disable various H2 checks
**** v1   CLI RX|           vmod_so_keep        Keep copied VMOD libraries
**** v1   CLI RX|           processors          Fetch/Deliver processors
**** v1   CLI RX|           protocol            Protocol debugging
**** v1   CLI RX|           vcl_keep            Keep VCL C and so files
**** v1   CLI RX|           lck                 Additional lock statistics
**** v1   CLI RX|
**   v1   CLI 200 <param.show debug>
**   top  === varnish v1 -cliok "param.show feature"
**** v1   CLI TX|param.show feature
***  v1   CLI RX  200
**** v1   CLI RX|feature
**** v1   CLI RX|        Value is: none (default)
**** v1   CLI RX|
**** v1   CLI RX|        Enable/Disable various minor features.
**** v1   CLI RX|           none                       Disable all features.
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix to enable/disable individual feature:
**** v1   CLI RX|           http2                      Enable HTTP/2 protocol support.
**** v1   CLI RX|           short_panic                Short panic message.
**** v1   CLI RX|           no_coredump                No coredumps.  Must be set before
**** v1   CLI RX|                                      child process starts.
**** v1   CLI RX|           https_scheme               Extract host from full URI in the
**** v1   CLI RX|                                      HTTP/1 request line, if the
**** v1   CLI RX|                                      scheme is https.
**** v1   CLI RX|           http_date_postel           Tolerate non compliant timestamp
**** v1   CLI RX|                                      headers like `Date`,
**** v1   CLI RX|                                      `Last-Modified`, `Expires` etc.
**** v1   CLI RX|           esi_ignore_https           Convert `<esi:include
**** v1   CLI RX|                                      src"https://...` to `http://...`
**** v1   CLI RX|           esi_disable_xml_check      Allow ESI processing on non-XML
**** v1   CLI RX|                                      ESI bodies
**** v1   CLI RX|           esi_ignore_other_elements  Ignore XML syntax errors in ESI
**** v1   CLI RX|                                      bodies.
**** v1   CLI RX|           esi_remove_bom             Ignore UTF-8 BOM in ESI bodies.
**** v1   CLI RX|           wait_silo                  Wait for persistent silos to
**** v1   CLI RX|                                      completely load before serving
**** v1   CLI RX|                                      requests.
**** v1   CLI RX|
**   v1   CLI 200 <param.show feature>
**   top  === varnish v1 -cliok "param.set feature +short_panic"
**** v1   CLI TX|param.set feature +short_panic
**** dT   0.412
***  v1   CLI RX  200
**   v1   CLI 200 <param.set feature +short_panic>
**   top  === varnish v1 -cliok "param.show feature"
**** v1   CLI TX|param.show feature
***  v1   CLI RX  200
**** v1   CLI RX|feature
**** v1   CLI RX|        Value is: +short_panic
**** v1   CLI RX|        Default is: none
**** v1   CLI RX|
**** v1   CLI RX|        Enable/Disable various minor features.
**** v1   CLI RX|           none                       Disable all features.
**** v1   CLI RX|
**** v1   CLI RX|        Use +/- prefix to enable/disable individual feature:
**** v1   CLI RX|           http2                      Enable HTTP/2 protocol support.
**** v1   CLI RX|           short_panic                Short panic message.
**** v1   CLI RX|           no_coredump                No coredumps.  Must be set before
**** v1   CLI RX|                                      child process starts.
**** v1   CLI RX|           https_scheme               Extract host from full URI in the
**** v1   CLI RX|                                      HTTP/1 request line, if the
**** v1   CLI RX|                                      scheme is https.
**** v1   CLI RX|           http_date_postel           Tolerate non compliant timestamp
**** v1   CLI RX|                                      headers like `Date`,
**** v1   CLI RX|                                      `Last-Modified`, `Expires` etc.
**** v1   CLI RX|           esi_ignore_https           Convert `<esi:include
**** v1   CLI RX|                                      src"https://...` to `http://...`
**** v1   CLI RX|           esi_disable_xml_check      Allow ESI processing on non-XML
**** v1   CLI RX|                                      ESI bodies
**** v1   CLI RX|           esi_ignore_other_elements  Ignore XML syntax errors in ESI
**** v1   CLI RX|                                      bodies.
**** v1   CLI RX|           esi_remove_bom             Ignore UTF-8 BOM in ESI bodies.
**** v1   CLI RX|           wait_silo                  Wait for persistent silos to
**** v1   CLI RX|                                      completely load before serving
**** v1   CLI RX|                                      requests.
**** v1   CLI RX|
**   v1   CLI 200 <param.show feature>
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 33599 (1 iterations)
***  c1   Connect to 127.0.0.1 33599
***  c1   connected fd 17 from 127.0.0.1 41766 to 127.0.0.1 33599
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   0.413
***  s1   accepted fd 5 127.0.0.1 41952
**   s1   === rxreq
**** dT   0.414
**** s1   rxhdr|GET / HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1002\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 103
**** s1   http[ 0] |GET
**** s1   http[ 1] |/
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |host: 127.0.0.1
**** s1   http[ 5] |Accept-Encoding: gzip
**** s1   http[ 6] |X-Varnish: 1002
**** s1   bodylen = 0
**   s1   === txresp
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|Content-Length: 0\r
**** s1   txresp|\r
***  s1   shutting fd 5
**   s1   Ending
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 33599

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 33599

**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e4c62be58, 152/152) = 152
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 152 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 152 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 152 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 152 2040)
**** v1   vsl|          0 Debug           - WS_Init(0x7f0e20000bc0, "ses", 0x7f0e20000c18, 584)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 0 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 0 0 576)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e20000bc0, 32/32) = 32
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 0 32 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 0 32 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 0 32 576)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20000bc0, 32)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 32 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 32 0 576)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e20000bc0, 16/10) = 16
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 32 16 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 32 16 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 32 16 576)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20000bc0, 16)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 48 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 48 0 576)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e20000bc0, 8/6) = 8
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 48 8 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 48 8 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 48 8 576)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20000bc0, 8)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 56 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 56 0 576)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e20000bc0, 32/32) = 32
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 56 32 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 56 32 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 56 32 576)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20000bc0, 32)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 88 0 576)
**** v1   vsl|       1000 Begin           c sess 0 HTTP/1
**** v1   vsl|       1000 SessOpen        c 127.0.0.1 41766 a0 127.0.0.1 33599 1634892678.455401 25
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 152 2040)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e4c62be58, 0)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Init(0x7f0e20001110, "req", 0x7f0e20003070, 57136)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57128
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 88 0 576)
**** v1   vsl|          0 Debug           - WS_ReserveSize(0x7f0e20000bc0, 8/8) = 8
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 88 8 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 88 8 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 88 8 576)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20000bc0, 8)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS_ReleaseP(0x7f0e20001110, 0x7f0e20003093 (35))
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 0 57128)
**** v1   vsl|       1000 Link            c req 1001 rxreq
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 0 57128)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e20001110) = 0x7f0e20003098
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 57088 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57088
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 57088 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 57088 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 40 57088 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 32)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57056
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 0)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57056
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 72 57056 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 16)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57040
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 0)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS_Init(0x7f0e20011270, "bo", 0x7f0e20013180, 57488)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 57480 57480)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20011270) = 57480
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 57480 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 57480 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 0 57480 57480)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20011270, 24)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 24 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 24 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 24 0 57480)
**** v1   vsl|          0 Debug           - WS_Copy(0x7f0e20011270, 4) = 0x7f0e20013198
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 32 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 32 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 32 0 57480)
**** v1   vsl|          0 Debug           - WS_Copy(0x7f0e20011270, 2) = 0x7f0e200131a0
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 40 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 40 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 40 0 57480)
**** v1   vsl|          0 Debug           - WS_Copy(0x7f0e20011270, 9) = 0x7f0e200131a8
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 56 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 56 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 56 0 57480)
**** v1   vsl|          0 Debug           - WS_Copy(0x7f0e20011270, 27) = 0x7f0e200131b8
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 88 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 88 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 88 0 57480)
**** v1   vsl|          0 Debug           - WS_Copy(0x7f0e20011270, 16) = 0x7f0e200131d8
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 0 57480)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e20011270) = 0x7f0e200131e8
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 57376 57480)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20011270) = 57376
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 57376 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 57376 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 104 57376 57480)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20011270, 16)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 120 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c63ae58) = 0x7f0e4c63a390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c63ae58) = 0x7f0e4c63a390
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 120 0 57480)
**** v1   vsl|          0 Debug           - WS_Alloc(0x7f0e20011270, 104) = 0x7f0e200131f8
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c63ae58) = 0x7f0e4c63a390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Alloc(0x7f0e4c63ae58, 104) = 0x7f0e4c63a390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e4c63ae58) = 1936
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e4c63ae58, 0)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 104 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c63ae58, 0x7f0e4c63a390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20011270) = 57256
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 224 57256 57480)
**** v1   vsl|          0 Debug           - WS_ReleaseP(0x7f0e20011270, 0x7f0e20013286 (38))
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 264 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 264 0 57480)
**** v1   vsl|          0 Debug           - WS_Alloc(0x7f0e20011270, 40) = 0x7f0e20013288
**** v1   vsl|          0 Debug           - WS(0x7f0e20011270) = (bo, 0x7f0e20013180 304 0 57480)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c63ae58) = 0x7f0e4c63a390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c63ae58) = 0x7f0e4c63a390
**** dT   0.425
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Content-Length: 0\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:51:18 GMT\r
**** c1   rxhdr|X-Varnish: 1001\r
**** c1   rxhdr|Age: 0\r
**** c1   rxhdr|Via: 1.1 varnish (Varnish/6.5)\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 178
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Content-Length: 0
**** c1   http[ 4] |Date: Fri, 22 Oct 2021 08:51:18 GMT
**** c1   http[ 5] |X-Varnish: 1001
**** c1   http[ 6] |Age: 0
**** c1   http[ 7] |Via: 1.1 varnish (Varnish/6.5)
**** c1   http[ 8] |Accept-Ranges: bytes
**** c1   http[ 9] |Connection: keep-alive
**** c1   bodylen = 0
***  c1   closing fd 17
**   c1   Ending
*    top  RESETTING after ./tests/c00054.vtc
**   s1   Waiting for server (4/-1)
**   v1   Wait
**** v1   CLI TX|backend.list
**** dT   0.426
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin      Probe    Health     Last change
**** v1   CLI RX|vcl1.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:51:18 GMT
**   v1   Stop
**** v1   CLI TX|stop
***  v1   debug|Debug: Stopping Child
**** dT   0.515
**** v1   vsl|       1002 Begin           b bereq 1001 fetch
**** v1   vsl|       1002 VCL_use         b vcl1
**** v1   vsl|       1002 Timestamp       b Start: 1634892678.455757 0.000000 0.000000
**** v1   vsl|       1002 BereqMethod     b GET
**** v1   vsl|       1002 BereqURL        b /
**** v1   vsl|       1002 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1002 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1002 BereqHeader     b X-Varnish: 1002
**** v1   vsl|       1002 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1002 VCL_trace       b vcl1 24 1.143.5
**** v1   vsl|       1002 VCL_trace       b vcl1 25 1.144.9
**** v1   vsl|       1002 VCL_trace       b vcl1 26 1.146.5
**** v1   vsl|       1002 VCL_return      b fetch
**** v1   vsl|       1002 BackendOpen     b 28 s1 127.0.0.1 37007 127.0.0.1 41952 connect
**** v1   vsl|       1002 Timestamp       b Bereq: 1634892678.455995 0.000238 0.000238
**** v1   vsl|       1002 Timestamp       b Beresp: 1634892678.456854 0.001097 0.000859
**** v1   vsl|       1002 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1002 BerespStatus    b 200
**** v1   vsl|       1002 BerespReason    b OK
**** v1   vsl|       1002 BerespHeader    b Content-Length: 0
**** v1   vsl|       1002 BerespHeader    b Date: Fri, 22 Oct 2021 08:51:18 GMT
**** v1   vsl|       1002 TTL             b RFC 120 10 0 1634892678 1634892678 1634892678 0 0 cacheable
**** v1   vsl|       1002 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1002 VCL_trace       b vcl1 27 1.150.5
**** v1   vsl|       1002 VCL_trace       b vcl1 30 1.162.5
**** v1   vsl|       1002 VCL_return      b deliver
**** v1   vsl|       1002 Filters         b 
**** v1   vsl|       1002 Storage         b malloc s0
**** v1   vsl|       1002 Fetch_Body      b 0 none -
**** v1   vsl|       1002 BackendClose    b 28 s1 recycle
**** v1   vsl|       1002 Timestamp       b BerespBody: 1634892678.467141 0.011383 0.010286
**** v1   vsl|       1002 Length          b 0
**** v1   vsl|       1002 BereqAcct       b 103 0 103 38 0 38
**** v1   vsl|       1002 End             b 
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7f0e20010fb0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7f0e20010fb0 e=1634892808.456855 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7f0e20010fb0 e=129.989686 f=0x0
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c63ae58, 0x7f0e4c63a390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c63ae58, 0x7f0e4c63a390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c63ae58) = (wrk, 0x7f0e4c63a390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57040
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 88 57040 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 16)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 57024 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57024
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 57024 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 57024 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 104 57024 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 8)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 57016 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57016
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 57016 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 57016 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 112 57016 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 8)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 57008 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57008
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 57008 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 57008 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 120 57008 57128)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e20001110, 24)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 144 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Snapshot(0x7f0e4c62be58) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Alloc(0x7f0e4c62be58, 104) = 0x7f0e4c62b390
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 104 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e4c62be58) = 1936
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 104 1936 2040)
**** v1   vsl|          0 Debug           - WS_Release(0x7f0e4c62be58, 1024)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 1128 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 1128 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 1128 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c62be58, 0x7f0e4c62b390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|       1001 Begin           c req 1000 rxreq
**** v1   vsl|       1001 Timestamp       c Start: 1634892678.455582 0.000000 0.000000
**** v1   vsl|       1001 Timestamp       c Req: 1634892678.455582 0.000000 0.000000
**** v1   vsl|       1001 VCL_use         c vcl1
**** v1   vsl|       1001 ReqStart        c 127.0.0.1 41766 a0
**** v1   vsl|       1001 ReqMethod       c GET
**** v1   vsl|       1001 ReqURL          c /
**** v1   vsl|       1001 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1001 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1001 VCL_call        c RECV
**** v1   vsl|       1001 VCL_trace       c vcl1 1 1.40.5
**** v1   vsl|       1001 VCL_trace       c vcl1 2 1.41.9
**** v1   vsl|       1001 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1001 VCL_trace       c vcl1 3 1.43.5
**** v1   vsl|       1001 VCL_trace       c vcl1 5 1.47.5
**** v1   vsl|       1001 VCL_trace       c vcl1 7 1.53.5
**** v1   vsl|       1001 VCL_trace       c vcl1 9 1.65.5
**** v1   vsl|       1001 VCL_trace       c vcl1 11 1.69.5
**** v1   vsl|       1001 VCL_trace       c vcl1 13 1.73.5
**** v1   vsl|       1001 VCL_return      c hash
**** v1   vsl|       1001 VCL_call        c HASH
**** v1   vsl|       1001 VCL_trace       c vcl1 16 1.90.5
**** v1   vsl|       1001 Hash            c /
**** v1   vsl|       1001 VCL_trace       c vcl1 17 1.92.9
**** v1   vsl|       1001 Hash            c 127.0.0.1
**** v1   vsl|       1001 VCL_return      c lookup
**** v1   vsl|       1001 VCL_call        c MISS
**** v1   vsl|       1001 VCL_trace       c vcl1 21 1.108.5
**** v1   vsl|       1001 VCL_return      c fetch
**** v1   vsl|       1001 Link            c bereq 1002 fetch
**** v1   vsl|       1001 Timestamp       c Fetch: 1634892678.467185 0.011602 0.011602
**** v1   vsl|       1001 RespProtocol    c HTTP/1.1
**** v1   vsl|       1001 RespStatus      c 200
**** v1   vsl|       1001 RespReason      c OK
**** v1   vsl|       1001 RespHeader      c Content-Length: 0
**** v1   vsl|       1001 RespHeader      c Date: Fri, 22 Oct 2021 08:51:18 GMT
**** v1   vsl|       1001 RespHeader      c X-Varnish: 1001
**** v1   vsl|       1001 RespHeader      c Age: 0
**** v1   vsl|       1001 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1001 VCL_call        c DELIVER
**** v1   vsl|       1001 VCL_trace       c vcl1 22 1.112.5
**** v1   vsl|       1001 VCL_return      c deliver
**** v1   vsl|       1001 Timestamp       c Process: 1634892678.467220 0.011637 0.000035
**** v1   vsl|       1001 Filters         c 
**** v1   vsl|       1001 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1001 RespHeader      c Connection: keep-alive
**** v1   vsl|       1001 Timestamp       c Resp: 1634892678.467363 0.011780 0.000143
**** v1   vsl|       1001 ReqAcct         c 35 0 35 178 0 178
**** v1   vsl|       1001 End             c 
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 144 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 144 0 57128)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e20001110, 0x7f0e20003070)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 0 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS_ReserveAll(0x7f0e20001110) = 57128
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20000bc0) = (ses, 0x7f0e20000c18 96 0 576)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 57128 57128)
**** v1   vsl|          0 Debug           - WS_ReleaseP(0x7f0e20001110, 0x7f0e20003070 (0))
**** v1   vsl|          0 Debug           - WS(0x7f0e20001110) = (req, 0x7f0e20003070 0 0 57128)
**** v1   vsl|       1000 SessClose       c REM_CLOSE 0.013
**** v1   vsl|       1000 End             c 
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c62be58, 0x7f0e4c62b390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 Debug           - WS_Reset(0x7f0e4c62be58, 0x7f0e4c62b390)
**** v1   vsl|          0 Debug           - WS(0x7f0e4c62be58) = (wrk, 0x7f0e4c62b390 0 0 2040)
**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 Debug           - WS(0x72db60) = (cli, 0x18c0f90 0 0 65528)
**** v1   vsl|          0 Debug           - WS(0x72db60) = (cli, 0x18c0f90 0 0 65528)
**** v1   vsl|          0 Debug           - WS(0x72db60) = (cli, 0x18c0f90 0 0 65528)
**** v1   vsl|          0 Debug           - WS(0x72db60) = (cli, 0x18c0f90 0 0 65528)
**** v1   vsl|          0 Debug           - WS_Reset(0x72db60, 0x18c0f90)
**** v1   vsl|          0 Debug           - WS(0x72db60) = (cli, 0x18c0f90 0 0 65528)
**** v1   vsl|          0 CLI             - Wr 200 134 Backend name   Admin      Probe    Health     Last change
vcl1.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:51:18 GMT

**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   1.426
***  v1   debug|Info: Child (56064) ended
***  v1   debug|Info: Child (56064) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
**** dT   1.427
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** v1   STDOUT EOF
**** dT   1.517
**   v1   WAIT4 pid=56052 status=0x0000 (user 0.159301 sys 0.031122)
*    top  TEST ./tests/c00054.vtc completed
#    top  TEST ./tests/c00054.vtc passed (1.518)
