**** dT   0.000
*    top  TEST ./tests/m00036.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 32883
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.70972.00abb488
**   top  === varnishtest "VMOD blob hex decode() n chars"
*    top  VTEST VMOD blob hex decode() n chars
**   top  === varnish v1 -vcl {
**** dT   0.004
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.70972.00abb488/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 44411' -P /tmp/vtc.70972.00abb488/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.70972.00abb488/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 44411' -P /tmp/vtc.70972.00abb488/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   PID: 70990
**** v1   macro def v1_pid=70990
**** v1   macro def v1_name=/tmp/vtc.70972.00abb488/v1
**** dT   0.012
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.110
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 5
***  v1   CLI RX  107
**** v1   CLI RX|mublkbcurzivihhbnnermqsadbwyzljy
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** dT   0.111
**** v1   CLI TX|auth 74ac3d435cc92c464b25bd1b611518db6fba8a9982345505d11ac02ed3a671c3
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**** dT   0.112
**** v1   CLI TX|vcl.inline vcl1 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\timport std;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|\t  return(synth(200));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_synth {
**** v1   CLI TX|\t    set req.http.pangram = "The quick brown fox jumps over the lazy dog";
**** v1   CLI TX|\t    set req.http.hobbes =
**** v1   CLI TX|{"Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure."};
**** v1   CLI TX|\t    # base64 encoding of all 256 byte values in ascending order
**** v1   CLI TX|\t    set req.http.b64all =
**** v1   CLI TX|{"AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+/w=="};
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hexlc =
**** v1   CLI TX|\t      blob.encode(HEX,
**** v1   CLI TX|\t\t\t  blob=blob.decode(IDENTITY, 5,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.pangram));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hexuc =
**** v1   CLI TX|\t      blob.encode(HEX, UPPER,
**** v1   CLI TX|\t\t\t  blob.decode(IDENTITY, 5, encoded=req.http.pangram));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hobbeslc =
**** v1   CLI TX|\t      blob.encode(HEX,
**** v1   CLI TX|\t\t\t  blob=blob.decode(IDENTITY, 5,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.hobbes));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hobbesuc =
**** v1   CLI TX|\t      blob.encode(HEX, UPPER,
**** v1   CLI TX|\t\t\t  blob.decode(IDENTITY, 5, encoded=req.http.hobbes));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.all-lc =
**** v1   CLI TX|\t      blob.encode(HEX, blob=blob.decode(BASE64, 8,
**** v1   CLI TX|\t\t\t\t\t\tencoded=req.http.b64all));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.all-uc =
**** v1   CLI TX|\t      blob.encode(HEX, UPPER,
**** v1   CLI TX|\t\t\t  blob.decode(BASE64, 8, encoded=req.http.b64all));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.empty-lc =
**** v1   CLI TX|\t      blob.encode(HEX, blob=blob.decode(IDENTITY, 5, encoded=""));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.empty-uc =
**** v1   CLI TX|\t      blob.encode(HEX, UPPER, blob.decode(IDENTITY, 5, encoded=""));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hexlcparam =
**** v1   CLI TX|\t      blob.encode(blob=blob.decode(IDENTITY, 5,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.pangram),
**** v1   CLI TX|\t\t\t\t\t   encoding=HEX, case=LOWER);
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.hexucparam =
**** v1   CLI TX|\t      blob.encode(blob=blob.decode(IDENTITY, 5,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.pangram),
**** v1   CLI TX|\t\t\t\t\t   encoding=HEX, case=UPPER);
**** v1   CLI TX|
**** v1   CLI TX|\t    set req.http.hexucfoobar = "666F6F206261722062617A2071757578";
**** v1   CLI TX|\t    set req.http.hexlcfoobar = std.tolower(req.http.hexucfoobar);
**** v1   CLI TX|\t    # Hobbes quotation in hex
**** v1   CLI TX|\t    set req.http.hexhobbeslc = "4d616e2069732064697374696e677569736865642c206e6f74206f6e6c792062792068697320726561736f6e2c2062757420627920746869732073696e67756c61722070617373696f6e2066726f6d206f7468657220616e696d616c732c2077686963682069732061206c757374206f6620746865206d696e642c20746861742062792061207065727365766572616e6365206f662064656c6967687420696e2074686520636f6e74696e75656420616e6420696e6465666174696761626c652067656e65726174696f6e206f66206b6e6f776c656467652c2065786365656473207468652073686f727420766568656d656e6365206f6620616e79206361726e616c20706c6561737572652e";
**** v1   CLI TX|\t    set req.http.hexhobbesuc = std.toupper(req.http.hexhobbeslc);
**** v1   CLI TX|\t    set req.http.hexalluc = "000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF";
**** v1   CLI TX|\t    set req.http.hexalllc = std.tolower(req.http.hexalluc);
**** v1   CLI TX|\t    set req.http.hexallucodd = regsub(req.http.hexalluc, "^0", "");
**** v1   CLI TX|\t    set req.http.hexalllcodd = regsub(req.http.hexalllc, "^0", "");
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decuc =
**** v1   CLI TX|\t      blob.encode(IDENTITY,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 10,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.hexucfoobar));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.declc =
**** v1   CLI TX|\t      blob.encode(IDENTITY,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 10,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.hexlcfoobar));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.dechobbesuc =
**** v1   CLI TX|\t      blob.encode(IDENTITY,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 12,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.hexhobbesuc));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.dechobbeslc =
**** v1   CLI TX|\t      blob.encode(IDENTITY,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 12,
**** v1   CLI TX|\t\t\t\t\t   encoded=req.http.hexhobbeslc));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decalluc =
**** v1   CLI TX|\t      blob.encode(BASE64,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 12, encoded=req.http.hexalluc));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decalllc =
**** v1   CLI TX|\t      blob.encode(BASE64,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 12, encoded=req.http.hexalllc));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decallucodd =
**** v1   CLI TX|\t      blob.encode(BASE64, blob=blob.decode(HEX, 11,
**** v1   CLI TX|\t\t\t\t\t\t encoded=req.http.hexallucodd));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decalllcodd =
**** v1   CLI TX|\t      blob.encode(BASE64, blob=blob.decode(HEX, 11,
**** v1   CLI TX|\t\t\t\t\t\t encoded=req.http.hexalllcodd));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decempty =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 5, encoded=""));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decemptybyte =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 1, encoded="00"));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decemptynibble =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 2, encoded="0"));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decemptypieces =
**** v1   CLI TX|\t      blob.encode(IDENTITY,
**** v1   CLI TX|\t\t\t  blob=blob.decode(HEX, 5, encoded=req.http.unset + ""
**** v1   CLI TX|\t\t\t\t\t     + req.http.unset + ""));
**** v1   CLI TX|
**** v1   CLI TX|\t    set req.http.part1 = "666";
**** v1   CLI TX|\t    set resp.http.dec2pieces =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 6,
**** v1   CLI TX|\t\t\t\t\t\t     encoded=req.http.part1 +
**** v1   CLI TX|\t\t\t\t\t      "F6F206261722062617A2071757578"));
**** v1   CLI TX|
**** v1   CLI TX|\t    set req.http.part2 = "57578";
**** v1   CLI TX|\t    set resp.http.dec3param =
**** v1   CLI TX|\t      blob.encode(blob=blob.decode(encoded=req.http.part1 +
**** v1   CLI TX|\t\t\t     "F6F206261722062617A20717" + req.http.part2,
**** v1   CLI TX|\t\t\t     decoding=HEX, length=8),
**** v1   CLI TX|\t\t\t     encoding=IDENTITY);
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.dec3pieces =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 30,
**** v1   CLI TX|\t\t\t     encoded=req.http.part1 +
**** v1   CLI TX|\t\t\t     "F6F206261722062617A20717" + req.http.part2));
**** v1   CLI TX|
**** v1   CLI TX|\t    set resp.http.decmanypieces =
**** v1   CLI TX|\t      blob.encode(IDENTITY, blob=blob.decode(HEX, 20, encoded=""
**** v1   CLI TX|\t\t\t     + req.http.unset
**** v1   CLI TX|\t\t\t     + req.http.part1 + req.http.unset + ""
**** v1   CLI TX|\t\t\t     + req.http.unset + "" + "F6F206261722062617A20717"
**** v1   CLI TX|\t\t\t     + "" + req.http.unset + req.http.part2
**** v1   CLI TX|\t\t\t     + req.http.unset + "" + req.http.unset));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.211
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.312
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.340
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl1
***  v1   CLI RX  200
**   v1   Start
**** v1   CLI TX|start
**** dT   0.343
***  v1   debug|Debug: Child (71002) Started
**** dT   0.368
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   debug|Info: Child (71002) said Child starts
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
**** dT   0.369
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 45201
**** v1   CLI TX|debug.xid 999
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 45201
**   v1   Listen on 127.0.0.1 45201
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=45201
**** v1   macro def v1_sock=127.0.0.1 45201
**** dT   0.412
**** v1   vsl|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892882.466443/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl1.1634892882.466443/vgc.so" as "vcl1"
**** v1   vsl|          0 CLI             - Rd vcl.use "vcl1"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 45201

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 45201

**** dT   0.469
**   top  === client c1 {
**   c1   Starting client
**** dT   0.470
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45201 (1 iterations)
***  c1   Connect to 127.0.0.1 45201
***  c1   connected fd 15 from 127.0.0.1 37346 to 127.0.0.1 45201
**   c1   === txreq -url "/"
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   0.473
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:42 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1001\r
**** c1   rxhdr|hexlc: 5468652071\r
**** c1   rxhdr|hexuc: 5468652071\r
**** c1   rxhdr|hobbeslc: 4d616e2069\r
**** c1   rxhdr|hobbesuc: 4D616E2069\r
**** c1   rxhdr|all-lc: 000102030405\r
**** c1   rxhdr|all-uc: 000102030405\r
**** c1   rxhdr|empty-lc: \r
**** c1   rxhdr|empty-uc: \r
**** c1   rxhdr|hexlcparam: 5468652071\r
**** c1   rxhdr|hexucparam: 5468652071\r
**** c1   rxhdr|decuc: foo b\r
**** c1   rxhdr|declc: foo b\r
**** c1   rxhdr|dechobbesuc: Man is\r
**** c1   rxhdr|dechobbeslc: Man is\r
**** c1   rxhdr|decalluc: AAECAwQF\r
**** c1   rxhdr|decalllc: AAECAwQF\r
**** c1   rxhdr|decallucodd: AAECAwQF\r
**** c1   rxhdr|decalllcodd: AAECAwQF\r
**** c1   rxhdr|decempty: \r
**** c1   rxhdr|decemptybyte: \r
**** c1   rxhdr|decemptynibble: \r
**** c1   rxhdr|decemptypieces: \r
**** c1   rxhdr|dec2pieces: foo\r
**** c1   rxhdr|dec3param: foo \r
**** c1   rxhdr|dec3pieces: foo bar baz quu\r
**** c1   rxhdr|decmanypieces: foo bar ba\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 227\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 721
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:42 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1001
**** c1   http[ 6] |hexlc: 5468652071
**** c1   http[ 7] |hexuc: 5468652071
**** c1   http[ 8] |hobbeslc: 4d616e2069
**** c1   http[ 9] |hobbesuc: 4D616E2069
**** c1   http[10] |all-lc: 000102030405
**** c1   http[11] |all-uc: 000102030405
**** c1   http[12] |empty-lc: 
**** c1   http[13] |empty-uc: 
**** c1   http[14] |hexlcparam: 5468652071
**** c1   http[15] |hexucparam: 5468652071
**** c1   http[16] |decuc: foo b
**** c1   http[17] |declc: foo b
**** c1   http[18] |dechobbesuc: Man is
**** c1   http[19] |dechobbeslc: Man is
**** c1   http[20] |decalluc: AAECAwQF
**** c1   http[21] |decalllc: AAECAwQF
**** c1   http[22] |decallucodd: AAECAwQF
**** c1   http[23] |decalllcodd: AAECAwQF
**** c1   http[24] |decempty: 
**** c1   http[25] |decemptybyte: 
**** c1   http[26] |decemptynibble: 
**** c1   http[27] |decemptypieces: 
**** c1   http[28] |dec2pieces: foo
**** c1   http[29] |dec3param: foo 
**** c1   http[30] |dec3pieces: foo bar baz quu
**** c1   http[31] |decmanypieces: foo bar ba
**** c1   http[32] |Content-Type: text/html; charset=utf-8
**** c1   http[33] |Retry-After: 5
**** c1   http[34] |Content-Length: 227
**** c1   http[35] |Accept-Ranges: bytes
**** c1   http[36] |Connection: keep-alive
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>200 OK</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 200 OK</h1>
**** c1   c-l|    <p>OK</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1001</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 227
**   c1   === expect resp.http.hexlc == "5468652071"
**** c1   EXPECT resp.http.hexlc (5468652071) == "5468652071" match
**   c1   === expect resp.http.hexuc == "5468652071"
**** c1   EXPECT resp.http.hexuc (5468652071) == "5468652071" match
**   c1   === expect resp.http.hobbeslc == "4d616e2069"
**** c1   EXPECT resp.http.hobbeslc (4d616e2069) == "4d616e2069" match
**   c1   === expect resp.http.hobbesuc == "4D616E2069"
**** c1   EXPECT resp.http.hobbesuc (4D616E2069) == "4D616E2069" match
**   c1   === expect resp.http.all-uc == "000102030405"
**** c1   EXPECT resp.http.all-uc (000102030405) == "000102030405" match
**   c1   === expect resp.http.all-lc == "000102030405"
**** c1   EXPECT resp.http.all-lc (000102030405) == "000102030405" match
**   c1   === expect resp.http.empty-uc == ""
**** c1   EXPECT resp.http.empty-uc () == "" match
**   c1   === expect resp.http.empty-lc == ""
**** c1   EXPECT resp.http.empty-lc () == "" match
**   c1   === expect resp.http.hexlcparam == "5468652071"
**** c1   EXPECT resp.http.hexlcparam (5468652071) == "5468652071" match
**   c1   === expect resp.http.hexucparam == "5468652071"
**** c1   EXPECT resp.http.hexucparam (5468652071) == "5468652071" match
**   c1   === expect resp.http.decuc == "foo b"
**** c1   EXPECT resp.http.decuc (foo b) == "foo b" match
**   c1   === expect resp.http.declc == "foo b"
**** c1   EXPECT resp.http.declc (foo b) == "foo b" match
**   c1   === expect resp.http.dechobbesuc == "Man is"
**** c1   EXPECT resp.http.dechobbesuc (Man is) == "Man is" match
**   c1   === expect resp.http.dechobbeslc == "Man is"
**** c1   EXPECT resp.http.dechobbeslc (Man is) == "Man is" match
**   c1   === expect resp.http.decalluc == "AAECAwQF"
**** c1   EXPECT resp.http.decalluc (AAECAwQF) == "AAECAwQF" match
**   c1   === expect resp.http.decalllc == "AAECAwQF"
**** c1   EXPECT resp.http.decalllc (AAECAwQF) == "AAECAwQF" match
**   c1   === expect resp.http.decallucodd == "AAECAwQF"
**** c1   EXPECT resp.http.decallucodd (AAECAwQF) == "AAECAwQF" match
**   c1   === expect resp.http.decalllcodd == "AAECAwQF"
**** c1   EXPECT resp.http.decalllcodd (AAECAwQF) == "AAECAwQF" match
**   c1   === expect resp.http.decempty == ""
**** c1   EXPECT resp.http.decempty () == "" match
**   c1   === expect resp.http.decemptybyte == ""
**** c1   EXPECT resp.http.decemptybyte () == "" match
**   c1   === expect resp.http.decemptynibble == ""
**** c1   EXPECT resp.http.decemptynibble () == "" match
**   c1   === expect resp.http.decemptypieces == ""
**** c1   EXPECT resp.http.decemptypieces () == "" match
**   c1   === expect resp.http.dec2pieces == "foo"
**** c1   EXPECT resp.http.dec2pieces (foo) == "foo" match
**   c1   === expect resp.http.dec3pieces == "foo bar baz quu"
**** c1   EXPECT resp.http.dec3pieces (foo bar baz quu) == "foo bar baz quu" match
**   c1   === expect resp.http.dec3param == "foo "
**** c1   EXPECT resp.http.dec3param (foo ) == "foo " match
**   c1   === expect resp.http.decmanypieces == "foo bar ba"
**** c1   EXPECT resp.http.decmanypieces (foo bar ba) == "foo bar ba" match
***  c1   closing fd 15
**   c1   Ending
**   top  === server s1 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=44781
**** s1   macro def s1_sock=127.0.0.1 44781
*    s1   Listen on 127.0.0.1 44781
**   top  === varnish v1 -vcl+backend {
**   s1   Started on 127.0.0.1 44781 (1 iterations)
**** v1   CLI TX|vcl.inline vcl2 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|backend s1 { .host = "127.0.0.1"; .port = "44781"; }
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t  set req.http.foo = "123";
**** v1   CLI TX|\t  set resp.http.badhex = blob.encode(HEX, UPPER,
**** v1   CLI TX|\t\t\t\t blob.decode(HEX, 2,
**** v1   CLI TX|\t\t\t\t\t     encoded="g" + req.http.foo));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.512
**** v1   vsl|       1000 Begin           c sess 0 HTTP/1
**** v1   vsl|       1000 SessOpen        c 127.0.0.1 37346 a0 127.0.0.1 45201 1634892882.824516 22
**** v1   vsl|       1000 Link            c req 1001 rxreq
**** v1   vsl|       1001 Begin           c req 1000 rxreq
**** v1   vsl|       1001 Timestamp       c Start: 1634892882.824667 0.000000 0.000000
**** v1   vsl|       1001 Timestamp       c Req: 1634892882.824667 0.000000 0.000000
**** v1   vsl|       1001 VCL_use         c vcl1
**** v1   vsl|       1001 ReqStart        c 127.0.0.1 37346 a0
**** v1   vsl|       1001 ReqMethod       c GET
**** v1   vsl|       1001 ReqURL          c /
**** v1   vsl|       1001 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1001 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1001 VCL_call        c RECV
**** v1   vsl|       1001 VCL_return      c synth
**** v1   vsl|       1001 VCL_call        c HASH
**** v1   vsl|       1001 VCL_return      c lookup
**** v1   vsl|       1001 RespProtocol    c HTTP/1.1
**** v1   vsl|       1001 RespStatus      c 200
**** v1   vsl|       1001 RespReason      c OK
**** v1   vsl|       1001 RespHeader      c Date: Fri, 22 Oct 2021 08:54:42 GMT
**** v1   vsl|       1001 RespHeader      c Server: Varnish
**** v1   vsl|       1001 RespHeader      c X-Varnish: 1001
**** v1   vsl|       1001 VCL_call        c SYNTH
**** v1   vsl|       1001 ReqHeader       c pangram: The quick brown fox jumps over the lazy dog
**** v1   vsl|       1001 ReqHeader       c hobbes: Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence 
**** v1   vsl|       1001 ReqHeader       c b64all: AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7
**** v1   vsl|       1001 RespHeader      c hexlc: 5468652071
**** v1   vsl|       1001 RespHeader      c hexuc: 5468652071
**** v1   vsl|       1001 RespHeader      c hobbeslc: 4d616e2069
**** v1   vsl|       1001 RespHeader      c hobbesuc: 4D616E2069
**** v1   vsl|       1001 RespHeader      c all-lc: 000102030405
**** v1   vsl|       1001 RespHeader      c all-uc: 000102030405
**** v1   vsl|       1001 RespHeader      c empty-lc: 
**** v1   vsl|       1001 RespHeader      c empty-uc: 
**** v1   vsl|       1001 RespHeader      c hexlcparam: 5468652071
**** v1   vsl|       1001 RespHeader      c hexucparam: 5468652071
**** v1   vsl|       1001 ReqHeader       c hexucfoobar: 666F6F206261722062617A2071757578
**** v1   vsl|       1001 ReqHeader       c hexlcfoobar: 666f6f206261722062617a2071757578
**** v1   vsl|       1001 ReqHeader       c hexhobbeslc: 4d616e2069732064697374696e677569736865642c206e6f74206f6e6c792062792068697320726561736f6e2c2062757420627920746869732073696e67756c61722070617373696f6e2066726f6d206f7468657220616e696d616c732c2077686963682069732061206c757374206f6620746865206d696
**** v1   vsl|       1001 ReqHeader       c hexhobbesuc: 4D616E2069732064697374696E677569736865642C206E6F74206F6E6C792062792068697320726561736F6E2C2062757420627920746869732073696E67756C61722070617373696F6E2066726F6D206F7468657220616E696D616C732C2077686963682069732061206C757374206F6620746865206D696
**** v1   vsl|       1001 ReqHeader       c hexalluc: 000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
**** v1   vsl|       1001 ReqHeader       c hexalllc: 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717273747576777879
**** v1   vsl|       1001 ReqHeader       c hexallucodd: 00102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
**** v1   vsl|       1001 ReqHeader       c hexalllcodd: 00102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778
**** v1   vsl|       1001 RespHeader      c decuc: foo b
**** v1   vsl|       1001 RespHeader      c declc: foo b
**** v1   vsl|       1001 RespHeader      c dechobbesuc: Man is
**** v1   vsl|       1001 RespHeader      c dechobbeslc: Man is
**** v1   vsl|       1001 RespHeader      c decalluc: AAECAwQF
**** v1   vsl|       1001 RespHeader      c decalllc: AAECAwQF
**** v1   vsl|       1001 RespHeader      c decallucodd: AAECAwQF
**** v1   vsl|       1001 RespHeader      c decalllcodd: AAECAwQF
**** v1   vsl|       1001 RespHeader      c decempty: 
**** v1   vsl|       1001 RespHeader      c decemptybyte: 
**** v1   vsl|       1001 RespHeader      c decemptynibble: 
**** v1   vsl|       1001 RespHeader      c decemptypieces: 
**** v1   vsl|       1001 ReqHeader       c part1: 666
**** v1   vsl|       1001 RespHeader      c dec2pieces: foo
**** v1   vsl|       1001 ReqHeader       c part2: 57578
**** v1   vsl|       1001 RespHeader      c dec3param: foo 
**** v1   vsl|       1001 RespHeader      c dec3pieces: foo bar baz quu
**** v1   vsl|       1001 RespHeader      c decmanypieces: foo bar ba
**** v1   vsl|       1001 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1001 RespHeader      c Retry-After: 5
**** v1   vsl|       1001 VCL_return      c deliver
**** v1   vsl|       1001 Timestamp       c Process: 1634892882.824852 0.000184 0.000184
**** v1   vsl|       1001 RespHeader      c Content-Length: 227
**** v1   vsl|       1001 Storage         c malloc Transient
**** v1   vsl|       1001 Filters         c 
**** v1   vsl|       1001 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1001 RespHeader      c Connection: keep-alive
**** v1   vsl|       1001 Timestamp       c Resp: 1634892882.824911 0.000243 0.000059
**** v1   vsl|       1001 ReqAcct         c 35 0 35 721 227 948
**** v1   vsl|       1001 End             c 
**** v1   vsl|       1000 SessClose       c REM_CLOSE 0.003
**** v1   vsl|       1000 End             c 
**** dT   0.633
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl2
***  v1   CLI RX  200
**** v1   CLI RX|VCL 'vcl2' now active
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45201 (1 iterations)
***  c1   Connect to 127.0.0.1 45201
***  c1   connected fd 17 from 127.0.0.1 37348 to 127.0.0.1 45201
**** dT   0.634
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
***  s1   accepted fd 16 127.0.0.1 37996
**   s1   === rxreq
**** s1   rxhdr|GET / HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1004\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 103
**** s1   http[ 0] |GET
**** s1   http[ 1] |/
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |host: 127.0.0.1
**** s1   http[ 5] |Accept-Encoding: gzip
**** s1   http[ 6] |X-Varnish: 1004
**** s1   bodylen = 0
**   s1   === txresp
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|Content-Length: 0\r
**** s1   txresp|\r
***  s1   shutting fd 16
**   s1   Ending
**** dT   0.645
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:42 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1003\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:42 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1003
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1003</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
**   c1   === expect resp.reason == "VCL failed"
**** c1   EXPECT resp.reason (VCL failed) == "VCL failed" match
**   c1   === expect resp.http.badhex == <undef>
**** c1   EXPECT resp.http.badhex (<undef>) == "<undef>" match
***  c1   closing fd 17
**   c1   Ending
**   top  === logexpect l1 -v v1 -d 1 -g vxid -q "VCL_Error" {
**   l1   === expect 0 * Begin req
**** dT   0.646
**   l1   === expect * = VCL_Error "^vmod blob error: cannot decode, illeg...
**   l1   === expect * = End
**   top  === logexpect l1 -wait
**   l1   Waiting for logexp
**** l1   begin|
**** l1   qry| VCL_Error
***  l1   expecting| expect 0 * Begin req
**** l1   match|       1003 Begin           c req 1002 rxreq
***  l1   expecting| expect * = VCL_Error ^vmod blob error: cannot decode, illegal encoding beginning with \"g\"$
**** l1   match|       1003 VCL_Error       c vmod blob error: cannot decode, illegal encoding beginning with "g"
***  l1   expecting| expect * = End 
**** l1   match|       1003 End             c 
**** l1   end|
*    top  RESETTING after ./tests/m00036.vtc
**   s1   Waiting for server (15/-1)
**   v1   Wait
**** v1   CLI TX|backend.list
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin      Probe    Health     Last change
**** v1   CLI RX|vcl2.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:54:42 GMT
**   v1   Stop
**** v1   CLI TX|stop
***  v1   debug|Debug: Stopping Child
**** dT   0.712
**** v1   vsl|          0 CLI             - Rd vcl.load vcl2 vcl_vcl2.1634892882.828114/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl2.1634892882.828114/vgc.so" as "vcl2"
**** v1   vsl|          0 CLI             - Rd vcl.use vcl2
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|       1002 Begin           c sess 0 HTTP/1
**** v1   vsl|       1002 SessOpen        c 127.0.0.1 37348 a0 127.0.0.1 45201 1634892882.988209 26
**** v1   vsl|       1002 Link            c req 1003 rxreq
**** v1   vsl|       1004 Begin           b bereq 1003 fetch
**** v1   vsl|       1004 VCL_use         b vcl2
**** v1   vsl|       1004 Timestamp       b Start: 1634892882.988314 0.000000 0.000000
**** v1   vsl|       1004 BereqMethod     b GET
**** v1   vsl|       1004 BereqURL        b /
**** v1   vsl|       1004 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1004 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1004 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1004 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1004 BereqHeader     b X-Varnish: 1004
**** v1   vsl|       1004 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1004 VCL_return      b fetch
**** v1   vsl|       1004 BackendOpen     b 28 s1 127.0.0.1 44781 127.0.0.1 37996 connect
**** v1   vsl|       1004 Timestamp       b Bereq: 1634892882.988453 0.000138 0.000138
**** v1   vsl|       1004 Timestamp       b Beresp: 1634892882.988849 0.000535 0.000396
**** v1   vsl|       1004 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1004 BerespStatus    b 200
**** v1   vsl|       1004 BerespReason    b OK
**** v1   vsl|       1004 BerespHeader    b Content-Length: 0
**** v1   vsl|       1004 BerespHeader    b Date: Fri, 22 Oct 2021 08:54:42 GMT
**** v1   vsl|       1004 TTL             b RFC 120 10 0 1634892883 1634892883 1634892882 0 0 cacheable
**** v1   vsl|       1004 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1004 VCL_return      b deliver
**** v1   vsl|       1004 Filters         b 
**** v1   vsl|       1004 Storage         b malloc s0
**** v1   vsl|       1004 Fetch_Body      b 0 none -
**** v1   vsl|       1004 BackendClose    b 28 s1 recycle
**** v1   vsl|       1004 Timestamp       b BerespBody: 1634892882.998997 0.010682 0.010147
**** v1   vsl|       1004 Length          b 0
**** v1   vsl|       1004 BereqAcct       b 103 0 103 38 0 38
**** v1   vsl|       1004 End             b 
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7f2778000bb0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7f2778000bb0 e=1634893012.988850 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7f2778000bb0 e=129.989830 f=0x0
**** v1   vsl|       1003 Begin           c req 1002 rxreq
**** v1   vsl|       1003 Timestamp       c Start: 1634892882.988262 0.000000 0.000000
**** v1   vsl|       1003 Timestamp       c Req: 1634892882.988262 0.000000 0.000000
**** v1   vsl|       1003 VCL_use         c vcl2
**** v1   vsl|       1003 ReqStart        c 127.0.0.1 37348 a0
**** v1   vsl|       1003 ReqMethod       c GET
**** v1   vsl|       1003 ReqURL          c /
**** v1   vsl|       1003 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1003 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1003 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1003 VCL_call        c RECV
**** v1   vsl|       1003 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1003 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1003 VCL_return      c hash
**** v1   vsl|       1003 VCL_call        c HASH
**** v1   vsl|       1003 VCL_return      c lookup
**** v1   vsl|       1003 VCL_call        c MISS
**** v1   vsl|       1003 VCL_return      c fetch
**** v1   vsl|       1003 Link            c bereq 1004 fetch
**** v1   vsl|       1003 Timestamp       c Fetch: 1634892882.999038 0.010776 0.010776
**** v1   vsl|       1003 RespProtocol    c HTTP/1.1
**** v1   vsl|       1003 RespStatus      c 200
**** v1   vsl|       1003 RespReason      c OK
**** v1   vsl|       1003 RespHeader      c Content-Length: 0
**** v1   vsl|       1003 RespHeader      c Date: Fri, 22 Oct 2021 08:54:42 GMT
**** v1   vsl|       1003 RespHeader      c X-Varnish: 1003
**** v1   vsl|       1003 RespHeader      c Age: 0
**** v1   vsl|       1003 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1003 VCL_call        c DELIVER
**** v1   vsl|       1003 ReqHeader       c foo: 123
**** v1   vsl|       1003 VCL_Error       c vmod blob error: cannot decode, illegal encoding beginning with "g"
**** v1   vsl|       1003 RespHeader      c badhex: 
**** v1   vsl|       1003 VCL_return      c fail
**** v1   vsl|       1003 Timestamp       c Process: 1634892882.999074 0.010811 0.000035
**** v1   vsl|       1003 RespProtocol    c HTTP/1.1
**** v1   vsl|       1003 RespStatus      c 503
**** v1   vsl|       1003 RespReason      c VCL failed
**** v1   vsl|       1003 RespHeader      c Date: Fri, 22 Oct 2021 08:54:42 GMT
**** v1   vsl|       1003 RespHeader      c Server: Varnish
**** v1   vsl|       1003 RespHeader      c X-Varnish: 1003
**** v1   vsl|       1003 VCL_call        c SYNTH
**** v1   vsl|       1003 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1003 RespHeader      c Retry-After: 5
**** v1   vsl|       1003 VCL_return      c deliver
**** v1   vsl|       1003 Timestamp       c Process: 1634892882.999092 0.010830 0.000018
**** v1   vsl|       1003 RespHeader      c Content-Length: 251
**** v1   vsl|       1003 Storage         c malloc Transient
**** v1   vsl|       1003 Filters         c 
**** v1   vsl|       1003 RespHeader      c Connection: close
**** dT   0.713
**** v1   vsl|       1003 Timestamp       c Resp: 1634892882.999180 0.010917 0.000087
**** v1   vsl|       1003 ReqAcct         c 35 0 35 194 251 445
**** v1   vsl|       1003 End             c 
**** v1   vsl|       1002 SessClose       c VCL_FAILURE 0.011
**** v1   vsl|       1002 End             c 
**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 CLI             - Wr 200 134 Backend name   Admin      Probe    Health     Last change
vcl2.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:54:42 GMT

**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   1.646
***  v1   debug|Info: Child (71002) ended
**** dT   1.647
***  v1   debug|Info: Child (71002) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** dT   1.648
**** v1   STDOUT EOF
**** dT   1.714
**   v1   WAIT4 pid=70990 status=0x0000 (user 0.326202 sys 0.083933)
*    top  TEST ./tests/m00036.vtc completed
#    top  TEST ./tests/m00036.vtc passed (1.715)
