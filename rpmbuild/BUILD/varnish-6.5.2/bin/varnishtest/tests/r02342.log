**** dT   0.000
*    top  TEST ./tests/r02342.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 42223
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.92938.29982697
**   top  === varnishtest "honor vcl_path with varnishd -f"
*    top  VTEST honor vcl_path with varnishd -f
**   top  === shell {
**** top  shell_cmd|exec 2>&1 ; 
**** top  shell_cmd|\tcat >unlikely_file_name.vcl <<-EOF
**** top  shell_cmd|\tvcl 4.0;
**** top  shell_cmd|
**** top  shell_cmd|\tbackend be {
**** top  shell_cmd|\t\t.host = "127.0.0.1 42223";
**** top  shell_cmd|\t}
**** top  shell_cmd|\tEOF
**** dT   0.003
**** top  shell_status = 0x0000
**   top  === shell -err -expect "Cannot read -f file 'unlikely_file_name....
**** top  shell_cmd|exec 2>&1 ; 
**** top  shell_cmd|\tvarnishd -F -a :0 -n /tmp/vtc.92938.29982697/tmp -f unlikely_file_name.vcl
**** dT   0.007
**** top  shell_out|Error: Cannot read -f file 'unlikely_file_name.vcl' (No such file or directory)
**** top  shell_out|(-? gives usage)
**** top  shell_status = 0x0002
**** top  shell_expect found
**   top  === varnish v1 -arg "-p vcl_path=${tmpdir} -f unlikely_file_name...
**** dT   0.011
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.92938.29982697/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 32997' -P /tmp/vtc.92938.29982697/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs  -p vcl_path=/tmp/vtc.92938.29982697 -f unlikely_file_name.vcl
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.92938.29982697/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 32997' -P /tmp/vtc.92938.29982697/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs  -p vcl_path=/tmp/vtc.92938.29982697 -f unlikely_file_name.vcl
***  v1   PID: 92959
**** v1   macro def v1_pid=92959
**** v1   macro def v1_name=/tmp/vtc.92938.29982697/v1
**** dT   0.177
***  v1   debug|Warnings:
***  v1   debug|VCL compiled.
***  v1   debug|
**** dT   0.182
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.281
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 5
***  v1   CLI RX  107
**** v1   CLI RX|dutigaouftcnmobwfqzdpamflpnxkjws
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** v1   CLI TX|auth 2d99e10c60825bc27000e2b827015b7760fdb2dae5c50b1f67712bba4195ea0b
**** dT   0.282
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**   v1   Start
**** v1   CLI TX|start
**** dT   0.285
***  v1   debug|Debug: Child (92971) Started
**** dT   0.311
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   debug|Info: Child (92971) said Child starts
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 41833
**** v1   CLI TX|debug.xid 999
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
**** dT   0.312
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 41833
**   v1   Listen on 127.0.0.1 41833
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=41833
**** v1   macro def v1_sock=127.0.0.1 41833
**** dT   0.382
**** v1   vsl|          0 CLI             - Rd vcl.load "boot" vcl_boot.1634893159.113006/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_boot.1634893159.113006/vgc.so" as "boot"
**** v1   vsl|          0 CLI             - Rd vcl.use "boot"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 41833

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 41833

**** dT   0.412
**   top  === varnish v1 -cliexpect "VCL.SHOW .+ ${tmpdir}/unlikely_file_n...
**** v1   CLI TX|vcl.show -v boot
***  v1   CLI RX  200
**** v1   CLI RX|// VCL.SHOW 0 52 /tmp/vtc.92938.29982697/unlikely_file_name.vcl
**** v1   CLI RX|vcl 4.0;
**** v1   CLI RX|
**** v1   CLI RX|backend be {
**** v1   CLI RX|.host = "127.0.0.1 42223";
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|// VCL.SHOW 1 5303 Builtin
**** v1   CLI RX|/*-
**** v1   CLI RX| * Copyright (c) 2006 Verdens Gang AS
**** v1   CLI RX| * Copyright (c) 2006-2015 Varnish Software AS
**** v1   CLI RX| * All rights reserved.
**** v1   CLI RX| *
**** v1   CLI RX| * Author: Poul-Henning Kamp <phk@phk.freebsd.dk>
**** v1   CLI RX| *
**** v1   CLI RX| * SPDX-License-Identifier: BSD-2-Clause
**** v1   CLI RX| *
**** v1   CLI RX| * Redistribution and use in source and binary forms, with or without
**** v1   CLI RX| * modification, are permitted provided that the following conditions
**** v1   CLI RX| * are met:
**** v1   CLI RX| * 1. Redistributions of source code must retain the above copyright
**** v1   CLI RX| *    notice, this list of conditions and the following disclaimer.
**** v1   CLI RX| * 2. Redistributions in binary form must reproduce the above copyright
**** v1   CLI RX| *    notice, this list of conditions and the following disclaimer in the
**** v1   CLI RX| *    documentation and/or other materials provided with the distribution.
**** v1   CLI RX| *
**** v1   CLI RX| * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
**** v1   CLI RX| * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
**** v1   CLI RX| * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
**** v1   CLI RX| * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
**** v1   CLI RX| * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
**** v1   CLI RX| * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
**** v1   CLI RX| * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**** v1   CLI RX| * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
**** v1   CLI RX| * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
**** v1   CLI RX| * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
**** v1   CLI RX| * SUCH DAMAGE.
**** v1   CLI RX| *
**** v1   CLI RX| * This is the builtin VCL code
**** v1   CLI RX| */
**** v1   CLI RX|
**** v1   CLI RX|vcl 4.0;
**** v1   CLI RX|
**** v1   CLI RX|#######################################################################
**** v1   CLI RX|# Client side
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_recv {
**** v1   CLI RX|    if (req.http.host) {
**** v1   CLI RX|        set req.http.host = req.http.host.lower();
**** v1   CLI RX|    }
**** v1   CLI RX|    if (req.method == "PRI") {
**** v1   CLI RX|        /* This will never happen in properly formed traffic (see: RFC7540) */
**** v1   CLI RX|        return (synth(405));
**** v1   CLI RX|    }
**** v1   CLI RX|    if (!req.http.host &&
**** v1   CLI RX|      req.esi_level == 0 &&
**** v1   CLI RX|      req.proto ~ "^(?i)HTTP/1.1") {
**** v1   CLI RX|        /* In HTTP/1.1, Host is required. */
**** v1   CLI RX|        return (synth(400));
**** v1   CLI RX|    }
**** v1   CLI RX|    if (req.method != "GET" &&
**** v1   CLI RX|      req.method != "HEAD" &&
**** v1   CLI RX|      req.method != "PUT" &&
**** v1   CLI RX|      req.method != "POST" &&
**** v1   CLI RX|      req.method != "TRACE" &&
**** v1   CLI RX|      req.method != "OPTIONS" &&
**** v1   CLI RX|      req.method != "DELETE" &&
**** v1   CLI RX|      req.method != "PATCH") {
**** v1   CLI RX|        /* Non-RFC2616 or CONNECT which is weird. */
**** v1   CLI RX|        return (pipe);
**** v1   CLI RX|    }
**** v1   CLI RX|
**** v1   CLI RX|    if (req.method != "GET" && req.method != "HEAD") {
**** v1   CLI RX|        /* We only deal with GET and HEAD by default */
**** v1   CLI RX|        return (pass);
**** v1   CLI RX|    }
**** v1   CLI RX|    if (req.http.Authorization || req.http.Cookie) {
**** v1   CLI RX|        /* Not cacheable by default */
**** v1   CLI RX|        return (pass);
**** v1   CLI RX|    }
**** v1   CLI RX|    return (hash);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_pipe {
**** v1   CLI RX|    # By default Connection: close is set on all piped requests, to stop
**** v1   CLI RX|    # connection reuse from sending future requests directly to the
**** v1   CLI RX|    # (potentially) wrong backend. If you do want this to happen, you can undo
**** v1   CLI RX|    # it here.
**** v1   CLI RX|    # unset bereq.http.connection;
**** v1   CLI RX|    return (pipe);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_pass {
**** v1   CLI RX|    return (fetch);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_hash {
**** v1   CLI RX|    hash_data(req.url);
**** v1   CLI RX|    if (req.http.host) {
**** v1   CLI RX|        hash_data(req.http.host);
**** v1   CLI RX|    } else {
**** v1   CLI RX|        hash_data(server.ip);
**** v1   CLI RX|    }
**** v1   CLI RX|    return (lookup);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_purge {
**** v1   CLI RX|    return (synth(200, "Purged"));
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_hit {
**** v1   CLI RX|    return (deliver);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_miss {
**** v1   CLI RX|    return (fetch);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_deliver {
**** v1   CLI RX|    return (deliver);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|/*
**** v1   CLI RX| * We can come here "invisibly" with the following errors: 500 & 503
**** v1   CLI RX| */
**** v1   CLI RX|sub vcl_synth {
**** v1   CLI RX|    set resp.http.Content-Type = "text/html; charset=utf-8";
**** v1   CLI RX|    set resp.http.Retry-After = "5";
**** v1   CLI RX|    set resp.body = {"<!DOCTYPE html>
**** v1   CLI RX|<html>
**** v1   CLI RX|  <head>
**** v1   CLI RX|    <title>"} + resp.status + " " + resp.reason + {"</title>
**** v1   CLI RX|  </head>
**** v1   CLI RX|  <body>
**** v1   CLI RX|    <h1>Error "} + resp.status + " " + resp.reason + {"</h1>
**** v1   CLI RX|    <p>"} + resp.reason + {"</p>
**** v1   CLI RX|    <h3>Guru Meditation:</h3>
**** v1   CLI RX|    <p>XID: "} + req.xid + {"</p>
**** v1   CLI RX|    <hr>
**** v1   CLI RX|    <p>Varnish cache server</p>
**** v1   CLI RX|  </body>
**** v1   CLI RX|</html>
**** v1   CLI RX|"};
**** v1   CLI RX|    return (deliver);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|#######################################################################
**** v1   CLI RX|# Backend Fetch
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_backend_fetch {
**** v1   CLI RX|    if (bereq.method == "GET") {
**** v1   CLI RX|        unset bereq.body;
**** v1   CLI RX|    }
**** v1   CLI RX|    return (fetch);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_backend_response {
**** v1   CLI RX|    if (bereq.uncacheable) {
**** v1   CLI RX|        return (deliver);
**** v1   CLI RX|    } else if (beresp.ttl <= 0s ||
**** v1   CLI RX|      beresp.http.Set-Cookie ||
**** v1   CLI RX|      beresp.http.Surrogate-control ~ "(?i)no-store" ||
**** v1   CLI RX|      (!beresp.http.Surrogate-Control &&
**** v1   CLI RX|        beresp.http.Cache-Control ~ "(?i:no-cache|no-store|private)") ||
**** v1   CLI RX|      beresp.http.Vary == "*") {
**** v1   CLI RX|        # Mark as "Hit-For-Miss" for the next 2 minutes
**** v1   CLI RX|        set beresp.ttl = 120s;
**** v1   CLI RX|        set beresp.uncacheable = true;
**** v1   CLI RX|    }
**** v1   CLI RX|    return (deliver);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_backend_error {
**** v1   CLI RX|    set beresp.http.Content-Type = "text/html; charset=utf-8";
**** v1   CLI RX|    set beresp.http.Retry-After = "5";
**** v1   CLI RX|    set beresp.body = {"<!DOCTYPE html>
**** v1   CLI RX|<html>
**** v1   CLI RX|  <head>
**** v1   CLI RX|    <title>"} + beresp.status + " " + beresp.reason + {"</title>
**** v1   CLI RX|  </head>
**** v1   CLI RX|  <body>
**** v1   CLI RX|    <h1>Error "} + beresp.status + " " + beresp.reason + {"</h1>
**** v1   CLI RX|    <p>"} + beresp.reason + {"</p>
**** v1   CLI RX|    <h3>Guru Meditation:</h3>
**** v1   CLI RX|    <p>XID: "} + bereq.xid + {"</p>
**** v1   CLI RX|    <hr>
**** v1   CLI RX|    <p>Varnish cache server</p>
**** v1   CLI RX|  </body>
**** v1   CLI RX|</html>
**** v1   CLI RX|"};
**** v1   CLI RX|    return (deliver);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|#######################################################################
**** v1   CLI RX|# Housekeeping
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_init {
**** v1   CLI RX|    return (ok);
**** v1   CLI RX|}
**** v1   CLI RX|
**** v1   CLI RX|sub vcl_fini {
**** v1   CLI RX|    return (ok);
**** v1   CLI RX|}
**** v1   CLI RX|
**   v1   CLI 200 <vcl.show -v boot>
*    top  RESETTING after ./tests/r02342.vtc
**   v1   Wait
**** v1   CLI TX|backend.list
**** dT   0.413
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin      Probe    Health     Last change
**** v1   CLI RX|boot.be        healthy    0/0      healthy    Fri, 22 Oct 2021 08:59:19 GMT
**   v1   Stop
**** v1   CLI TX|stop
***  v1   debug|Debug: Stopping Child
**** dT   0.482
**** v1   vsl|          0 CLI             - Rd vcl.show -v boot 
**** v1   vsl|          0 CLI             - Wr 200 5448 // VCL.SHOW 0 52 /tmp/vtc.92938.29982697/unlikely_file_name.vcl
vcl 4.0;

backend be {
.host = "127.0.0.1 42223";
}

// VCL.SHOW 1 5303 Builtin
/*-
 * Copyright (c) 2006 Verdens Gang AS
 * Copyright (c) 2006-2015 Varnish Software AS
 * All ri
**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 CLI             - Wr 200 134 Backend name   Admin      Probe    Health     Last change
boot.be        healthy    0/0      healthy    Fri, 22 Oct 2021 08:59:19 GMT

**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   1.413
***  v1   debug|Info: Child (92971) ended
***  v1   debug|Info: Child (92971) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
**** dT   1.414
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** v1   STDOUT EOF
**** dT   1.484
**   v1   WAIT4 pid=92959 status=0x0000 (user 0.138257 sys 0.046237)
*    top  TEST ./tests/r02342.vtc completed
#    top  TEST ./tests/r02342.vtc passed (1.485)
