**** dT   0.000
*    top  TEST ./tests/d00016.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 42103
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.61491.4164cc00
**   top  === varnishtest "shard director/int reconfiguration outside init...
*    top  VTEST shard director/int reconfiguration outside init
**   top  === server s1 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=40117
**** s1   macro def s1_sock=127.0.0.1 40117
*    s1   Listen on 127.0.0.1 40117
**   top  === server s2 {
**   s2   Starting server
**** s2   macro def s2_addr=127.0.0.1
**** s2   macro def s2_port=36297
**** s2   macro def s2_sock=127.0.0.1 36297
*    s2   Listen on 127.0.0.1 36297
**   top  === server s3 {
**   s3   Starting server
**   s1   Started on 127.0.0.1 40117 (1 iterations)
**** s3   macro def s3_addr=127.0.0.1
**** s3   macro def s3_port=33923
**** s3   macro def s3_sock=127.0.0.1 33923
*    s3   Listen on 127.0.0.1 33923
**   top  === varnish v1 -vcl+backend {
**   s3   Started on 127.0.0.1 33923 (1 iterations)
**   s2   Started on 127.0.0.1 36297 (1 iterations)
**** dT   0.004
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.61491.4164cc00/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 40995' -P /tmp/vtc.61491.4164cc00/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.61491.4164cc00/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 40995' -P /tmp/vtc.61491.4164cc00/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   PID: 61512
**** v1   macro def v1_pid=61512
**** v1   macro def v1_name=/tmp/vtc.61491.4164cc00/v1
**** dT   0.012
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.111
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 11
***  v1   CLI RX  107
**** v1   CLI RX|uwfmrjpldevykhreqnlqtpcalceboijj
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** dT   0.112
**** v1   CLI TX|auth 0421810975cdfef9827eec9ed357f93ff2839800b1e8292022b7a449e2650254
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**** v1   CLI TX|vcl.inline vcl1 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|backend s1 { .host = "127.0.0.1"; .port = "40117"; }
**** v1   CLI TX|backend s2 { .host = "127.0.0.1"; .port = "36297"; }
**** v1   CLI TX|backend s3 { .host = "127.0.0.1"; .port = "33923"; }
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|\timport std;
**** v1   CLI TX|\timport directors;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew vd = directors.shard();
**** v1   CLI TX|\t\tnew vd2 = directors.shard();
**** v1   CLI TX|\t\tvd.debug(3);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- invalid replicas");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=0)) {
**** v1   CLI TX|\t\t\t# continue intentionally
**** v1   CLI TX|\t\t\tstd.log("reconfigure failed");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- no changes - no debug output");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=25)) {
**** v1   CLI TX|\t\t\t# continue intentionally
**** v1   CLI TX|\t\t\tstd.log("reconfigure failed");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- no backends");
**** v1   CLI TX|\t\tif (!vd.clear()) {
**** v1   CLI TX|\t\t\treturn(fail("clear failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=25)) {
**** v1   CLI TX|\t\t\t# continue intentionally
**** v1   CLI TX|\t\t\tstd.log("reconfigure failed");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- one backend");
**** v1   CLI TX|\t\tif (!vd.add_backend(s1)) {
**** v1   CLI TX|\t\t\treturn(fail("add s1 failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- no change - no output");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- change, clear, no backends");
**** v1   CLI TX|\t\t# change, then clear
**** v1   CLI TX|\t\tvd.add_backend(s1);
**** v1   CLI TX|\t\tvd.add_backend(s2);
**** v1   CLI TX|\t\tvd.clear();
**** v1   CLI TX|\t\tvd.add_backend(s1);
**** v1   CLI TX|\t\tvd.add_backend(s2);
**** v1   CLI TX|\t\tvd.clear();
**** v1   CLI TX|\t\tif (!vd.reconfigure()) {
**** v1   CLI TX|\t\t\t# continue intentionally
**** v1   CLI TX|\t\t\tstd.log("reconfigure failed");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- duplicate add");
**** v1   CLI TX|\t\tvd.clear();
**** v1   CLI TX|\t\tvd.add_backend(s1);
**** v1   CLI TX|\t\tvd.add_backend(s2);
**** v1   CLI TX|\t\tvd.add_backend(s1);
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- duplicate add with idents");
**** v1   CLI TX|\t\tvd.clear();
**** v1   CLI TX|\t\tvd.add_backend(s1);
**** v1   CLI TX|\t\tvd.add_backend(s1, ident="s1_1");
**** v1   CLI TX|\t\tvd.add_backend(s1, ident="s1_2");
**** v1   CLI TX|\t\tvd.add_backend(s2);
**** v1   CLI TX|\t\tvd.add_backend(s2, ident="s1");
**** v1   CLI TX|\t\tvd.add_backend(s2, ident="s1_1");
**** v1   CLI TX|\t\tvd.add_backend(s2, ident="s1_2");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- remove s1_2 specifically");
**** v1   CLI TX|\t\tvd.remove_backend(ident="s1_2");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- remove all instances of s1");
**** v1   CLI TX|\t\tvd.remove_backend(s1);
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- re-add some - no 2nd director");
**** v1   CLI TX|\t\tvd.clear();
**** v1   CLI TX|\t\tvd.add_backend(s3, "1");
**** v1   CLI TX|\t\tvd.add_backend(s3, "2");
**** v1   CLI TX|\t\tvd.add_backend(s3, "3");
**** v1   CLI TX|\t\tvd2.clear();
**** v1   CLI TX|\t\tvd.add_backend(s3, "4");
**** v1   CLI TX|\t\tvd.add_backend(s3, "5");
**** v1   CLI TX|\t\tvd.add_backend(s3, "6");
**** v1   CLI TX|\t\tvd.add_backend(s3, "7");
**** v1   CLI TX|\t\tvd.add_backend(s3, "8");
**** v1   CLI TX|\t\tvd.add_backend(s3, "9");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- remove second-last");
**** v1   CLI TX|\t\tvd.remove_backend(ident="8");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- remove last");
**** v1   CLI TX|\t\tvd.remove_backend(ident="9");
**** v1   CLI TX|\t\tif (!vd.reconfigure(replicas=1)) {
**** v1   CLI TX|\t\t\treturn(fail("reconfigure failed"));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tstd.log("-- END");
**** v1   CLI TX|\t\tset req.backend_hint = vd.backend();
**** v1   CLI TX|\t\treturn(pass);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.212
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.312
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.386
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl1
***  v1   CLI RX  200
**   v1   Start
**** v1   CLI TX|start
**** dT   0.388
***  v1   debug|Debug: Child (61524) Started
**** dT   0.415
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   debug|Info: Child (61524) said Child starts
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 39111
**** v1   CLI TX|debug.xid 999
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
**** dT   0.416
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 39111
**   v1   Listen on 127.0.0.1 39111
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=39111
**** v1   macro def v1_sock=127.0.0.1 39111
**** dT   0.513
**** v1   vsl|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892766.784046/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl1.1634892766.784046/vgc.so" as "vcl1"
**** v1   vsl|          0 CLI             - Rd vcl.use "vcl1"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 39111

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 39111

**** dT   0.516
**   top  === logexpect l1 -v v1 -g raw -d 1 {
**   l1   === expect * 1001    VCL_Log {^-- invalid replicas$}
**   l1   === expect 0 1001    Error   {^shard vd: .reconfigure.. invalid ...
**   l1   === expect 0 1001    VCL_Log {^reconfigure failed}
**   l1   === expect 0 1001    VCL_Log {^-- no changes - no debug output$}
**   l1   === expect 0 1001    VCL_Log {^-- no backends$}
**   l1   === expect 0 1001    Error   {^shard vd: .reconfigure.. no backe...
**   l1   === expect 0 1001    VCL_Log {^reconfigure failed}
**   l1   === expect 0 1001    VCL_Log {^-- one backend$}
**   l1   === expect 0 1001    VCL_Log {^-- no change - no output$}
**   l1   === expect 0 1001    VCL_Log {^-- change, clear, no backends$}
**   l1   === expect 0 1001    Error   {^shard vd: .reconfigure.. no backe...
**   l1   === expect 0 1001    VCL_Log {^reconfigure failed}
**   l1   === expect 0 1001    VCL_Log {^-- duplicate add$}
**   l1   === expect 0 1001    Error   {^shard vd: .notice. backend s1 alr...
**   l1   === expect 0 1001    VCL_Log {^-- duplicate add with idents$}
**   l1   === expect 0 1001    Error   {^shard vd: .notice. backend s1 alr...
**   l1   === expect 0 1001    Error   {^shard vd: .notice. backend s1/s1_...
**   l1   === expect 0 1001    Error   {^shard vd: .notice. backend s1/s1_...
**   l1   === expect 0 1001    VCL_Log {^-- remove s1_2 specifically$}
**   l1   === expect 0 1001    VCL_Log {^-- remove all instances of s1$}
**   l1   === expect 0 1001    VCL_Log {^-- re-add some - no 2nd director$...
**   l1   === expect 0 1001    Error   {^shard vd2: cannot change more tha...
**   l1   === expect 0 1001    VCL_Log {^-- remove second-last$}
**   l1   === expect 0 1001    VCL_Log {^-- remove last$}
**   l1   === expect 0 1001    VCL_Log {^-- END$}
**   top  === logexpect l2 -v v1 -g raw -d 1 {
**   l2   === expect *    0    Debug   {^shard:.*point = f08ad325, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 6e040182, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f08ad325, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 6e040182, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 732c7bbe, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = bae80b0b, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f08ad325, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 6e040182, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = bae80b0b, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f08ad325, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 6e040182, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  3d1fe97, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  a25a43b, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 2b20d9a2, host = ...
**** dT   0.517
**   l2   === expect 0    0    Debug   {^shard:.*point = 6337e62c, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = c9803f17, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = d51dafe6, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = eb74a7d5, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f493ce58, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = fc1a5162, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  3d1fe97, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  a25a43b, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 2b20d9a2, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 6337e62c, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = c9803f17, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = d51dafe6, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = eb74a7d5, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f493ce58, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  3d1fe97, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point =  a25a43b, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = 2b20d9a2, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = c9803f17, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = d51dafe6, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = eb74a7d5, host = ...
**   l2   === expect 0    0    Debug   {^shard:.*point = f493ce58, host = ...
**   top  === logexpect l1 -start
**   top  === logexpect l2 -start
**** l1   begin|
***  l1   expecting| expect * 1001 VCL_Log ^-- invalid replicas$
**   top  === client c1 {
**   c1   Starting client
**** l2   begin|
***  l2   expecting| expect * 0 Debug ^shard:.*point = f08ad325, host =  0
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 39111 (1 iterations)
***  c1   Connect to 127.0.0.1 39111
**** dT   0.518
***  c1   connected fd 31 from 127.0.0.1 45354 to 127.0.0.1 39111
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
***  s3   accepted fd 8 127.0.0.1 34088
**   s3   === rxreq
**** s3   rxhdr|GET / HTTP/1.1\r
**** s3   rxhdr|Host: 127.0.0.1\r
**** s3   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s3   rxhdr|X-Varnish: 1002\r
**** s3   rxhdr|\r
**** s3   rxhdrlen = 80
**** s3   http[ 0] |GET
**** s3   http[ 1] |/
**** s3   http[ 2] |HTTP/1.1
**** s3   http[ 3] |Host: 127.0.0.1
**** s3   http[ 4] |X-Forwarded-For: 127.0.0.1
**** s3   http[ 5] |X-Varnish: 1002
**** s3   bodylen = 0
**   s3   === txresp -body "xiuFi3Pe"
**** s3   txresp|HTTP/1.1 200 OK\r
**** s3   txresp|Content-Length: 8\r
**** s3   txresp|\r
**** s3   txresp|xiuFi3Pe
***  s3   shutting fd 8
**   s3   Ending
**** dT   0.519
**   c1   === rxresp
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Content-Length: 8\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:52:47 GMT\r
**** c1   rxhdr|X-Varnish: 1001\r
**** c1   rxhdr|Age: 0\r
**** c1   rxhdr|Via: 1.1 varnish (Varnish/6.5)\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 178
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Content-Length: 8
**** c1   http[ 4] |Date: Fri, 22 Oct 2021 08:52:47 GMT
**** c1   http[ 5] |X-Varnish: 1001
**** c1   http[ 6] |Age: 0
**** c1   http[ 7] |Via: 1.1 varnish (Varnish/6.5)
**** c1   http[ 8] |Accept-Ranges: bytes
**** c1   http[ 9] |Connection: keep-alive
**** c1   c-l|xiuFi3Pe
**** c1   bodylen = 8
**   c1   === expect resp.body == "xiuFi3Pe"
**** c1   EXPECT resp.body (xiuFi3Pe) == "xiuFi3Pe" match
***  c1   closing fd 31
**   c1   Ending
**   top  === logexpect l1 -wait
**   l1   Waiting for logexp
**** dT   0.527
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point = f08ad325, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6e040182, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f08ad325, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point = f08ad325, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6e040182, host =  3
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  3}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 732c7bbe, host =  2
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point = 732c7bbe, host =  2}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = bae80b0b, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    2] = {point = bae80b0b, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f08ad325, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    3] = {point = f08ad325, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6e040182, host =  2
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  2}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = bae80b0b, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point = bae80b0b, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f08ad325, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    2] = {point = f08ad325, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6e040182, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  3d1fe97, host =  3
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  a25a43b, host =  6
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 2b20d9a2, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6337e62c, host =  8
**** l2   match|          0 Debug           - shard: hashcircle[    3] = {point = 6337e62c, host =  8}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = c9803f17, host =  5
**** l2   match|          0 Debug           - shard: hashcircle[    4] = {point = c9803f17, host =  5}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = d51dafe6, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    5] = {point = d51dafe6, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = eb74a7d5, host =  4
**** l2   match|          0 Debug           - shard: hashcircle[    6] = {point = eb74a7d5, host =  4}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f493ce58, host =  2
**** l2   match|          0 Debug           - shard: hashcircle[    7] = {point = f493ce58, host =  2}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = fc1a5162, host =  7
**** l2   match|          0 Debug           - shard: hashcircle[    8] = {point = fc1a5162, host =  7}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  3d1fe97, host =  3
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  a25a43b, host =  6
**** dT   0.528
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 2b20d9a2, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 6337e62c, host =  7
**** l2   match|          0 Debug           - shard: hashcircle[    3] = {point = 6337e62c, host =  7}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = c9803f17, host =  5
**** l2   match|          0 Debug           - shard: hashcircle[    4] = {point = c9803f17, host =  5}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = d51dafe6, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    5] = {point = d51dafe6, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = eb74a7d5, host =  4
**** l2   match|          0 Debug           - shard: hashcircle[    6] = {point = eb74a7d5, host =  4}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f493ce58, host =  2
**** l2   match|          0 Debug           - shard: hashcircle[    7] = {point = f493ce58, host =  2}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  3d1fe97, host =  3
**** l2   match|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

***  l2   expecting| expect 0 0 Debug ^shard:.*point =  a25a43b, host =  6
**** l2   match|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = 2b20d9a2, host =  1
**** l2   match|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = c9803f17, host =  5
**** l2   match|          0 Debug           - shard: hashcircle[    3] = {point = c9803f17, host =  5}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = d51dafe6, host =  0
**** l2   match|          0 Debug           - shard: hashcircle[    4] = {point = d51dafe6, host =  0}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = eb74a7d5, host =  4
**** l2   match|          0 Debug           - shard: hashcircle[    5] = {point = eb74a7d5, host =  4}

***  l2   expecting| expect 0 0 Debug ^shard:.*point = f493ce58, host =  2
**** l2   match|          0 Debug           - shard: hashcircle[    6] = {point = f493ce58, host =  2}

**** l2   end|
**** dT   0.537
**** l1   match|       1001 VCL_Log         c -- invalid replicas
***  l1   expecting| expect 0 1001 Error ^shard vd: .reconfigure.. invalid replicas argument 0
**** l1   match|       1001 Error           c shard vd: .reconfigure() invalid replicas argument 0
***  l1   expecting| expect 0 1001 VCL_Log ^reconfigure failed
**** l1   match|       1001 VCL_Log         c reconfigure failed
***  l1   expecting| expect 0 1001 VCL_Log ^-- no changes - no debug output$
**** l1   match|       1001 VCL_Log         c -- no changes - no debug output
***  l1   expecting| expect 0 1001 VCL_Log ^-- no backends$
**** l1   match|       1001 VCL_Log         c -- no backends
***  l1   expecting| expect 0 1001 Error ^shard vd: .reconfigure.. no backends
**** l1   match|       1001 Error           c shard vd: .reconfigure() no backends
***  l1   expecting| expect 0 1001 VCL_Log ^reconfigure failed
**** l1   match|       1001 VCL_Log         c reconfigure failed
***  l1   expecting| expect 0 1001 VCL_Log ^-- one backend$
**** l1   match|       1001 VCL_Log         c -- one backend
***  l1   expecting| expect 0 1001 VCL_Log ^-- no change - no output$
**** l1   match|       1001 VCL_Log         c -- no change - no output
***  l1   expecting| expect 0 1001 VCL_Log ^-- change, clear, no backends$
**** l1   match|       1001 VCL_Log         c -- change, clear, no backends
***  l1   expecting| expect 0 1001 Error ^shard vd: .reconfigure.. no backends
**** l1   match|       1001 Error           c shard vd: .reconfigure() no backends
***  l1   expecting| expect 0 1001 VCL_Log ^reconfigure failed
**** l1   match|       1001 VCL_Log         c reconfigure failed
***  l1   expecting| expect 0 1001 VCL_Log ^-- duplicate add$
**** l1   match|       1001 VCL_Log         c -- duplicate add
***  l1   expecting| expect 0 1001 Error ^shard vd: .notice. backend s1 already exists - skipping$
**** l1   match|       1001 Error           c shard vd: (notice) backend s1 already exists - skipping
***  l1   expecting| expect 0 1001 VCL_Log ^-- duplicate add with idents$
**** l1   match|       1001 VCL_Log         c -- duplicate add with idents
***  l1   expecting| expect 0 1001 Error ^shard vd: .notice. backend s1 already exists - skipping
**** l1   match|       1001 Error           c shard vd: (notice) backend s1 already exists - skipping
***  l1   expecting| expect 0 1001 Error ^shard vd: .notice. backend s1/s1_1 already exists - skipping
**** l1   match|       1001 Error           c shard vd: (notice) backend s1/s1_1 already exists - skipping
***  l1   expecting| expect 0 1001 Error ^shard vd: .notice. backend s1/s1_2 already exists - skipping
**** l1   match|       1001 Error           c shard vd: (notice) backend s1/s1_2 already exists - skipping
***  l1   expecting| expect 0 1001 VCL_Log ^-- remove s1_2 specifically$
**** l1   match|       1001 VCL_Log         c -- remove s1_2 specifically
***  l1   expecting| expect 0 1001 VCL_Log ^-- remove all instances of s1$
**** l1   match|       1001 VCL_Log         c -- remove all instances of s1
***  l1   expecting| expect 0 1001 VCL_Log ^-- re-add some - no 2nd director$
**** l1   match|       1001 VCL_Log         c -- re-add some - no 2nd director
***  l1   expecting| expect 0 1001 Error ^shard vd2: cannot change more than
**** l1   match|       1001 Error           c shard vd2: cannot change more than one shard director at a time
***  l1   expecting| expect 0 1001 VCL_Log ^-- remove second-last$
**** l1   match|       1001 VCL_Log         c -- remove second-last
***  l1   expecting| expect 0 1001 VCL_Log ^-- remove last$
**** l1   match|       1001 VCL_Log         c -- remove last
***  l1   expecting| expect 0 1001 VCL_Log ^-- END$
**** l1   match|       1001 VCL_Log         c -- END
**** l1   end|
**   top  === logexpect l2 -wait
**   l2   Waiting for logexp
*    top  RESETTING after ./tests/d00016.vtc
**** dT   0.538
**   s1   Waiting for server (4/-1)
**   s2   Waiting for server (5/-1)
**   s3   Waiting for server (6/-1)
**   v1   Wait
**** v1   CLI TX|backend.list
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin      Probe    Health     Last change
**** v1   CLI RX|vcl1.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:52:47 GMT
**** v1   CLI RX|vcl1.s2        healthy    0/0      healthy    Fri, 22 Oct 2021 08:52:47 GMT
**** v1   CLI RX|vcl1.s3        healthy    0/0      healthy    Fri, 22 Oct 2021 08:52:47 GMT
**** v1   CLI RX|vcl1.vd        probe      7/7      healthy    Fri, 22 Oct 2021 08:52:47 GMT
**** v1   CLI RX|vcl1.vd2       probe      0/0      sick       Fri, 22 Oct 2021 08:52:47 GMT
**   v1   Stop
**** v1   CLI TX|stop
***  v1   debug|Debug: Stopping Child
**** dT   0.613
**** v1   vsl|       1000 Begin           c sess 0 HTTP/1
**** v1   vsl|       1000 SessOpen        c 127.0.0.1 45354 a0 127.0.0.1 39111 1634892767.189299 22
**** v1   vsl|       1000 Link            c req 1001 rxreq
**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point = f08ad325, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point = f08ad325, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  3}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point = 732c7bbe, host =  2}

**** v1   vsl|          0 Debug           - shard: hashcircle[    2] = {point = bae80b0b, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    3] = {point = f08ad325, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  2}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point = bae80b0b, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    2] = {point = f08ad325, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point = 6e040182, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

**** v1   vsl|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    3] = {point = 6337e62c, host =  8}

**** v1   vsl|          0 Debug           - shard: hashcircle[    4] = {point = c9803f17, host =  5}

**** v1   vsl|          0 Debug           - shard: hashcircle[    5] = {point = d51dafe6, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    6] = {point = eb74a7d5, host =  4}

**** v1   vsl|          0 Debug           - shard: hashcircle[    7] = {point = f493ce58, host =  2}

**** v1   vsl|          0 Debug           - shard: hashcircle[    8] = {point = fc1a5162, host =  7}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

**** v1   vsl|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    3] = {point = 6337e62c, host =  7}

**** v1   vsl|          0 Debug           - shard: hashcircle[    4] = {point = c9803f17, host =  5}

**** v1   vsl|          0 Debug           - shard: hashcircle[    5] = {point = d51dafe6, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    6] = {point = eb74a7d5, host =  4}

**** v1   vsl|          0 Debug           - shard: hashcircle[    7] = {point = f493ce58, host =  2}

**** v1   vsl|          0 Debug           - shard: hashcircle[    0] = {point =  3d1fe97, host =  3}

**** v1   vsl|          0 Debug           - shard: hashcircle[    1] = {point =  a25a43b, host =  6}

**** v1   vsl|          0 Debug           - shard: hashcircle[    2] = {point = 2b20d9a2, host =  1}

**** v1   vsl|          0 Debug           - shard: hashcircle[    3] = {point = c9803f17, host =  5}

**** v1   vsl|          0 Debug           - shard: hashcircle[    4] = {point = d51dafe6, host =  0}

**** v1   vsl|          0 Debug           - shard: hashcircle[    5] = {point = eb74a7d5, host =  4}

**** v1   vsl|          0 Debug           - shard: hashcircle[    6] = {point = f493ce58, host =  2}

**** v1   vsl|          0 Debug           - shard: lookup key f1a0febd idx 6 host 2
**** v1   vsl|       1002 Begin           b bereq 1001 pass
**** v1   vsl|       1002 VCL_use         b vcl1
**** v1   vsl|       1002 Timestamp       b Start: 1634892767.189611 0.000000 0.000000
**** v1   vsl|       1002 BereqMethod     b GET
**** v1   vsl|       1002 BereqURL        b /
**** v1   vsl|       1002 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1002 BereqHeader     b Host: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b X-Varnish: 1002
**** v1   vsl|       1002 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1002 VCL_return      b fetch
**** v1   vsl|       1002 BackendOpen     b 28 s3 127.0.0.1 33923 127.0.0.1 34088 connect
**** v1   vsl|       1002 Timestamp       b Bereq: 1634892767.189764 0.000152 0.000152
**** v1   vsl|       1002 Timestamp       b Beresp: 1634892767.190204 0.000593 0.000440
**** v1   vsl|       1002 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1002 BerespStatus    b 200
**** v1   vsl|       1002 BerespReason    b OK
**** v1   vsl|       1002 BerespHeader    b Content-Length: 8
**** v1   vsl|       1002 BerespHeader    b Date: Fri, 22 Oct 2021 08:52:47 GMT
**** v1   vsl|       1002 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1002 VCL_return      b deliver
**** v1   vsl|       1002 Filters         b 
**** v1   vsl|       1002 Storage         b malloc Transient
**** v1   vsl|       1002 Fetch_Body      b 3 length stream
**** v1   vsl|       1002 BackendClose    b 28 s3 recycle
**** v1   vsl|       1002 Timestamp       b BerespBody: 1634892767.200405 0.010794 0.010200
**** v1   vsl|       1002 Length          b 8
**** v1   vsl|       1002 BereqAcct       b 80 0 80 38 8 46
**** v1   vsl|       1002 End             b 
**** v1   vsl|       1001 Begin           c req 1000 rxreq
**** v1   vsl|       1001 Timestamp       c Start: 1634892767.189448 0.000000 0.000000
**** v1   vsl|       1001 Timestamp       c Req: 1634892767.189448 0.000000 0.000000
**** v1   vsl|       1001 VCL_use         c vcl1
**** v1   vsl|       1001 ReqStart        c 127.0.0.1 45354 a0
**** v1   vsl|       1001 ReqMethod       c GET
**** v1   vsl|       1001 ReqURL          c /
**** v1   vsl|       1001 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1001 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1001 VCL_call        c RECV
**** v1   vsl|       1001 VCL_Log         c -- invalid replicas
**** v1   vsl|       1001 Error           c shard vd: .reconfigure() invalid replicas argument 0
**** v1   vsl|       1001 VCL_Log         c reconfigure failed
**** v1   vsl|       1001 VCL_Log         c -- no changes - no debug output
**** v1   vsl|       1001 VCL_Log         c -- no backends
**** v1   vsl|       1001 Error           c shard vd: .reconfigure() no backends
**** v1   vsl|       1001 VCL_Log         c reconfigure failed
**** v1   vsl|       1001 VCL_Log         c -- one backend
**** v1   vsl|       1001 VCL_Log         c -- no change - no output
**** v1   vsl|       1001 VCL_Log         c -- change, clear, no backends
**** v1   vsl|       1001 Error           c shard vd: .reconfigure() no backends
**** v1   vsl|       1001 VCL_Log         c reconfigure failed
**** v1   vsl|       1001 VCL_Log         c -- duplicate add
**** v1   vsl|       1001 Error           c shard vd: (notice) backend s1 already exists - skipping
**** v1   vsl|       1001 VCL_Log         c -- duplicate add with idents
**** v1   vsl|       1001 Error           c shard vd: (notice) backend s1 already exists - skipping
**** v1   vsl|       1001 Error           c shard vd: (notice) backend s1/s1_1 already exists - skipping
**** v1   vsl|       1001 Error           c shard vd: (notice) backend s1/s1_2 already exists - skipping
**** v1   vsl|       1001 VCL_Log         c -- remove s1_2 specifically
**** v1   vsl|       1001 VCL_Log         c -- remove all instances of s1
**** v1   vsl|       1001 VCL_Log         c -- re-add some - no 2nd director
**** v1   vsl|       1001 Error           c shard vd2: cannot change more than one shard director at a time
**** v1   vsl|       1001 VCL_Log         c -- remove second-last
**** v1   vsl|       1001 VCL_Log         c -- remove last
**** v1   vsl|       1001 VCL_Log         c -- END
**** v1   vsl|       1001 VCL_return      c pass
**** v1   vsl|       1001 VCL_call        c HASH
**** v1   vsl|       1001 VCL_return      c lookup
**** v1   vsl|       1001 VCL_call        c PASS
**** v1   vsl|       1001 VCL_return      c fetch
**** v1   vsl|       1001 Link            c bereq 1002 pass
**** v1   vsl|       1001 Timestamp       c Fetch: 1634892767.190319 0.000870 0.000870
**** v1   vsl|       1001 RespProtocol    c HTTP/1.1
**** v1   vsl|       1001 RespStatus      c 200
**** v1   vsl|       1001 RespReason      c OK
**** v1   vsl|       1001 RespHeader      c Content-Length: 8
**** v1   vsl|       1001 RespHeader      c Date: Fri, 22 Oct 2021 08:52:47 GMT
**** v1   vsl|       1001 RespHeader      c X-Varnish: 1001
**** v1   vsl|       1001 RespHeader      c Age: 0
**** v1   vsl|       1001 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1001 VCL_call        c DELIVER
**** v1   vsl|       1001 VCL_return      c deliver
**** v1   vsl|       1001 Timestamp       c Process: 1634892767.190335 0.000886 0.000016
**** v1   vsl|       1001 Filters         c 
**** v1   vsl|       1001 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1001 RespHeader      c Connection: keep-alive
**** v1   vsl|       1001 Timestamp       c Resp: 1634892767.200444 0.010995 0.010108
**** v1   vsl|       1001 ReqAcct         c 35 0 35 178 8 186
**** v1   vsl|       1001 End             c 
**** v1   vsl|       1000 SessClose       c REM_CLOSE 0.011
**** v1   vsl|       1000 End             c 
**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 CLI             - Wr 200 438 Backend name   Admin      Probe    Health     Last change
vcl1.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:52:47 GMT
vcl1.s2        healthy    0/0      healthy    Fri, 22 Oct 2021 08:52:47 GMT
vcl1.s3        healthy    0/0    
**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   1.539
***  v1   debug|Info: Child (61524) ended
***  v1   debug|Info: Child (61524) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
**** dT   1.583
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** dT   1.584
**** v1   STDOUT EOF
**** dT   1.615
**   v1   WAIT4 pid=61512 status=0x0000 (user 0.246754 sys 0.049454)
*    top  TEST ./tests/d00016.vtc completed
#    top  TEST ./tests/d00016.vtc passed (1.615)
