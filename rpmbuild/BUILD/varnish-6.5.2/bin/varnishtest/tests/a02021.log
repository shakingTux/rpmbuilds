**** dT   0.000
*    top  TEST ./tests/a02021.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 32849
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.45854.572e2b63
**   top  === varnishtest "Reduce dynamic table size"
*    top  VTEST Reduce dynamic table size
**   top  === server s1 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=42301
**** s1   macro def s1_sock=127.0.0.1 42301
*    s1   Listen on 127.0.0.1 42301
**   top  === client c1 -connect ${s1_sock} {
**   c1   Starting client
**   c1   Waiting for client
**   s1   Started on 127.0.0.1 42301 (1 iterations)
**** dT   0.001
**   c1   Started on 127.0.0.1 42301 (1 iterations)
***  c1   Connect to 127.0.0.1 42301
***  c1   connected fd 6 from 127.0.0.1 53206 to 127.0.0.1 42301
**   c1   === stream 1 {
**** c1   Not in H/2 mode, do what's needed
**   c1   === txpri
**** c1   txpri|PRI * HTTP/2.0\r
**** c1   txpri|\r
**** c1   txpri|SM\r
**** c1   txpri|\r
***  s1   accepted fd 5 127.0.0.1 53206
**   s1   === stream 1 {
**** s1   Not in H/2 mode, do what's needed
**   s1   === rxpri
**** dT   0.012
**   c1   === stream 0 {
**   c1   Starting stream 0x7f9f40001560
**   s1   === stream 0 {
**   s1   Starting stream 0x7f9f48001440
**   c1   Waiting for stream 0
**   s1   Waiting for stream 0
**   c1   === txsettings
***  c1   tx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 0
**   s1   === txsettings
**   c1   === rxsettings
***  s1   tx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 0
**   s1   === rxsettings
***  c1   rx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 0
**   c1   === txsettings -ack
***  c1   tx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
***  s1   rx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 0
**   s1   === txsettings -ack
***  s1   tx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
**   c1   === rxsettings
**   s1   === rxsettings
***  c1   rx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
***  c1   flag: ACK
**   c1   === expect settings.ack == true
**** c1   EXPECT settings.ack (true) == "true" match
**   c1   Ending stream 0
***  s1   rx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
***  s1   flag: ACK
**   s1   === expect settings.ack == true
**** s1   EXPECT settings.ack (true) == "true" match
**   s1   Ending stream 0
**   s1   Starting stream 0x7f9f480026d0
**   s1   Waiting for stream 1
**   s1   === rxreq
**   c1   Starting stream 0x7f9f40002760
**   c1   Waiting for stream 1
**   c1   === txreq -idxHdr 2 \
***  c1   tx: stream: 1, type: HEADERS (1), flags: 0x05, size: 53
***  s1   rx: stream: 1, type: HEADERS (1), flags: 0x05, size: 53
***  s1   flag: END_STREAM
**** s1   header[ 0]: :method : GET
**** s1   header[ 1]: :scheme : http
**** s1   header[ 2]: :path : /
**** s1   header[ 3]: :authority : www.example.com
**** s1   header[ 4]: :path : /
**** s1   header[ 5]: :method : GET
**** s1   header[ 6]: :scheme : http
**   s1   === txresp  -litHdr inc plain hoge plain fuga
***  s1   tx: stream: 1, type: HEADERS (1), flags: 0x05, size: 24
**   s1   === expect tbl.dec.size == 57
**** s1   EXPECT tbl.dec.size (57) == "57" match
**   s1   === expect tbl.enc.size == 40
**** s1   EXPECT tbl.enc.size (40) == "40" match
**   s1   Ending stream 1
**   s1   === stream 0 {
**   s1   Starting stream 0x7f9f48001440
**   s1   Waiting for stream 0
**   s1   === rxsettings
**** dT   0.013
**   c1   === rxresp
***  c1   rx: stream: 1, type: HEADERS (1), flags: 0x05, size: 24
***  c1   flag: END_STREAM
**** c1   header[ 0]: hoge : fuga
**** c1   header[ 1]: :status : 200
**   c1   === expect tbl.dec.size == 40
**** c1   EXPECT tbl.dec.size (40) == "40" match
**   c1   === expect tbl.enc.size == 57
**** c1   EXPECT tbl.enc.size (57) == "57" match
**   c1   Ending stream 1
**   c1   === stream 0 {
**   c1   Starting stream 0x7f9f40001560
**   c1   Waiting for stream 0
**   c1   === txsettings -hdrtbl 0
***  c1   tx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 6
***  s1   rx: stream: 0, type: SETTINGS (4), flags: 0x00, size: 6
**** s1   settings->HEADER_TABLE_SIZE (1): 0
**   c1   === rxsettings
**   s1   === txsettings -ack
***  s1   tx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
**   s1   Ending stream 0
**   s1   === stream 3 {
***  c1   rx: stream: 0, type: SETTINGS (4), flags: 0x01, size: 0
***  c1   flag: ACK
**   s1   Starting stream 0x7f9f480037b0
**   s1   Waiting for stream 3
**   c1   Ending stream 0
**   s1   === rxreq
**   c1   === stream 3 {
**   c1   Starting stream 0x7f9f40003890
**   c1   Waiting for stream 3
**   c1   === txreq -idxHdr 2 \
***  c1   tx: stream: 3, type: HEADERS (1), flags: 0x05, size: 48
***  s1   rx: stream: 3, type: HEADERS (1), flags: 0x05, size: 48
***  s1   flag: END_STREAM
**** s1   header[ 0]: :method : GET
**** s1   header[ 1]: :scheme : http
**** s1   header[ 2]: :path : /
**** s1   header[ 3]: :authority : www.example.com
**** s1   header[ 4]: cache-control : no-cache
**** s1   header[ 5]: :path : /
**** s1   header[ 6]: :method : GET
**** s1   header[ 7]: :scheme : http
**   c1   === expect tbl.enc.size == 110
**** c1   EXPECT tbl.enc.size (110) == "110" match
**   s1   === expect tbl.dec.size == 110
**   c1   === expect tbl.dec.size == 0
**** c1   EXPECT tbl.dec.size (0) == "0" match
**** s1   EXPECT tbl.dec.size (110) == "110" match
**   c1   === rxresp
**   s1   === expect tbl.enc.size == 0
**** s1   EXPECT tbl.enc.size (0) == "0" match
**   s1   === txresp
***  s1   tx: stream: 3, type: HEADERS (1), flags: 0x05, size: 13
***  c1   rx: stream: 3, type: HEADERS (1), flags: 0x05, size: 13
***  c1   flag: END_STREAM
**** c1   header[ 0]: :status : 200
**   s1   Ending stream 3
***  s1   shutting fd 5
**** dT   0.014
**   s1   Ending
**   c1   Ending stream 3
***  c1   closing fd 6
**   c1   Ending
**   top  === server s1 -wait
**   s1   Waiting for server (4/-1)
*    top  RESETTING after ./tests/a02021.vtc
*    top  TEST ./tests/a02021.vtc completed
#    top  TEST ./tests/a02021.vtc passed (0.067)
