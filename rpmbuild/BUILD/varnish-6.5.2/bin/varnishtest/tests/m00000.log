**** dT   0.000
*    top  TEST ./tests/m00000.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 43875
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.68267.1e7ae90c
**   top  === varnishtest "Test std, vtc & debug vmod"
*    top  VTEST Test std, vtc & debug vmod
**   top  === server s1 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=34079
**** s1   macro def s1_sock=127.0.0.1 34079
*    s1   Listen on 127.0.0.1 34079
**   top  === varnish v1 -vcl+backend {
**** dT   0.001
**   s1   Started on 127.0.0.1 34079 (1 iterations)
**** dT   0.005
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.68267.1e7ae90c/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 45923' -P /tmp/vtc.68267.1e7ae90c/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.68267.1e7ae90c/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 45923' -P /tmp/vtc.68267.1e7ae90c/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   PID: 68301
**** v1   macro def v1_pid=68301
**** v1   macro def v1_name=/tmp/vtc.68267.1e7ae90c/v1
**** dT   0.017
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.115
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 7
***  v1   CLI RX  107
**** v1   CLI RX|kdhkbikuaslpzqqbstaciebljohtedgg
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** dT   0.116
**** v1   CLI TX|auth c8a9697c6ebfefae48f0af39a5abdada7d9513df32ac1b326461797712cf04ac
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**** dT   0.117
**** v1   CLI TX|vcl.inline vcl1 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|backend s1 { .host = "127.0.0.1"; .port = "34079"; }
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|\timport std;
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\timport vtc;
**** v1   CLI TX|\timport debug;\t\t// again
**** v1   CLI TX|\timport debug as dbg;
**** v1   CLI TX|\timport debug as dbg;\t// again
**** v1   CLI TX|
**** v1   CLI TX|\tsub log {
**** v1   CLI TX|\t\tstd.log("VCL" + " initiated " + "log");
**** v1   CLI TX|\t\tstd.log("01030507090b0d0f" +
**** v1   CLI TX|\t\t\t"11131517191b1d1f" +
**** v1   CLI TX|\t\t\t"21232527292b2d2f" +
**** v1   CLI TX|\t\t\t"31333537393b3d3f" +
**** v1   CLI TX|\t\t\t"41434547494b4d4f" +
**** v1   CLI TX|\t\t\t"51535557595b5d5f" +
**** v1   CLI TX|\t\t\t"61636567696b6d6f" +
**** v1   CLI TX|\t\t\t"71737577797b7d7f" +
**** v1   CLI TX|\t\t\t"81838587898b8d8f" +
**** v1   CLI TX|\t\t\t"91939597999b9d9f" +
**** v1   CLI TX|\t\t\t"a1a3a5a7a9abadaf" +
**** v1   CLI TX|\t\t\t"b1b3b5b7b9bbbdbf" +
**** v1   CLI TX|\t\t\t"c1c3c5c7c9cbcdcf" +
**** v1   CLI TX|\t\t\t"d1d3d5d7d9dbdddf" +
**** v1   CLI TX|\t\t\t"e1e3e5e7e9ebedef" +
**** v1   CLI TX|\t\t\t"f1f3f5f7f9fbfdff");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew objx = dbg.obj();
**** v1   CLI TX|\t\tdbg.vsc_new();
**** v1   CLI TX|\t\tcall log;
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_synth {
**** v1   CLI TX|\t\tset req.http.overwrite = "the workspace " +
**** v1   CLI TX|\t\t    "to ensure we notice any unfinished privs";
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub priv_task {
**** v1   CLI TX|\t\tdebug.test_priv_task("foo");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|\t\tif (req.url == "/priv-task-no-mem") {
**** v1   CLI TX|\t\t\tvtc.workspace_alloc(client, -4);
**** v1   CLI TX|\t\t\tcall priv_task;
**** v1   CLI TX|\t\t\treturn (fail);
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (req.url == "/fail") {
**** v1   CLI TX|\t\t\tdebug.test_priv_task("foo");
**** v1   CLI TX|\t\t\treturn (fail);
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tdebug.rot52(req);
**** v1   CLI TX|\t\tdebug.vsc_count();
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tset resp.http.foo = std.toupper(resp.http.foo);
**** v1   CLI TX|\t\tset resp.http.bar = std.tolower(resp.http.bar);
**** v1   CLI TX|\t\tset resp.http.who = debug.author(mithrandir);
**** v1   CLI TX|\t\tset resp.http.really = debug.author();
**** v1   CLI TX|\t\tset resp.http.when = objx.date();
**** v1   CLI TX|\t\tset resp.http.what = vtc.typesize("dfijlopsz");
**** v1   CLI TX|\t\tset resp.http.not = vtc.typesize("*");
**** v1   CLI TX|\t\tdebug.test_priv_call();
**** v1   CLI TX|\t\tdebug.test_priv_vcl();
**** v1   CLI TX|\t\tobjx.test_priv_call();
**** v1   CLI TX|\t\tobjx.test_priv_vcl();
**** v1   CLI TX|\t\tcall log;
**** v1   CLI TX|\t\tstd.syslog(8 + 7, "Somebody runs varnishtest");
**** v1   CLI TX|\t\tdebug.rot52(resp);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.217
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.314
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl1
**** dT   0.315
***  v1   CLI RX  200
**   v1   Start
**** v1   CLI TX|start
**** dT   0.317
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.318
***  v1   debug|Debug: Child (68372) Started
**** dT   0.345
***  v1   debug|Info: Child (68372) said Child starts
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 32775
**** v1   CLI TX|debug.xid 999
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 32775
**   v1   Listen on 127.0.0.1 32775
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=32775
**** v1   macro def v1_sock=127.0.0.1 32775
**** dT   0.417
**** v1   vsl|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892855.242017/vgc.so 1auto
**** v1   vsl|          0 VCL_Log         - VCL initiated log
**** v1   vsl|          0 VCL_Log         - 01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd
**** v1   vsl|          0 Debug           - vcl1: VCL_EVENT_WARM
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl1.1634892855.242017/vgc.so" as "vcl1"
**** v1   vsl|          0 CLI             - Rd vcl.use "vcl1"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 32775

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 32775

**** dT   0.445
**   top  === varnish v1 -expect DEBUG.count == 0
**** dT   0.447
**   v1   as expected: DEBUG.count (0) == 0
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 32775 (1 iterations)
***  c1   Connect to 127.0.0.1 32775
***  c1   connected fd 19 from 127.0.0.1 49708 to 127.0.0.1 32775
**   c1   === txreq -url "/bar"
**** c1   txreq|GET /bar HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
***  s1   accepted fd 5 127.0.0.1 58582
**   s1   === rxreq
**   c1   === rxresp
**** dT   0.448
**** s1   rxhdr|GET /bar HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|Encrypted: ROT52\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1002\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 124
**** s1   http[ 0] |GET
**** s1   http[ 1] |/bar
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |Encrypted: ROT52
**** s1   http[ 5] |host: 127.0.0.1
**** s1   http[ 6] |Accept-Encoding: gzip
**** s1   http[ 7] |X-Varnish: 1002
**** s1   bodylen = 0
**   s1   === expect req.http.encrypted == "ROT52"
**** s1   EXPECT req.http.encrypted (ROT52) == "ROT52" match
**   s1   === txresp -hdr "foo: bAr" -hdr "bar: fOo" -bodylen 4
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|foo: bAr\r
**** s1   txresp|bar: fOo\r
**** s1   txresp|Content-Length: 4\r
**** s1   txresp|\r
**** s1   txresp|!"#
***  s1   shutting fd 5
**   s1   Ending
**** dT   0.450
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Content-Length: 4\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:15 GMT\r
**** c1   rxhdr|X-Varnish: 1001\r
**** c1   rxhdr|Age: 0\r
**** c1   rxhdr|Via: 1.1 varnish (Varnish/6.5)\r
**** c1   rxhdr|foo: BAR\r
**** c1   rxhdr|bar: foo\r
**** c1   rxhdr|who: Tollef\r
**** c1   rxhdr|really: Poul-Henning\r
**** c1   rxhdr|when: Thu, 01 Jan 1970 00:00:21 GMT\r
**** c1   rxhdr|what: 64\r
**** c1   rxhdr|not: -1\r
**** c1   rxhdr|Encrypted: ROT52\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 307
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Content-Length: 4
**** c1   http[ 4] |Date: Fri, 22 Oct 2021 08:54:15 GMT
**** c1   http[ 5] |X-Varnish: 1001
**** c1   http[ 6] |Age: 0
**** c1   http[ 7] |Via: 1.1 varnish (Varnish/6.5)
**** c1   http[ 8] |foo: BAR
**** c1   http[ 9] |bar: foo
**** c1   http[10] |who: Tollef
**** c1   http[11] |really: Poul-Henning
**** c1   http[12] |when: Thu, 01 Jan 1970 00:00:21 GMT
**** c1   http[13] |what: 64
**** c1   http[14] |not: -1
**** c1   http[15] |Encrypted: ROT52
**** c1   http[16] |Accept-Ranges: bytes
**** c1   http[17] |Connection: keep-alive
**** c1   c-l|!"#
**** c1   bodylen = 4
**   c1   === expect resp.status == 200
**** c1   EXPECT resp.status (200) == "200" match
**   c1   === expect resp.bodylen == "4"
**** c1   EXPECT resp.bodylen (4) == "4" match
**   c1   === expect resp.http.foo == "BAR"
**** c1   EXPECT resp.http.foo (BAR) == "BAR" match
**   c1   === expect resp.http.bar == "foo"
**** c1   EXPECT resp.http.bar (foo) == "foo" match
**   c1   === expect resp.http.who == "Tollef"
**** c1   EXPECT resp.http.who (Tollef) == "Tollef" match
**   c1   === expect resp.http.really == "Poul-Henning"
**** c1   EXPECT resp.http.really (Poul-Henning) == "Poul-Henning" match
**   c1   === expect resp.http.when == "Thu, 01 Jan 1970 00:00:21 GMT"
**** c1   EXPECT resp.http.when (Thu, 01 Jan 1970 00:00:21 GMT) == "Thu, 01 Jan 1970 00:00:21 GMT" match
**   c1   === expect resp.http.encrypted == "ROT52"
**** c1   EXPECT resp.http.encrypted (ROT52) == "ROT52" match
**   c1   === expect resp.http.what >= 16
**** c1   EXPECT resp.http.what (64) >= "16" match
**   c1   === expect resp.http.not == -1
**** c1   EXPECT resp.http.not (-1) == "-1" match
**   c1   === txreq -url "/fail"
**** c1   txreq|GET /fail HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   0.459
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:15 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1003\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:15 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1003
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1003</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
***  c1   closing fd 19
**   c1   Ending
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 32775 (1 iterations)
***  c1   Connect to 127.0.0.1 32775
***  c1   connected fd 5 from 127.0.0.1 49712 to 127.0.0.1 32775
**   c1   === txreq -url "/priv-task-no-mem"
**** c1   txreq|GET /priv-task-no-mem HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   0.460
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:15 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1005\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:15 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1005
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1005</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
***  c1   closing fd 5
**   c1   Ending
**   top  === varnish v1 -expect DEBUG.count == 1
**   v1   as expected: DEBUG.count (1) == 1
**   top  === logexpect l1 -v v1 -g raw -d 1 {
**   l1   === expect * 0    CLI		{^Rd vcl.load}
**   l1   === expect 0 0    VCL_Log		{^VCL initiated log}
**   l1   === expect 0 0    VCL_Log		{^01030507090b0d0f11131517191b1d1f212...
**   l1   === expect 0 0    Debug		{VCL_EVENT_WARM}
**   l1   === expect * 1001 VCL_call		{^DELIVER}
**   l1   === expect 0 =    RespUnset	{^foo: bAr}
**   l1   === expect 0 =    RespHeader	{^foo: BAR}
**   l1   === expect 0 =    RespUnset	{^bar: fOo}
**   l1   === expect 0 =    RespHeader	{^bar: foo}
**   l1   === expect 0 =    RespHeader	{^who: Tollef}
**   l1   === expect 0 =    RespHeader	{^really: Poul-Henning}
**   l1   === expect 0 =    RespHeader	{^when: Thu, 01 Jan 1970 00:00:21 G...
**   l1   === expect 0 =    RespHeader	{^what: [1-9][0-9]}
**   l1   === expect 0 =    RespHeader	{^not: -1}
**   l1   === expect 0 =    VCL_Log		{^VCL initiated log}
**** dT   0.461
**   l1   === expect 0 =    VCL_Log		{^01030507090b0d0f11131517191b1d1f212...
**   l1   === expect 0 =    RespHeader	{^Encrypted: ROT52}
**   l1   === expect 0 =    VCL_return	{^deliver}
**   top  === logexpect l1 -wait
**   l1   Waiting for logexp
**** l1   begin|
***  l1   expecting| expect * 0 CLI ^Rd vcl.load
**** l1   match|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892855.242017/vgc.so 1auto
***  l1   expecting| expect 0 0 VCL_Log ^VCL initiated log
**** l1   match|          0 VCL_Log         - VCL initiated log
***  l1   expecting| expect 0 0 VCL_Log ^01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd$
**** l1   match|          0 VCL_Log         - 01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd
***  l1   expecting| expect 0 0 Debug VCL_EVENT_WARM
**** l1   match|          0 Debug           - vcl1: VCL_EVENT_WARM
***  l1   expecting| expect * 1001 VCL_call ^DELIVER
**** l1   match|       1001 VCL_call        c DELIVER
***  l1   expecting| expect 0 = RespUnset ^foo: bAr
**** l1   match|       1001 RespUnset       c foo: bAr
***  l1   expecting| expect 0 = RespHeader ^foo: BAR
**** l1   match|       1001 RespHeader      c foo: BAR
***  l1   expecting| expect 0 = RespUnset ^bar: fOo
**** l1   match|       1001 RespUnset       c bar: fOo
***  l1   expecting| expect 0 = RespHeader ^bar: foo
**** l1   match|       1001 RespHeader      c bar: foo
***  l1   expecting| expect 0 = RespHeader ^who: Tollef
**** l1   match|       1001 RespHeader      c who: Tollef
***  l1   expecting| expect 0 = RespHeader ^really: Poul-Henning
**** l1   match|       1001 RespHeader      c really: Poul-Henning
***  l1   expecting| expect 0 = RespHeader ^when: Thu, 01 Jan 1970 00:00:21 GMT
**** l1   match|       1001 RespHeader      c when: Thu, 01 Jan 1970 00:00:21 GMT
***  l1   expecting| expect 0 = RespHeader ^what: [1-9][0-9]
**** l1   match|       1001 RespHeader      c what: 64
***  l1   expecting| expect 0 = RespHeader ^not: -1
**** l1   match|       1001 RespHeader      c not: -1
***  l1   expecting| expect 0 = VCL_Log ^VCL initiated log
**** l1   match|       1001 VCL_Log         c VCL initiated log
***  l1   expecting| expect 0 = VCL_Log ^01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd$
**** l1   match|       1001 VCL_Log         c 01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd
***  l1   expecting| expect 0 = RespHeader ^Encrypted: ROT52
**** l1   match|       1001 RespHeader      c Encrypted: ROT52
***  l1   expecting| expect 0 = VCL_return ^deliver
**** l1   match|       1001 VCL_return      c deliver
**** l1   end|
**   top  === varnish v1 -errvcl {Wrong enum value.  Expected one of:} {
**** v1   CLI TX|vcl.inline vcl2 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tset resp.http.who = debug.author(ENUM);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.462
***  v1   debug|Could not delete 'vcl_vcl2.1634892855.586181/vgc.sym': No such file or directory
**** dT   0.463
***  v1   CLI RX  106
**** v1   CLI RX|Message from VCC-compiler:
**** v1   CLI RX|Wrong enum value.  Expected one of:
**** v1   CLI RX|\tphk
**** v1   CLI RX|\tdes
**** v1   CLI RX|\tkristian
**** v1   CLI RX|\tmithrandir
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 50)
**** v1   CLI RX|                set resp.http.who = debug.author(ENUM);
**** v1   CLI RX|-------------------------------------------------####--
**** v1   CLI RX|
**** v1   CLI RX|Expected argument: ENUM person
**** v1   CLI RX|
**** v1   CLI RX|While compiling function call:
**** v1   CLI RX|
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 37) -- (Pos 49)
**** v1   CLI RX|                set resp.http.who = debug.author(ENUM);
**** v1   CLI RX|------------------------------------#############------
**** v1   CLI RX|
**** v1   CLI RX|Running VCC-compiler failed, exited with 2
**** v1   CLI RX|VCL compilation failed
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Wrong enum value.  Expected one of:")
**   top  === varnish v1 -errvcl {Wrong enum value.  Expected one of:} {
**** v1   CLI TX|vcl.inline vcl3 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tset resp.http.who = debug.author(slink);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.464
***  v1   debug|Could not delete 'vcl_vcl3.1634892855.587982/vgc.sym': No such file or directory
***  v1   CLI RX  106
**** v1   CLI RX|Message from VCC-compiler:
**** v1   CLI RX|Wrong enum value.  Expected one of:
**** v1   CLI RX|\tphk
**** v1   CLI RX|\tdes
**** v1   CLI RX|\tkristian
**** v1   CLI RX|\tmithrandir
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 50)
**** v1   CLI RX|                set resp.http.who = debug.author(slink);
**** v1   CLI RX|-------------------------------------------------#####--
**** v1   CLI RX|
**** v1   CLI RX|Expected argument: ENUM person
**** v1   CLI RX|
**** v1   CLI RX|While compiling function call:
**** v1   CLI RX|
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 37) -- (Pos 49)
**** v1   CLI RX|                set resp.http.who = debug.author(slink);
**** v1   CLI RX|------------------------------------#############-------
**** v1   CLI RX|
**** v1   CLI RX|Running VCC-compiler failed, exited with 2
**** v1   CLI RX|VCL compilation failed
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Wrong enum value.  Expected one of:")
**   top  === varnish v1 -errvcl {Expression has type STRING, expected REA...
**** v1   CLI TX|vcl.inline vcl4 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport std;
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tset resp.http.who = std.random("foo", "bar");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.465
***  v1   debug|Could not delete 'vcl_vcl4.1634892855.589392/vgc.sym': No such file or directory
***  v1   CLI RX  106
**** v1   CLI RX|Message from VCC-compiler:
**** v1   CLI RX|Expression has type STRING, expected REAL
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 48) -- (Pos 52)
**** v1   CLI RX|                set resp.http.who = std.random("foo", "bar");
**** v1   CLI RX|-----------------------------------------------#####---------
**** v1   CLI RX|
**** v1   CLI RX|Expected argument: REAL lo
**** v1   CLI RX|
**** v1   CLI RX|While compiling function call:
**** v1   CLI RX|
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 37) -- (Pos 52)
**** v1   CLI RX|                set resp.http.who = std.random("foo", "bar");
**** v1   CLI RX|------------------------------------################---------
**** v1   CLI RX|
**** v1   CLI RX|Running VCC-compiler failed, exited with 2
**** v1   CLI RX|VCL compilation failed
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Expression has type STRING, expected REAL")
**   top  === varnish v1 -errvcl {Symbol not found: 'obj'} {
**** v1   CLI TX|vcl.inline vcl5 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\tsub vcl_hit {
**** v1   CLI TX|\t\tdebug.rot52(obj);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.467
***  v1   debug|Could not delete 'vcl_vcl5.1634892855.590710/vgc.sym': No such file or directory
***  v1   CLI RX  106
**** v1   CLI RX|Message from VCC-compiler:
**** v1   CLI RX|Symbol not found: 'obj'
**** v1   CLI RX|At: ('<vcl.inline>' Line 5 Pos 29) -- (Pos 31)
**** v1   CLI RX|                debug.rot52(obj);
**** v1   CLI RX|----------------------------###--
**** v1   CLI RX|
**** v1   CLI RX|Expected argument: HTTP hdr
**** v1   CLI RX|
**** v1   CLI RX|While compiling function call:
**** v1   CLI RX|
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 17) -- (Pos 31)
**** v1   CLI RX|                debug.rot52(obj);
**** v1   CLI RX|----------------###############--
**** v1   CLI RX|
**** v1   CLI RX|Running VCC-compiler failed, exited with 2
**** v1   CLI RX|VCL compilation failed
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Symbol not found: 'obj'")
**   top  === varnish v1 -errvcl {Symbol not found: 'obj'} {
**** v1   CLI TX|vcl.inline vcl6 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tdebug.rot52(obj);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.468
***  v1   debug|Could not delete 'vcl_vcl6.1634892855.592299/vgc.sym': No such file or directory
***  v1   CLI RX  106
**** v1   CLI RX|Message from VCC-compiler:
**** v1   CLI RX|Symbol not found: 'obj'
**** v1   CLI RX|At: ('<vcl.inline>' Line 5 Pos 29) -- (Pos 31)
**** v1   CLI RX|                debug.rot52(obj);
**** v1   CLI RX|----------------------------###--
**** v1   CLI RX|
**** v1   CLI RX|Expected argument: HTTP hdr
**** v1   CLI RX|
**** v1   CLI RX|While compiling function call:
**** v1   CLI RX|
**** v1   CLI RX|('<vcl.inline>' Line 5 Pos 17) -- (Pos 31)
**** v1   CLI RX|                debug.rot52(obj);
**** v1   CLI RX|----------------###############--
**** v1   CLI RX|
**** v1   CLI RX|Running VCC-compiler failed, exited with 2
**** v1   CLI RX|VCL compilation failed
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Symbol not found: 'obj'")
**   top  === varnish v1 -errvcl {Failed initialization} {
**** v1   CLI TX|vcl.inline vcl7 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport debug;
**** v1   CLI TX|\timport directors;
**** v1   CLI TX|\tbackend default { .host = "127.0.0.1"; }
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\treturn (fail);
**** v1   CLI TX|\t\t# uninitialized objects coverage
**** v1   CLI TX|\t\tnew xyz = debug.obj();
**** v1   CLI TX|\t\tnew fb = directors.fallback();
**** v1   CLI TX|\t\tnew hsh = directors.hash();
**** v1   CLI TX|\t\tnew rnd = directors.random();
**** v1   CLI TX|\t\tnew rr = directors.round_robin();
**** v1   CLI TX|\t\tnew shd = directors.shard();
**** v1   CLI TX|\t\tnew shp = directors.shard_param();
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.518
**** v1   vsl|       1000 Begin           c sess 0 HTTP/1
**** v1   vsl|       1000 SessOpen        c 127.0.0.1 49708 a0 127.0.0.1 32775 1634892855.572205 22
**** v1   vsl|       1000 Link            c req 1001 rxreq
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7fa198010fb0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7fa198010fb0 e=1634892985.573169 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7fa198010fb0 e=129.999856 f=0x0
**** v1   vsl|       1002 Begin           b bereq 1001 fetch
**** v1   vsl|       1002 VCL_use         b vcl1
**** v1   vsl|       1002 Timestamp       b Start: 1634892855.572483 0.000000 0.000000
**** v1   vsl|       1002 BereqMethod     b GET
**** v1   vsl|       1002 BereqURL        b /bar
**** v1   vsl|       1002 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1002 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b Encrypted: ROT52
**** v1   vsl|       1002 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1002 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1002 BereqHeader     b X-Varnish: 1002
**** v1   vsl|       1002 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1002 VCL_return      b fetch
**** v1   vsl|       1002 BackendOpen     b 28 s1 127.0.0.1 34079 127.0.0.1 58582 connect
**** v1   vsl|       1002 Timestamp       b Bereq: 1634892855.572653 0.000170 0.000170
**** v1   vsl|       1002 Timestamp       b Beresp: 1634892855.573168 0.000685 0.000515
**** v1   vsl|       1002 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1002 BerespStatus    b 200
**** v1   vsl|       1002 BerespReason    b OK
**** v1   vsl|       1002 BerespHeader    b foo: bAr
**** v1   vsl|       1002 BerespHeader    b bar: fOo
**** v1   vsl|       1002 BerespHeader    b Content-Length: 4
**** v1   vsl|       1002 BerespHeader    b Date: Fri, 22 Oct 2021 08:54:15 GMT
**** v1   vsl|       1002 TTL             b RFC 120 10 0 1634892856 1634892856 1634892855 0 0 cacheable
**** v1   vsl|       1002 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1002 VCL_return      b deliver
**** v1   vsl|       1002 Filters         b 
**** v1   vsl|       1002 Storage         b malloc s0
**** v1   vsl|       1002 Fetch_Body      b 3 length stream
**** v1   vsl|       1002 BackendClose    b 28 s1 recycle
**** v1   vsl|       1002 Timestamp       b BerespBody: 1634892855.583389 0.010905 0.010220
**** v1   vsl|       1002 Length          b 4
**** v1   vsl|       1002 BereqAcct       b 124 0 124 58 4 62
**** v1   vsl|       1002 End             b 
**** v1   vsl|       1001 Begin           c req 1000 rxreq
**** v1   vsl|       1001 Timestamp       c Start: 1634892855.572384 0.000000 0.000000
**** v1   vsl|       1001 Timestamp       c Req: 1634892855.572384 0.000000 0.000000
**** v1   vsl|       1001 VCL_use         c vcl1
**** v1   vsl|       1001 ReqStart        c 127.0.0.1 49708 a0
**** v1   vsl|       1001 ReqMethod       c GET
**** v1   vsl|       1001 ReqURL          c /bar
**** v1   vsl|       1001 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1001 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1001 VCL_call        c RECV
**** v1   vsl|       1001 ReqHeader       c Encrypted: ROT52
**** v1   vsl|       1001 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1001 VCL_return      c hash
**** v1   vsl|       1001 VCL_call        c HASH
**** v1   vsl|       1001 VCL_return      c lookup
**** v1   vsl|       1001 VCL_call        c MISS
**** v1   vsl|       1001 VCL_return      c fetch
**** v1   vsl|       1001 Link            c bereq 1002 fetch
**** v1   vsl|       1001 Timestamp       c Fetch: 1634892855.573321 0.000937 0.000937
**** v1   vsl|       1001 RespProtocol    c HTTP/1.1
**** v1   vsl|       1001 RespStatus      c 200
**** v1   vsl|       1001 RespReason      c OK
**** v1   vsl|       1001 RespHeader      c foo: bAr
**** v1   vsl|       1001 RespHeader      c bar: fOo
**** v1   vsl|       1001 RespHeader      c Content-Length: 4
**** v1   vsl|       1001 RespHeader      c Date: Fri, 22 Oct 2021 08:54:15 GMT
**** v1   vsl|       1001 RespHeader      c X-Varnish: 1001
**** v1   vsl|       1001 RespHeader      c Age: 0
**** v1   vsl|       1001 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1001 VCL_call        c DELIVER
**** v1   vsl|       1001 RespUnset       c foo: bAr
**** v1   vsl|       1001 RespHeader      c foo: BAR
**** v1   vsl|       1001 RespUnset       c bar: fOo
**** v1   vsl|       1001 RespHeader      c bar: foo
**** v1   vsl|       1001 RespHeader      c who: Tollef
**** v1   vsl|       1001 RespHeader      c really: Poul-Henning
**** v1   vsl|       1001 RespHeader      c when: Thu, 01 Jan 1970 00:00:21 GMT
**** v1   vsl|       1001 RespHeader      c what: 64
**** v1   vsl|       1001 RespHeader      c not: -1
**** v1   vsl|       1001 VCL_Log         c VCL initiated log
**** v1   vsl|       1001 VCL_Log         c 01030507090b0d0f11131517191b1d1f21232527292b2d2f31333537393b3d3f41434547494b4d4f51535557595b5d5f61636567696b6d6f71737577797b7d7f81838587898b8d8f91939597999b9d9fa1a3a5a7a9abadafb1b3b5b7b9bbbdbfc1c3c5c7c9cbcdcfd1d3d5d7d9dbdddfe1e3e5e7e9ebedeff1f3f5f7f9fbfd
**** v1   vsl|       1001 RespHeader      c Encrypted: ROT52
**** v1   vsl|       1001 VCL_return      c deliver
**** v1   vsl|       1001 Timestamp       c Process: 1634892855.573393 0.001009 0.000071
**** v1   vsl|       1001 Filters         c 
**** v1   vsl|       1001 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1001 RespHeader      c Connection: keep-alive
**** v1   vsl|       1001 Timestamp       c Resp: 1634892855.583412 0.011027 0.010018
**** v1   vsl|       1001 ReqAcct         c 38 0 38 307 4 311
**** v1   vsl|       1001 End             c 
**** v1   vsl|       1000 Link            c req 1003 rxreq
**** v1   vsl|          0 Debug           - test_priv_task(0x7fa1980030e0) = 0x7fa198000f40 (new)
**** v1   vsl|          0 Debug           - priv_task_free(0x7fa198000f40)
**** v1   vsl|       1003 Begin           c req 1000 rxreq
**** v1   vsl|       1003 Timestamp       c Start: 1634892855.583431 0.000000 0.000000
**** v1   vsl|       1003 Timestamp       c Req: 1634892855.583431 0.000000 0.000000
**** v1   vsl|       1003 VCL_use         c vcl1
**** v1   vsl|       1003 ReqStart        c 127.0.0.1 49708 a0
**** v1   vsl|       1003 ReqMethod       c GET
**** v1   vsl|       1003 ReqURL          c /fail
**** v1   vsl|       1003 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1003 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1003 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1003 VCL_call        c RECV
**** v1   vsl|       1003 VCL_Error       c Failed from VCL
**** v1   vsl|       1003 VCL_return      c fail
**** v1   vsl|       1003 RespProtocol    c HTTP/1.1
**** v1   vsl|       1003 RespStatus      c 503
**** v1   vsl|       1003 RespReason      c VCL failed
**** v1   vsl|       1003 RespHeader      c Date: Fri, 22 Oct 2021 08:54:15 GMT
**** v1   vsl|       1003 RespHeader      c Server: Varnish
**** v1   vsl|       1003 RespHeader      c X-Varnish: 1003
**** v1   vsl|       1003 VCL_call        c SYNTH
**** v1   vsl|       1003 ReqHeader       c overwrite: the workspace to ensure we notice any unfinished privs
**** v1   vsl|       1003 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1003 RespHeader      c Retry-After: 5
**** v1   vsl|       1003 VCL_return      c deliver
**** v1   vsl|       1003 Timestamp       c Process: 1634892855.583459 0.000027 0.000027
**** v1   vsl|       1003 RespHeader      c Content-Length: 251
**** v1   vsl|       1003 Storage         c malloc Transient
**** v1   vsl|       1003 Filters         c 
**** v1   vsl|       1003 RespHeader      c Connection: close
**** v1   vsl|       1003 Timestamp       c Resp: 1634892855.583510 0.000079 0.000051
**** v1   vsl|       1003 ReqAcct         c 39 0 39 194 251 445
**** v1   vsl|       1003 End             c 
**** v1   vsl|       1000 SessClose       c VCL_FAILURE 0.011
**** v1   vsl|       1000 End             c 
**** v1   vsl|       1004 Begin           c sess 0 HTTP/1
**** v1   vsl|       1004 SessOpen        c 127.0.0.1 49712 a0 127.0.0.1 32775 1634892855.584491 26
**** v1   vsl|       1004 Link            c req 1005 rxreq
**** v1   vsl|          0 Debug           - test_priv_task(0x7fa190003010) = 0x7fa190010ed0 (new)
**** v1   vsl|          0 Debug           - priv_task_free(0x7fa190010ed0)
**** v1   vsl|       1005 Begin           c req 1004 rxreq
**** v1   vsl|       1005 Timestamp       c Start: 1634892855.584553 0.000000 0.000000
**** v1   vsl|       1005 Timestamp       c Req: 1634892855.584553 0.000000 0.000000
**** v1   vsl|       1005 VCL_use         c vcl1
**** v1   vsl|       1005 ReqStart        c 127.0.0.1 49712 a0
**** v1   vsl|       1005 ReqMethod       c GET
**** v1   vsl|       1005 ReqURL          c /priv-task-no-mem
**** v1   vsl|       1005 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1005 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1005 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1005 VCL_call        c RECV
**** v1   vsl|       1005 VCL_Error       c Failed from VCL
**** v1   vsl|       1005 VCL_return      c fail
**** v1   vsl|       1005 RespProtocol    c HTTP/1.1
**** v1   vsl|       1005 RespStatus      c 503
**** v1   vsl|       1005 RespReason      c VCL failed
**** v1   vsl|       1005 RespHeader      c Date: Fri, 22 Oct 2021 08:54:15 GMT
**** v1   vsl|       1005 RespHeader      c Server: Varnish
**** v1   vsl|       1005 RespHeader      c X-Varnish: 1005
**** v1   vsl|       1005 VCL_call        c SYNTH
**** v1   vsl|       1005 ReqHeader       c overwrite: the workspace to ensure we notice any unfinished privs
**** v1   vsl|       1005 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1005 RespHeader      c Retry-After: 5
**** v1   vsl|       1005 VCL_return      c deliver
**** v1   vsl|       1005 Timestamp       c Process: 1634892855.584585 0.000031 0.000031
**** v1   vsl|       1005 RespHeader      c Content-Length: 251
**** v1   vsl|       1005 Storage         c malloc Transient
**** v1   vsl|       1005 Filters         c 
**** v1   vsl|       1005 RespHeader      c Connection: close
**** v1   vsl|       1005 Timestamp       c Resp: 1634892855.584654 0.000101 0.000069
**** v1   vsl|       1005 ReqAcct         c 51 0 51 194 251 445
**** v1   vsl|       1005 End             c 
**** v1   vsl|       1004 SessClose       c VCL_FAILURE 0.000
**** v1   vsl|       1004 End             c 
**** dT   0.653
***  v1   CLI RX  300
**** v1   CLI RX|VCL compiled.
**** v1   CLI RX|VCL "vcl7" Failed initialization
**** v1   CLI RX|Message:
**** v1   CLI RX|\tFailed from VCL
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("Failed initialization")
**   top  === varnish v1 -cliok "param.set vcc_allow_inline_c on"
**** v1   CLI TX|param.set vcc_allow_inline_c on
***  v1   CLI RX  200
**   v1   CLI 200 <param.set vcc_allow_inline_c on>
**   top  === varnish v1 -vcl {
**** v1   CLI TX|vcl.inline vcl8 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport std;
**** v1   CLI TX|\timport vtc;
**** v1   CLI TX|
**** v1   CLI TX|\tbackend be none;
**** v1   CLI TX|
**** v1   CLI TX|\tC{
**** v1   CLI TX|\t\tstruct zc {
**** v1   CLI TX|\t\t\tsize_t\tz;
**** v1   CLI TX|\t\t\tchar\tc;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct ic {
**** v1   CLI TX|\t\t\tint\ti;
**** v1   CLI TX|\t\t\tchar\tc;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct sc {
**** v1   CLI TX|\t\t\tshort\ts;
**** v1   CLI TX|\t\t\tchar\tc;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct cc {
**** v1   CLI TX|\t\t\tchar\tc1;
**** v1   CLI TX|\t\t\tchar\tc2;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct czc {
**** v1   CLI TX|\t\t\tchar\tc1;
**** v1   CLI TX|\t\t\tsize_t\tz;
**** v1   CLI TX|\t\t\tchar\tc2;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct cic {
**** v1   CLI TX|\t\t\tchar\tc1;
**** v1   CLI TX|\t\t\tint\ti;
**** v1   CLI TX|\t\t\tchar\tc2;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct csc {
**** v1   CLI TX|\t\t\tchar\tc1;
**** v1   CLI TX|\t\t\tshort\ts;
**** v1   CLI TX|\t\t\tchar\tc2;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|\t\tstruct uzp { /* same as vrt_blob */
**** v1   CLI TX|\t\t\tunsigned\tu;
**** v1   CLI TX|\t\t\tsize_t\t\tz;
**** v1   CLI TX|\t\t\tvoid\t\t*p;
**** v1   CLI TX|\t\t};
**** v1   CLI TX|
**** v1   CLI TX|\t\t#define SETHDR(type)\t\t\t\t\t\
**** v1   CLI TX|\t\t\tVRT_SetHdr(ctx,\t\t\t\t\t\
**** v1   CLI TX|\t\t\t    &VGC_HDR_RESP_ ## type ## _2d_sizeof,\t\
**** v1   CLI TX|\t\t\t    VRT_INT_string(ctx, sizeof(struct type)),\t\
**** v1   CLI TX|\t\t\t    vrt_magic_string_end)
**** v1   CLI TX|\t}C
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|\t\treturn (synth(200));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_synth {
**** v1   CLI TX|\t\tC{ SETHDR(zc); }C
**** v1   CLI TX|\t\tset resp.http.zc-typesize = vtc.typesize("zc");
**** v1   CLI TX|\t\tset resp.http.zc-match =
**** v1   CLI TX|\t\t    (resp.http.zc-sizeof == resp.http.zc-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(ic); }C
**** v1   CLI TX|\t\tset resp.http.ic-typesize = vtc.typesize("ic");
**** v1   CLI TX|\t\tset resp.http.ic-match =
**** v1   CLI TX|\t\t    (resp.http.ic-sizeof == resp.http.ic-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(sc); }C
**** v1   CLI TX|\t\tset resp.http.sc-typesize = vtc.typesize("sc");
**** v1   CLI TX|\t\tset resp.http.sc-match =
**** v1   CLI TX|\t\t    (resp.http.sc-sizeof == resp.http.sc-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(cc); }C
**** v1   CLI TX|\t\tset resp.http.cc-typesize = vtc.typesize("cc");
**** v1   CLI TX|\t\tset resp.http.cc-match =
**** v1   CLI TX|\t\t    (resp.http.cc-sizeof == resp.http.cc-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(czc); }C
**** v1   CLI TX|\t\tset resp.http.czc-typesize = vtc.typesize("czc");
**** v1   CLI TX|\t\tset resp.http.czc-match =
**** v1   CLI TX|\t\t    (resp.http.czc-sizeof == resp.http.czc-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(cic); }C
**** v1   CLI TX|\t\tset resp.http.cic-typesize = vtc.typesize("cic");
**** v1   CLI TX|\t\tset resp.http.cic-match =
**** v1   CLI TX|\t\t    (resp.http.cic-sizeof == resp.http.cic-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(csc); }C
**** v1   CLI TX|\t\tset resp.http.csc-typesize = vtc.typesize("csc");
**** v1   CLI TX|\t\tset resp.http.csc-match =
**** v1   CLI TX|\t\t    (resp.http.csc-sizeof == resp.http.csc-typesize);
**** v1   CLI TX|
**** v1   CLI TX|\t\tC{ SETHDR(uzp); }C
**** v1   CLI TX|\t\tset resp.http.uzp-typesize = vtc.typesize("uzp");
**** v1   CLI TX|\t\tset resp.http.uzp-match =
**** v1   CLI TX|\t\t    (resp.http.uzp-sizeof == resp.http.uzp-typesize);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.718
**** v1   vsl|          0 CLI             - Rd vcl.load vcl7 vcl_vcl7.1634892855.593806/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 300 59 VCL "vcl7" Failed initialization
Message:
	Failed from VCL

**** dT   0.835
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl8
***  v1   CLI RX  200
**** v1   CLI RX|VCL 'vcl8' now active
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 32775 (1 iterations)
***  c1   Connect to 127.0.0.1 32775
***  c1   connected fd 23 from 127.0.0.1 49716 to 127.0.0.1 32775
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   0.838
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:15 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1007\r
**** c1   rxhdr|zc-sizeof: 16\r
**** c1   rxhdr|zc-typesize: 16\r
**** c1   rxhdr|zc-match: true\r
**** c1   rxhdr|ic-sizeof: 8\r
**** c1   rxhdr|ic-typesize: 8\r
**** c1   rxhdr|ic-match: true\r
**** c1   rxhdr|sc-sizeof: 4\r
**** c1   rxhdr|sc-typesize: 4\r
**** c1   rxhdr|sc-match: true\r
**** c1   rxhdr|cc-sizeof: 2\r
**** c1   rxhdr|cc-typesize: 2\r
**** c1   rxhdr|cc-match: true\r
**** c1   rxhdr|czc-sizeof: 24\r
**** c1   rxhdr|czc-typesize: 24\r
**** c1   rxhdr|czc-match: true\r
**** c1   rxhdr|cic-sizeof: 12\r
**** c1   rxhdr|cic-typesize: 12\r
**** c1   rxhdr|cic-match: true\r
**** c1   rxhdr|csc-sizeof: 6\r
**** c1   rxhdr|csc-typesize: 6\r
**** c1   rxhdr|csc-match: true\r
**** c1   rxhdr|uzp-sizeof: 24\r
**** c1   rxhdr|uzp-typesize: 24\r
**** c1   rxhdr|uzp-match: true\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 227\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 601
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:15 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1007
**** c1   http[ 6] |zc-sizeof: 16
**** c1   http[ 7] |zc-typesize: 16
**** c1   http[ 8] |zc-match: true
**** c1   http[ 9] |ic-sizeof: 8
**** c1   http[10] |ic-typesize: 8
**** c1   http[11] |ic-match: true
**** c1   http[12] |sc-sizeof: 4
**** c1   http[13] |sc-typesize: 4
**** c1   http[14] |sc-match: true
**** c1   http[15] |cc-sizeof: 2
**** c1   http[16] |cc-typesize: 2
**** c1   http[17] |cc-match: true
**** c1   http[18] |czc-sizeof: 24
**** c1   http[19] |czc-typesize: 24
**** c1   http[20] |czc-match: true
**** c1   http[21] |cic-sizeof: 12
**** c1   http[22] |cic-typesize: 12
**** c1   http[23] |cic-match: true
**** c1   http[24] |csc-sizeof: 6
**** c1   http[25] |csc-typesize: 6
**** c1   http[26] |csc-match: true
**** c1   http[27] |uzp-sizeof: 24
**** c1   http[28] |uzp-typesize: 24
**** c1   http[29] |uzp-match: true
**** c1   http[30] |Content-Type: text/html; charset=utf-8
**** c1   http[31] |Retry-After: 5
**** c1   http[32] |Content-Length: 227
**** c1   http[33] |Accept-Ranges: bytes
**** c1   http[34] |Connection: keep-alive
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>200 OK</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 200 OK</h1>
**** c1   c-l|    <p>OK</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1007</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 227
**   c1   === expect resp.http.zc-match == true
**** c1   EXPECT resp.http.zc-match (true) == "true" match
**   c1   === expect resp.http.ic-match == true
**** c1   EXPECT resp.http.ic-match (true) == "true" match
**   c1   === expect resp.http.sc-match == true
**** c1   EXPECT resp.http.sc-match (true) == "true" match
**   c1   === expect resp.http.cc-match == true
**** c1   EXPECT resp.http.cc-match (true) == "true" match
**   c1   === expect resp.http.czc-match == true
**** c1   EXPECT resp.http.czc-match (true) == "true" match
**   c1   === expect resp.http.cic-match == true
**** c1   EXPECT resp.http.cic-match (true) == "true" match
**   c1   === expect resp.http.csc-match == true
**** c1   EXPECT resp.http.csc-match (true) == "true" match
**   c1   === expect resp.http.uzp-match == true
**** c1   EXPECT resp.http.uzp-match (true) == "true" match
***  c1   closing fd 23
**   c1   Ending
*    top  RESETTING after ./tests/m00000.vtc
**   s1   Waiting for server (4/-1)
**   v1   Wait
**** v1   CLI TX|backend.list
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin    Probe    Health    Last change
**   v1   Stop
**** v1   CLI TX|stop
**** dT   0.881
***  v1   debug|Debug: Stopping Child
**** dT   0.918
**** v1   vsl|          0 CLI             - Rd vcl.load vcl8 vcl_vcl8.1634892855.778202/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl8.1634892855.778202/vgc.so" as "vcl8"
**** v1   vsl|          0 CLI             - Rd vcl.use vcl8
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|       1006 Begin           c sess 0 HTTP/1
**** v1   vsl|       1006 SessOpen        c 127.0.0.1 49716 a0 127.0.0.1 32775 1634892855.960540 27
**** v1   vsl|       1006 Link            c req 1007 rxreq
**** v1   vsl|       1007 Begin           c req 1006 rxreq
**** v1   vsl|       1007 Timestamp       c Start: 1634892855.960589 0.000000 0.000000
**** v1   vsl|       1007 Timestamp       c Req: 1634892855.960589 0.000000 0.000000
**** v1   vsl|       1007 VCL_use         c vcl8
**** v1   vsl|       1007 ReqStart        c 127.0.0.1 49716 a0
**** v1   vsl|       1007 ReqMethod       c GET
**** v1   vsl|       1007 ReqURL          c /
**** v1   vsl|       1007 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1007 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1007 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1007 VCL_call        c RECV
**** v1   vsl|       1007 VCL_return      c synth
**** v1   vsl|       1007 VCL_call        c HASH
**** v1   vsl|       1007 VCL_return      c lookup
**** v1   vsl|       1007 RespProtocol    c HTTP/1.1
**** v1   vsl|       1007 RespStatus      c 200
**** v1   vsl|       1007 RespReason      c OK
**** v1   vsl|       1007 RespHeader      c Date: Fri, 22 Oct 2021 08:54:15 GMT
**** v1   vsl|       1007 RespHeader      c Server: Varnish
**** v1   vsl|       1007 RespHeader      c X-Varnish: 1007
**** v1   vsl|       1007 VCL_call        c SYNTH
**** v1   vsl|       1007 RespHeader      c zc-sizeof: 16
**** v1   vsl|       1007 RespHeader      c zc-typesize: 16
**** v1   vsl|       1007 RespHeader      c zc-match: true
**** v1   vsl|       1007 RespHeader      c ic-sizeof: 8
**** v1   vsl|       1007 RespHeader      c ic-typesize: 8
**** v1   vsl|       1007 RespHeader      c ic-match: true
**** v1   vsl|       1007 RespHeader      c sc-sizeof: 4
**** v1   vsl|       1007 RespHeader      c sc-typesize: 4
**** v1   vsl|       1007 RespHeader      c sc-match: true
**** v1   vsl|       1007 RespHeader      c cc-sizeof: 2
**** v1   vsl|       1007 RespHeader      c cc-typesize: 2
**** v1   vsl|       1007 RespHeader      c cc-match: true
**** v1   vsl|       1007 RespHeader      c czc-sizeof: 24
**** v1   vsl|       1007 RespHeader      c czc-typesize: 24
**** v1   vsl|       1007 RespHeader      c czc-match: true
**** v1   vsl|       1007 RespHeader      c cic-sizeof: 12
**** v1   vsl|       1007 RespHeader      c cic-typesize: 12
**** v1   vsl|       1007 RespHeader      c cic-match: true
**** v1   vsl|       1007 RespHeader      c csc-sizeof: 6
**** v1   vsl|       1007 RespHeader      c csc-typesize: 6
**** v1   vsl|       1007 RespHeader      c csc-match: true
**** v1   vsl|       1007 RespHeader      c uzp-sizeof: 24
**** v1   vsl|       1007 RespHeader      c uzp-typesize: 24
**** v1   vsl|       1007 RespHeader      c uzp-match: true
**** v1   vsl|       1007 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1007 RespHeader      c Retry-After: 5
**** v1   vsl|       1007 VCL_return      c deliver
**** v1   vsl|       1007 Timestamp       c Process: 1634892855.960662 0.000073 0.000073
**** v1   vsl|       1007 RespHeader      c Content-Length: 227
**** v1   vsl|       1007 Storage         c malloc Transient
**** v1   vsl|       1007 Filters         c 
**** v1   vsl|       1007 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1007 RespHeader      c Connection: keep-alive
**** v1   vsl|       1007 Timestamp       c Resp: 1634892855.960739 0.000150 0.000077
**** v1   vsl|       1007 ReqAcct         c 35 0 35 601 227 828
**** v1   vsl|       1007 End             c 
**** v1   vsl|       1006 SessClose       c REM_CLOSE 0.003
**** v1   vsl|       1006 End             c 
**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 CLI             - Wr 200 55 Backend name   Admin    Probe    Health    Last change

**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   1.882
***  v1   debug|Info: Child (68372) ended
***  v1   debug|Info: Child (68372) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** dT   1.883
**** v1   STDOUT EOF
**** dT   1.920
**   v1   WAIT4 pid=68301 status=0x0000 (user 0.502165 sys 0.089310)
*    top  TEST ./tests/m00000.vtc completed
#    top  TEST ./tests/m00000.vtc passed (1.921)
