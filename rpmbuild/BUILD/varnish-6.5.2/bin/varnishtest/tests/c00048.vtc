varnishtest "Forcing health of backends"

barrier b1 cond 2

server s1 {
	# probe
	rxreq
	txresp

	# req
	accept
	rxreq
	txresp
	rxreq
	txresp -hdr "Connection: close"

	# probe sick
	accept
	rxreq
	txresp -status 500
	barrier b1 sync

	accept
	# req
	rxreq
	txresp
} -start

varnish v1 -vcl {
	backend s1 {
		.host = "${s1_addr}";
		.port = "${s1_port}";
		.probe = {
			.window = 8;
			.initial = 7;
			.threshold = 8;
			.interval = 5s;
		}
	}

	sub vcl_recv {
		return(pass);
	}

} -start

varnish v1 -vsl_catchup

varnish v1 -cliok "vcl.list"
varnish v1 -cliok "backend.list -p"
varnish v1 -cliok "backend.set_health s1 auto"
varnish v1 -cliok "backend.list -p"

client c1 {
	txreq
	rxresp
	expect resp.status == 200
} -run

varnish v1 -vsl_catchup

varnish v1 -cliok "backend.list"
varnish v1 -cliok "backend.set_health s1 sick"
varnish v1 -cliok "backend.list"

client c1 {
	txreq
	rxresp
	expect resp.status == 503
} -run

varnish v1 -vsl_catchup

varnish v1 -cliok "backend.list"
varnish v1 -cliok "backend.set_health s1 healthy"
varnish v1 -cliok "backend.list"

client c1 {
	txreq
	rxresp
	expect resp.status == 200
} -run

# wait for sick probe
barrier b1 sync

# healthy overrides probe
varnish v1 -cliok "backend.list"

client c1 {
	txreq
	rxresp
	expect resp.status == 200
} -run

varnish v1 -vsl_catchup

varnish v1 -clierr 106 "backend.set_health s1 foo"
varnish v1 -clierr 106 "backend.set_health s2 foo"
varnish v1 -clierr 106 "backend.set_health s2 auto"
varnish v1 -cliok "vcl.list"
varnish v1 -cliok "backend.list *"
varnish v1 -cliok "backend.list *.foo"
varnish v1 -cliok "backend.list vcl1.*"

