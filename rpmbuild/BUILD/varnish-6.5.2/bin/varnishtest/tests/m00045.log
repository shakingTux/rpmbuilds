**** dT   0.000
*    top  TEST ./tests/m00045.vtc starting
**** top  extmacro def pwd=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest
**** top  extmacro def localhost=127.0.0.1
**** top  extmacro def bad_backend=127.0.0.1 35577
**** top  extmacro def bad_ip=192.0.2.255
**** top  extmacro def topbuild=/root/rpmbuild/BUILD/varnish-6.5.2
**** top  macro def testdir=/root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest/./tests
**** top  macro def tmpdir=/tmp/vtc.71880.0e247345
**   top  === varnishtest "VMOD blob same(), equal(), length() and sub()"
*    top  VTEST VMOD blob same(), equal(), length() and sub()
**   top  === varnish v1 -vcl {
**** dT   0.007
**   v1   Launch
***  v1   CMD: cd ${pwd} && exec varnishd  -d -n /tmp/vtc.71880.0e247345/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 44227' -P /tmp/vtc.71880.0e247345/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   CMD: cd /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishtest && exec varnishd  -d -n /tmp/vtc.71880.0e247345/v1 -l 2m -p auto_restart=off -p syslog_cli_traffic=off -p sigsegv_handler=on -p thread_pool_min=10 -p debug=+vtc_mode -p vsl_mask=+Debug -a '127.0.0.1:0' -M '127.0.0.1 44227' -P /tmp/vtc.71880.0e247345/v1/varnishd.pid -p vmod_path=/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_blob/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_cookie/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_std/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_vtc/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_unix/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_proxy/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_purge/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_directors/.libs:/root/rpmbuild/BUILD/varnish-6.5.2/lib/libvmod_debug/.libs 
***  v1   PID: 71898
**** v1   macro def v1_pid=71898
**** v1   macro def v1_name=/tmp/vtc.71880.0e247345/v1
**** dT   0.538
***  v1   debug|Debug: Version: varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|Debug: Platform: Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|200 321     
***  v1   debug|-----------------------------
***  v1   debug|Varnish Cache CLI 1.0
***  v1   debug|-----------------------------
***  v1   debug|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
***  v1   debug|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
***  v1   debug|
***  v1   debug|Type 'help' for command list.
***  v1   debug|Type 'quit' to close CLI session.
***  v1   debug|Type 'start' to launch worker process.
***  v1   debug|
**** dT   0.636
**** v1   CLIPOLL 1 0x1 0x0
***  v1   CLI connection fd = 5
***  v1   CLI RX  107
**** v1   CLI RX|rrfsvshnrolavmrfpdfcunblapojobqs
**** v1   CLI RX|
**** v1   CLI RX|Authentication required.
**** dT   0.637
**** v1   CLI TX|auth e11ccc3e0a6afebbf7941237acf5b518ef0d599d03a232d18365ef0231772da4
***  v1   CLI RX  200
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Varnish Cache CLI 1.0
**** v1   CLI RX|-----------------------------
**** v1   CLI RX|Linux,5.3.18-59.24-default,x86_64,-jnone,-sdefault,-sdefault,-hcritbit
**** v1   CLI RX|varnish-6.5.2 revision e7233b0ad2639043341819d19a8d2e418e94ce1b
**** v1   CLI RX|
**** v1   CLI RX|Type 'help' for command list.
**** v1   CLI RX|Type 'quit' to close CLI session.
**** v1   CLI RX|Type 'start' to launch worker process.
**** v1   CLI TX|vcl.inline vcl1 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew foo1 = blob.blob(IDENTITY, "foobarbazquux");
**** v1   CLI TX|\t\tnew foo2 = blob.blob(IDENTITY, "foobarbazquux");
**** v1   CLI TX|
**** v1   CLI TX|\t\tnew hobbes1 = blob.blob(IDENTITY,
**** v1   CLI TX|{"Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure."});
**** v1   CLI TX|\t\tnew hobbes2 = blob.blob(IDENTITY,
**** v1   CLI TX|{"Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure."});
**** v1   CLI TX|
**** v1   CLI TX|\t\tnew empty1 = blob.blob(IDENTITY, "");
**** v1   CLI TX|\t\tnew empty2 = blob.blob(IDENTITY, "");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|\t\treturn(synth(200));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_synth {
**** v1   CLI TX|\t\tif (blob.same(foo1.get(), foo1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo1same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(foo2.get(), foo2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo2same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(foo1.get(), foo2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo12same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(foo2.get(), foo1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo21same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(foo1.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foohobbessame = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(foo1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.fooemptysame = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tif (blob.equal(foo1.get(), foo1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo1equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(foo1.get(), foo2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo12equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(foo2.get(), foo1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foo21equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(foo1.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.foohobbesequal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(foo1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.fooemptyequal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tset resp.http.foo1len = blob.length(foo1.get());
**** v1   CLI TX|\t\tset resp.http.foo2len = blob.length(foo2.get());
**** v1   CLI TX|
**** v1   CLI TX|\t\tif (blob.same(hobbes1.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes1same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(hobbes2.get(), hobbes2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes2same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(hobbes1.get(), hobbes2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes12same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(hobbes2.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes21same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(hobbes1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbesemptysame = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tif (blob.equal(hobbes1.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes1equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(hobbes1.get(), hobbes2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes12equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(hobbes2.get(), hobbes1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbes21equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(hobbes1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.hobbesemptyequal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tset resp.http.hobbes1len = blob.length(hobbes1.get());
**** v1   CLI TX|\t\tset resp.http.hobbes2len = blob.length(hobbes2.get());
**** v1   CLI TX|
**** v1   CLI TX|\t\tif (blob.same(empty1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty1same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(empty2.get(), empty2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty2same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(empty1.get(), empty2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty12same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.same(empty2.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty21same = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tif (blob.equal(empty1.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty1equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(empty1.get(), empty2.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty12equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\tif (blob.equal(empty2.get(), empty1.get())) {
**** v1   CLI TX|\t\t\tset resp.http.empty21equal = "true";
**** v1   CLI TX|\t\t}
**** v1   CLI TX|
**** v1   CLI TX|\t\tset resp.http.empty1len = blob.length(empty1.get());
**** v1   CLI TX|\t\tset resp.http.empty2len = blob.length(empty2.get());
**** v1   CLI TX|\t\treturn(deliver);
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   0.742
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.842
***  v1   vsl|No VSL chunk found (child not started ?)
**** dT   0.872
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl1
***  v1   CLI RX  200
**   v1   Start
**** v1   CLI TX|start
**** dT   0.875
***  v1   debug|Debug: Child (71949) Started
**** dT   0.900
***  v1   CLI RX  200
***  v1   wait-running
**** v1   CLI TX|status
***  v1   debug|Info: Child (71949) said Child starts
***  v1   CLI RX  200
**** v1   CLI RX|Child in state running
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 45831
**** v1   CLI TX|debug.xid 999
**** dT   0.901
***  v1   CLI RX  200
**** v1   CLI RX|XID is 999
**** v1   CLI TX|debug.listen_address
***  v1   CLI RX  200
**** v1   CLI RX|127.0.0.1 45831
**   v1   Listen on 127.0.0.1 45831
**** v1   macro def v1_addr=127.0.0.1
**** v1   macro def v1_port=45831
**** v1   macro def v1_sock=127.0.0.1 45831
**** dT   0.942
**** v1   vsl|          0 CLI             - Rd vcl.load "vcl1" vcl_vcl1.1634892892.131486/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl1.1634892892.131486/vgc.so" as "vcl1"
**** v1   vsl|          0 CLI             - Rd vcl.use "vcl1"
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd start
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 45831

**** v1   vsl|          0 CLI             - Rd debug.xid 999 
**** v1   vsl|          0 CLI             - Wr 200 10 XID is 999
**** v1   vsl|          0 CLI             - Rd debug.listen_address 
**** v1   vsl|          0 CLI             - Wr 200 16 127.0.0.1 45831

**** dT   1.001
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45831 (1 iterations)
***  c1   Connect to 127.0.0.1 45831
***  c1   connected fd 15 from 127.0.0.1 38568 to 127.0.0.1 45831
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   1.003
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:52 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1001\r
**** c1   rxhdr|foo1same: true\r
**** c1   rxhdr|foo2same: true\r
**** c1   rxhdr|foo1equal: true\r
**** c1   rxhdr|foo12equal: true\r
**** c1   rxhdr|foo21equal: true\r
**** c1   rxhdr|foo1len: 13\r
**** c1   rxhdr|foo2len: 13\r
**** c1   rxhdr|hobbes1same: true\r
**** c1   rxhdr|hobbes2same: true\r
**** c1   rxhdr|hobbes1equal: true\r
**** c1   rxhdr|hobbes12equal: true\r
**** c1   rxhdr|hobbes21equal: true\r
**** c1   rxhdr|hobbes1len: 269\r
**** c1   rxhdr|hobbes2len: 269\r
**** c1   rxhdr|empty1same: true\r
**** c1   rxhdr|empty2same: true\r
**** c1   rxhdr|empty12same: true\r
**** c1   rxhdr|empty21same: true\r
**** c1   rxhdr|empty1equal: true\r
**** c1   rxhdr|empty12equal: true\r
**** c1   rxhdr|empty21equal: true\r
**** c1   rxhdr|empty1len: 0\r
**** c1   rxhdr|empty2len: 0\r
**** c1   rxhdr|Content-Length: 0\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 561
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:52 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1001
**** c1   http[ 6] |foo1same: true
**** c1   http[ 7] |foo2same: true
**** c1   http[ 8] |foo1equal: true
**** c1   http[ 9] |foo12equal: true
**** c1   http[10] |foo21equal: true
**** c1   http[11] |foo1len: 13
**** c1   http[12] |foo2len: 13
**** c1   http[13] |hobbes1same: true
**** c1   http[14] |hobbes2same: true
**** c1   http[15] |hobbes1equal: true
**** c1   http[16] |hobbes12equal: true
**** c1   http[17] |hobbes21equal: true
**** c1   http[18] |hobbes1len: 269
**** c1   http[19] |hobbes2len: 269
**** c1   http[20] |empty1same: true
**** c1   http[21] |empty2same: true
**** c1   http[22] |empty12same: true
**** c1   http[23] |empty21same: true
**** c1   http[24] |empty1equal: true
**** c1   http[25] |empty12equal: true
**** c1   http[26] |empty21equal: true
**** c1   http[27] |empty1len: 0
**** c1   http[28] |empty2len: 0
**** c1   http[29] |Content-Length: 0
**** c1   http[30] |Accept-Ranges: bytes
**** c1   http[31] |Connection: keep-alive
**** c1   bodylen = 0
**   c1   === expect resp.status == 200
**** c1   EXPECT resp.status (200) == "200" match
**   c1   === expect resp.http.foo1same == "true"
**** c1   EXPECT resp.http.foo1same (true) == "true" match
**   c1   === expect resp.http.foo2same == "true"
**** c1   EXPECT resp.http.foo2same (true) == "true" match
**   c1   === expect resp.http.foo12same == <undef>
**** c1   EXPECT resp.http.foo12same (<undef>) == "<undef>" match
**   c1   === expect resp.http.foo21same == <undef>
**** c1   EXPECT resp.http.foo21same (<undef>) == "<undef>" match
**   c1   === expect resp.http.foohobbessame == <undef>
**** c1   EXPECT resp.http.foohobbessame (<undef>) == "<undef>" match
**   c1   === expect resp.http.fooemptysame == <undef>
**** c1   EXPECT resp.http.fooemptysame (<undef>) == "<undef>" match
**   c1   === expect resp.http.foo1equal == "true"
**** c1   EXPECT resp.http.foo1equal (true) == "true" match
**   c1   === expect resp.http.foo12equal == "true"
**** c1   EXPECT resp.http.foo12equal (true) == "true" match
**   c1   === expect resp.http.foo21equal == "true"
**** c1   EXPECT resp.http.foo21equal (true) == "true" match
**   c1   === expect resp.http.foohobbesequal == <undef>
**** c1   EXPECT resp.http.foohobbesequal (<undef>) == "<undef>" match
**   c1   === expect resp.http.fooemptyequal == <undef>
**** c1   EXPECT resp.http.fooemptyequal (<undef>) == "<undef>" match
**   c1   === expect resp.http.foo1len == "13"
**** c1   EXPECT resp.http.foo1len (13) == "13" match
**   c1   === expect resp.http.foo2len == "13"
**** c1   EXPECT resp.http.foo2len (13) == "13" match
**   c1   === expect resp.http.hobbes1same == "true"
**** c1   EXPECT resp.http.hobbes1same (true) == "true" match
**   c1   === expect resp.http.hobbes2same == "true"
**** c1   EXPECT resp.http.hobbes2same (true) == "true" match
**   c1   === expect resp.http.hobbes12same == <undef>
**** c1   EXPECT resp.http.hobbes12same (<undef>) == "<undef>" match
**   c1   === expect resp.http.hobbes21same == <undef>
**** c1   EXPECT resp.http.hobbes21same (<undef>) == "<undef>" match
**   c1   === expect resp.http.hobbesemptysame == <undef>
**** c1   EXPECT resp.http.hobbesemptysame (<undef>) == "<undef>" match
**   c1   === expect resp.http.hobbes1equal == "true"
**** c1   EXPECT resp.http.hobbes1equal (true) == "true" match
**   c1   === expect resp.http.hobbes12equal == "true"
**** c1   EXPECT resp.http.hobbes12equal (true) == "true" match
**   c1   === expect resp.http.hobbes21equal == "true"
**** c1   EXPECT resp.http.hobbes21equal (true) == "true" match
**   c1   === expect resp.http.hobbesemptyequal == <undef>
**** c1   EXPECT resp.http.hobbesemptyequal (<undef>) == "<undef>" match
**   c1   === expect resp.http.hobbes1len == "269"
**** c1   EXPECT resp.http.hobbes1len (269) == "269" match
**   c1   === expect resp.http.hobbes2len == "269"
**** c1   EXPECT resp.http.hobbes2len (269) == "269" match
**   c1   === expect resp.http.empty1same == "true"
**** c1   EXPECT resp.http.empty1same (true) == "true" match
**   c1   === expect resp.http.empty2same == "true"
**** c1   EXPECT resp.http.empty2same (true) == "true" match
**   c1   === expect resp.http.empty12same == "true"
**** c1   EXPECT resp.http.empty12same (true) == "true" match
**   c1   === expect resp.http.empty21same == "true"
**** c1   EXPECT resp.http.empty21same (true) == "true" match
**   c1   === expect resp.http.empty1equal == "true"
**** c1   EXPECT resp.http.empty1equal (true) == "true" match
**   c1   === expect resp.http.empty12equal == "true"
**** c1   EXPECT resp.http.empty12equal (true) == "true" match
**   c1   === expect resp.http.empty21equal == "true"
**** c1   EXPECT resp.http.empty21equal (true) == "true" match
**   c1   === expect resp.http.empty1len == "0"
**** c1   EXPECT resp.http.empty1len (0) == "0" match
**   c1   === expect resp.http.empty2len == "0"
**** c1   EXPECT resp.http.empty2len (0) == "0" match
***  c1   closing fd 15
**** dT   1.004
**   c1   Ending
**   top  === varnish v1 -vcl {
**** v1   CLI TX|vcl.inline vcl2 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\t# Byte values 0 up to 7
**** v1   CLI TX|\t\tnew up07 = blob.blob(BASE64, "AAECAwQFBgc=");
**** v1   CLI TX|\t\t# Byte values 7 down to 0
**** v1   CLI TX|\t\tnew down07 = blob.blob(BASE64, "BwYFBAMCAQA=");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_recv {
**** v1   CLI TX|\t\treturn(synth(200));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_synth {
**** v1   CLI TX|\t\tset resp.http.up03
**** v1   CLI TX|\t\t    = blob.encode(BASE64, blob=blob.sub(up07.get(), 4B));
**** v1   CLI TX|\t\tset resp.http.down07060504
**** v1   CLI TX|\t\t    = blob.encode(BASE64, blob=blob.sub(down07.get(), 4B));
**** v1   CLI TX|\t\tset resp.http.up04050607
**** v1   CLI TX|\t\t    = blob.encode(BASE64,
**** v1   CLI TX|\t\t\t\t  blob=blob.sub(up07.get(), 4B, 4B));
**** v1   CLI TX|\t\tset resp.http.down03
**** v1   CLI TX|\t\t    = blob.encode(BASE64,
**** v1   CLI TX|\t\t\t\t  blob=blob.sub(down07.get(), 4B, 4B));
**** v1   CLI TX|\t\tset resp.http.up07
**** v1   CLI TX|\t\t    = blob.encode(BASE64, blob=blob.sub(up07.get(), 8B));
**** v1   CLI TX|\t\tset resp.http.down07
**** v1   CLI TX|\t\t    = blob.encode(BASE64, blob=blob.sub(down07.get(), 8B));
**** v1   CLI TX|\t\tset resp.http.zerobytes
**** v1   CLI TX|\t\t    = blob.encode(BASE64, blob=blob.sub(down07.get(), 0B));
**** v1   CLI TX|\t\tset resp.http.zerolen
**** v1   CLI TX|\t\t    = blob.length(blob.sub(down07.get(), 0B));
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   1.043
**** v1   vsl|       1000 Begin           c sess 0 HTTP/1
**** v1   vsl|       1000 SessOpen        c 127.0.0.1 38568 a0 127.0.0.1 45831 1634892892.495113 22
**** v1   vsl|       1000 Link            c req 1001 rxreq
**** v1   vsl|       1001 Begin           c req 1000 rxreq
**** v1   vsl|       1001 Timestamp       c Start: 1634892892.495203 0.000000 0.000000
**** v1   vsl|       1001 Timestamp       c Req: 1634892892.495203 0.000000 0.000000
**** v1   vsl|       1001 VCL_use         c vcl1
**** v1   vsl|       1001 ReqStart        c 127.0.0.1 38568 a0
**** v1   vsl|       1001 ReqMethod       c GET
**** v1   vsl|       1001 ReqURL          c /
**** v1   vsl|       1001 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1001 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1001 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1001 VCL_call        c RECV
**** v1   vsl|       1001 VCL_return      c synth
**** v1   vsl|       1001 VCL_call        c HASH
**** v1   vsl|       1001 VCL_return      c lookup
**** v1   vsl|       1001 RespProtocol    c HTTP/1.1
**** v1   vsl|       1001 RespStatus      c 200
**** v1   vsl|       1001 RespReason      c OK
**** v1   vsl|       1001 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1001 RespHeader      c Server: Varnish
**** v1   vsl|       1001 RespHeader      c X-Varnish: 1001
**** v1   vsl|       1001 VCL_call        c SYNTH
**** v1   vsl|       1001 RespHeader      c foo1same: true
**** v1   vsl|       1001 RespHeader      c foo2same: true
**** v1   vsl|       1001 RespHeader      c foo1equal: true
**** v1   vsl|       1001 RespHeader      c foo12equal: true
**** v1   vsl|       1001 RespHeader      c foo21equal: true
**** v1   vsl|       1001 RespHeader      c foo1len: 13
**** v1   vsl|       1001 RespHeader      c foo2len: 13
**** v1   vsl|       1001 RespHeader      c hobbes1same: true
**** v1   vsl|       1001 RespHeader      c hobbes2same: true
**** v1   vsl|       1001 RespHeader      c hobbes1equal: true
**** v1   vsl|       1001 RespHeader      c hobbes12equal: true
**** v1   vsl|       1001 RespHeader      c hobbes21equal: true
**** v1   vsl|       1001 RespHeader      c hobbes1len: 269
**** v1   vsl|       1001 RespHeader      c hobbes2len: 269
**** v1   vsl|       1001 RespHeader      c empty1same: true
**** v1   vsl|       1001 RespHeader      c empty2same: true
**** v1   vsl|       1001 RespHeader      c empty12same: true
**** v1   vsl|       1001 RespHeader      c empty21same: true
**** v1   vsl|       1001 RespHeader      c empty1equal: true
**** v1   vsl|       1001 RespHeader      c empty12equal: true
**** v1   vsl|       1001 RespHeader      c empty21equal: true
**** v1   vsl|       1001 RespHeader      c empty1len: 0
**** v1   vsl|       1001 RespHeader      c empty2len: 0
**** v1   vsl|       1001 VCL_return      c deliver
**** v1   vsl|       1001 Timestamp       c Process: 1634892892.495325 0.000122 0.000122
**** v1   vsl|       1001 RespHeader      c Content-Length: 0
**** v1   vsl|       1001 Storage         c malloc Transient
**** v1   vsl|       1001 Filters         c 
**** v1   vsl|       1001 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1001 RespHeader      c Connection: keep-alive
**** v1   vsl|       1001 Timestamp       c Resp: 1634892892.495415 0.000211 0.000089
**** v1   vsl|       1001 ReqAcct         c 35 0 35 561 0 561
**** v1   vsl|       1001 End             c 
**** v1   vsl|       1000 SessClose       c REM_CLOSE 0.002
**** v1   vsl|       1000 End             c 
**** dT   1.178
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl2
***  v1   CLI RX  200
**** v1   CLI RX|VCL 'vcl2' now active
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45831 (1 iterations)
***  c1   Connect to 127.0.0.1 45831
**** dT   1.179
***  c1   connected fd 15 from 127.0.0.1 38570 to 127.0.0.1 45831
**   c1   === txreq
**** c1   txreq|GET / HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
**** dT   1.180
**** c1   rxhdr|HTTP/1.1 200 OK\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:52 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1003\r
**** c1   rxhdr|up03: AAECAw==\r
**** c1   rxhdr|down07060504: BwYFBA==\r
**** c1   rxhdr|up04050607: BAUGBw==\r
**** c1   rxhdr|down03: AwIBAA==\r
**** c1   rxhdr|up07: AAECAwQFBgc=\r
**** c1   rxhdr|down07: BwYFBAMCAQA=\r
**** c1   rxhdr|zerobytes: \r
**** c1   rxhdr|zerolen: 0\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 227\r
**** c1   rxhdr|Accept-Ranges: bytes\r
**** c1   rxhdr|Connection: keep-alive\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 360
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |200
**** c1   http[ 2] |OK
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:52 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1003
**** c1   http[ 6] |up03: AAECAw==
**** c1   http[ 7] |down07060504: BwYFBA==
**** c1   http[ 8] |up04050607: BAUGBw==
**** c1   http[ 9] |down03: AwIBAA==
**** c1   http[10] |up07: AAECAwQFBgc=
**** c1   http[11] |down07: BwYFBAMCAQA=
**** c1   http[12] |zerobytes: 
**** c1   http[13] |zerolen: 0
**** c1   http[14] |Content-Type: text/html; charset=utf-8
**** c1   http[15] |Retry-After: 5
**** c1   http[16] |Content-Length: 227
**** c1   http[17] |Accept-Ranges: bytes
**** c1   http[18] |Connection: keep-alive
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>200 OK</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 200 OK</h1>
**** c1   c-l|    <p>OK</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1003</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 227
**   c1   === expect resp.status == 200
**** c1   EXPECT resp.status (200) == "200" match
**   c1   === expect resp.http.up03 == "AAECAw=="
**** c1   EXPECT resp.http.up03 (AAECAw==) == "AAECAw==" match
**   c1   === expect resp.http.down07060504 == "BwYFBA=="
**** c1   EXPECT resp.http.down07060504 (BwYFBA==) == "BwYFBA==" match
**   c1   === expect resp.http.up04050607 == "BAUGBw=="
**** c1   EXPECT resp.http.up04050607 (BAUGBw==) == "BAUGBw==" match
**   c1   === expect resp.http.down03 == "AwIBAA=="
**** c1   EXPECT resp.http.down03 (AwIBAA==) == "AwIBAA==" match
**   c1   === expect resp.http.up07 == "AAECAwQFBgc="
**** c1   EXPECT resp.http.up07 (AAECAwQFBgc=) == "AAECAwQFBgc=" match
**   c1   === expect resp.http.down07 == "BwYFBAMCAQA="
**** c1   EXPECT resp.http.down07 (BwYFBAMCAQA=) == "BwYFBAMCAQA=" match
**   c1   === expect resp.http.zerobytes == ""
**** c1   EXPECT resp.http.zerobytes () == "" match
**   c1   === expect resp.http.zerolen == "0"
**** c1   EXPECT resp.http.zerolen (0) == "0" match
***  c1   closing fd 15
**   c1   Ending
**   top  === server s1 -repeat 3 {
**   s1   Starting server
**** s1   macro def s1_addr=127.0.0.1
**** s1   macro def s1_port=46713
**** s1   macro def s1_sock=127.0.0.1 46713
*    s1   Listen on 127.0.0.1 46713
**   top  === varnish v1 -vcl+backend {
**   s1   Started on 127.0.0.1 46713 (3 iterations)
**** v1   CLI TX|vcl.inline vcl3 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|backend s1 { .host = "127.0.0.1"; .port = "46713"; }
**** v1   CLI TX|
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew up07 = blob.blob(BASE64, "AAECAwQFBgc=");
**** v1   CLI TX|\t\tnew empty = blob.blob(IDENTITY, "");
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_deliver {
**** v1   CLI TX|\t\tif (req.url == "/empty") {
**** v1   CLI TX|\t\t\tset resp.http.empty = blob.encode(BASE64, blob=
**** v1   CLI TX|\t\t\t    blob.sub(empty.get(), 1B));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\telsif (req.url == "/toolong") {
**** v1   CLI TX|\t\t\tset resp.http.toolong
**** v1   CLI TX|\t\t\t    = blob.encode(BASE64,
**** v1   CLI TX|\t\t\t\t\t  blob=blob.sub(up07.get(), 9B));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t\telsif (req.url == "/badoffset") {
**** v1   CLI TX|\t\t\tset resp.http.badoffset = blob.encode(BASE64,
**** v1   CLI TX|\t\t\t    blob=blob.sub(up07.get(), 4B, 5B));
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   1.243
**** v1   vsl|          0 CLI             - Rd vcl.load vcl2 vcl_vcl2.1634892892.497645/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl2.1634892892.497645/vgc.so" as "vcl2"
**** v1   vsl|          0 CLI             - Rd vcl.use vcl2
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|       1002 Begin           c sess 0 HTTP/1
**** v1   vsl|       1002 SessOpen        c 127.0.0.1 38570 a0 127.0.0.1 45831 1634892892.672456 26
**** v1   vsl|       1002 Link            c req 1003 rxreq
**** v1   vsl|       1003 Begin           c req 1002 rxreq
**** v1   vsl|       1003 Timestamp       c Start: 1634892892.672536 0.000000 0.000000
**** v1   vsl|       1003 Timestamp       c Req: 1634892892.672536 0.000000 0.000000
**** v1   vsl|       1003 VCL_use         c vcl2
**** v1   vsl|       1003 ReqStart        c 127.0.0.1 38570 a0
**** v1   vsl|       1003 ReqMethod       c GET
**** v1   vsl|       1003 ReqURL          c /
**** v1   vsl|       1003 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1003 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1003 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1003 VCL_call        c RECV
**** v1   vsl|       1003 VCL_return      c synth
**** v1   vsl|       1003 VCL_call        c HASH
**** v1   vsl|       1003 VCL_return      c lookup
**** v1   vsl|       1003 RespProtocol    c HTTP/1.1
**** v1   vsl|       1003 RespStatus      c 200
**** v1   vsl|       1003 RespReason      c OK
**** v1   vsl|       1003 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1003 RespHeader      c Server: Varnish
**** v1   vsl|       1003 RespHeader      c X-Varnish: 1003
**** v1   vsl|       1003 VCL_call        c SYNTH
**** v1   vsl|       1003 RespHeader      c up03: AAECAw==
**** v1   vsl|       1003 RespHeader      c down07060504: BwYFBA==
**** v1   vsl|       1003 RespHeader      c up04050607: BAUGBw==
**** v1   vsl|       1003 RespHeader      c down03: AwIBAA==
**** v1   vsl|       1003 RespHeader      c up07: AAECAwQFBgc=
**** v1   vsl|       1003 RespHeader      c down07: BwYFBAMCAQA=
**** v1   vsl|       1003 RespHeader      c zerobytes: 
**** v1   vsl|       1003 RespHeader      c zerolen: 0
**** v1   vsl|       1003 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1003 RespHeader      c Retry-After: 5
**** v1   vsl|       1003 VCL_return      c deliver
**** v1   vsl|       1003 Timestamp       c Process: 1634892892.672581 0.000045 0.000045
**** v1   vsl|       1003 RespHeader      c Content-Length: 227
**** v1   vsl|       1003 Storage         c malloc Transient
**** v1   vsl|       1003 Filters         c 
**** v1   vsl|       1003 RespHeader      c Accept-Ranges: bytes
**** v1   vsl|       1003 RespHeader      c Connection: keep-alive
**** v1   vsl|       1003 Timestamp       c Resp: 1634892892.672646 0.000110 0.000065
**** v1   vsl|       1003 ReqAcct         c 35 0 35 360 227 587
**** v1   vsl|       1003 End             c 
**** v1   vsl|       1002 SessClose       c REM_CLOSE 0.002
**** v1   vsl|       1002 End             c 
**** dT   1.360
***  v1   CLI RX  200
**** v1   CLI RX|VCL compiled.
**** v1   CLI TX|vcl.use vcl3
***  v1   CLI RX  200
**** v1   CLI RX|VCL 'vcl3' now active
**   top  === logexpect l1 -v v1 -d 0 -g vxid -q "VCL_Error" {
**   l1   === expect 0 * Begin req
**   l1   === expect * = VCL_Error "^vmod blob error: blob is empty in blo...
**   l1   === expect * = End
**   top  === client c1 {
**   c1   Starting client
**** l1   begin|
**** l1   qry| VCL_Error
***  l1   expecting| expect 0 * Begin req
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45831 (1 iterations)
***  c1   Connect to 127.0.0.1 45831
**** dT   1.361
***  c1   connected fd 22 from 127.0.0.1 38572 to 127.0.0.1 45831
**   c1   === txreq -url /empty
**** c1   txreq|GET /empty HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
***  s1   accepted fd 16 127.0.0.1 56354
**   s1   === rxreq
**** s1   rxhdr|GET /empty HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1006\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 108
**** s1   http[ 0] |GET
**** s1   http[ 1] |/empty
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |host: 127.0.0.1
**** s1   http[ 5] |Accept-Encoding: gzip
**** s1   http[ 6] |X-Varnish: 1006
**** s1   bodylen = 0
**   s1   === txresp
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|Content-Length: 0\r
**** s1   txresp|\r
***  s1   shutting fd 16
**   c1   === rxresp
**** dT   1.372
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:52 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1005\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:52 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1005
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1005</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
**   c1   === expect resp.reason == "VCL failed"
**** c1   EXPECT resp.reason (VCL failed) == "VCL failed" match
**   c1   === expect resp.http.empty == <undef>
**** c1   EXPECT resp.http.empty (<undef>) == "<undef>" match
***  c1   closing fd 22
**   c1   Ending
**** dT   1.373
**   top  === logexpect l1 -wait
**   l1   Waiting for logexp
**** dT   1.381
**** l1   match|       1005 Begin           c req 1004 rxreq
***  l1   expecting| expect * = VCL_Error ^vmod blob error: blob is empty in blob.sub..$
**** l1   match|       1005 VCL_Error       c vmod blob error: blob is empty in blob.sub()
***  l1   expecting| expect * = End 
**** l1   match|       1005 End             c 
**** l1   end|
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45831 (1 iterations)
***  c1   Connect to 127.0.0.1 45831
***  c1   connected fd 22 from 127.0.0.1 38576 to 127.0.0.1 45831
**   c1   === txreq -url /toolong
**** c1   txreq|GET /toolong HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**   c1   === rxresp
***  s1   accepted fd 16 127.0.0.1 56358
**   s1   === rxreq
**** dT   1.382
**** s1   rxhdr|GET /toolong HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1009\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 110
**** s1   http[ 0] |GET
**** s1   http[ 1] |/toolong
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |host: 127.0.0.1
**** s1   http[ 5] |Accept-Encoding: gzip
**** s1   http[ 6] |X-Varnish: 1009
**** s1   bodylen = 0
**   s1   === txresp
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|Content-Length: 0\r
**** s1   txresp|\r
***  s1   shutting fd 16
**** dT   1.393
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:52 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1008\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:52 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1008
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1008</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
**   c1   === expect resp.reason == "VCL failed"
**** c1   EXPECT resp.reason (VCL failed) == "VCL failed" match
**   c1   === expect resp.http.toolong == <undef>
**** c1   EXPECT resp.http.toolong (<undef>) == "<undef>" match
***  c1   closing fd 22
**   c1   Ending
**   top  === logexpect l1 -v v1 -d 1 -g vxid -q "VCL_Error" {
**   l1   === expect * * VCL_Error "^vmod blob error: size 9 from offset 0...
**   l1   Waiting for logexp
**** l1   begin|
**** l1   qry| VCL_Error
***  l1   expecting| expect * * VCL_Error ^vmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub..$
**** l1   match|       1008 VCL_Error       c vmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub()
**** l1   end|
**   top  === client c1 {
**   c1   Starting client
**   c1   Waiting for client
**   c1   Started on 127.0.0.1 45831 (1 iterations)
***  c1   Connect to 127.0.0.1 45831
***  c1   connected fd 22 from 127.0.0.1 38580 to 127.0.0.1 45831
**   c1   === txreq -url /badoffset
**** c1   txreq|GET /badoffset HTTP/1.1\r
**** c1   txreq|Host: 127.0.0.1\r
**** c1   txreq|\r
**** dT   1.394
***  s1   accepted fd 16 127.0.0.1 56362
**   s1   === rxreq
**** s1   rxhdr|GET /badoffset HTTP/1.1\r
**** s1   rxhdr|X-Forwarded-For: 127.0.0.1\r
**** s1   rxhdr|host: 127.0.0.1\r
**** s1   rxhdr|Accept-Encoding: gzip\r
**** s1   rxhdr|X-Varnish: 1012\r
**** s1   rxhdr|\r
**** s1   rxhdrlen = 112
**** s1   http[ 0] |GET
**** s1   http[ 1] |/badoffset
**** s1   http[ 2] |HTTP/1.1
**** s1   http[ 3] |X-Forwarded-For: 127.0.0.1
**** s1   http[ 4] |host: 127.0.0.1
**** s1   http[ 5] |Accept-Encoding: gzip
**** s1   http[ 6] |X-Varnish: 1012
**** s1   bodylen = 0
**   s1   === txresp
**** s1   txresp|HTTP/1.1 200 OK\r
**** s1   txresp|Content-Length: 0\r
**** s1   txresp|\r
***  s1   shutting fd 16
**   s1   Ending
**   c1   === rxresp
**** dT   1.405
**** c1   rxhdr|HTTP/1.1 503 VCL failed\r
**** c1   rxhdr|Date: Fri, 22 Oct 2021 08:54:52 GMT\r
**** c1   rxhdr|Server: Varnish\r
**** c1   rxhdr|X-Varnish: 1011\r
**** c1   rxhdr|Content-Type: text/html; charset=utf-8\r
**** c1   rxhdr|Retry-After: 5\r
**** c1   rxhdr|Content-Length: 251\r
**** c1   rxhdr|Connection: close\r
**** c1   rxhdr|\r
**** c1   rxhdrlen = 194
**** c1   http[ 0] |HTTP/1.1
**** c1   http[ 1] |503
**** c1   http[ 2] |VCL failed
**** c1   http[ 3] |Date: Fri, 22 Oct 2021 08:54:52 GMT
**** c1   http[ 4] |Server: Varnish
**** c1   http[ 5] |X-Varnish: 1011
**** c1   http[ 6] |Content-Type: text/html; charset=utf-8
**** c1   http[ 7] |Retry-After: 5
**** c1   http[ 8] |Content-Length: 251
**** c1   http[ 9] |Connection: close
**** c1   c-l|<!DOCTYPE html>
**** c1   c-l|<html>
**** c1   c-l|  <head>
**** c1   c-l|    <title>503 VCL failed</title>
**** c1   c-l|  </head>
**** c1   c-l|  <body>
**** c1   c-l|    <h1>Error 503 VCL failed</h1>
**** c1   c-l|    <p>VCL failed</p>
**** c1   c-l|    <h3>Guru Meditation:</h3>
**** c1   c-l|    <p>XID: 1011</p>
**** c1   c-l|    <hr>
**** c1   c-l|    <p>Varnish cache server</p>
**** c1   c-l|  </body>
**** c1   c-l|</html>
**** c1   bodylen = 251
**   c1   === expect resp.status == 503
**** c1   EXPECT resp.status (503) == "503" match
**   c1   === expect resp.reason == "VCL failed"
**** c1   EXPECT resp.reason (VCL failed) == "VCL failed" match
**   c1   === expect resp.http.badoffset == <undef>
**** c1   EXPECT resp.http.badoffset (<undef>) == "<undef>" match
***  c1   closing fd 22
**   c1   Ending
**   top  === logexpect l1 -v v1 -d 1 -g vxid -q "VCL_Error" {
**   l1   === expect * * VCL_Error "^vmod blob error: size 4 from offset 5...
**   l1   Waiting for logexp
**** l1   begin|
**** l1   qry| VCL_Error
***  l1   expecting| expect * * VCL_Error ^vmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub..$
**** l1   match|       1011 VCL_Error       c vmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub()
**** l1   end|
**   top  === varnish v1 -errvcl {vmod blob error: blob is empty in blob.s...
**** v1   CLI TX|vcl.inline vcl4 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew empty = blob.blob(IDENTITY, "");
**** v1   CLI TX|\t\tif (blob.same(empty.get(), blob.sub(empty.get(), 0B))) {
**** v1   CLI TX|\t\t\tnew bl = blob.blob(IDENTITY, "b");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   1.443
**** v1   vsl|          0 CLI             - Rd vcl.load vcl3 vcl_vcl3.1634892892.674411/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 200 52 Loaded "vcl_vcl3.1634892892.674411/vgc.so" as "vcl3"
**** v1   vsl|          0 CLI             - Rd vcl.use vcl3
**** v1   vsl|          0 CLI             - Wr 200 0 
**** v1   vsl|       1004 Begin           c sess 0 HTTP/1
**** v1   vsl|       1004 SessOpen        c 127.0.0.1 38572 a0 127.0.0.1 45831 1634892892.854470 27
**** v1   vsl|       1004 Link            c req 1005 rxreq
**** v1   vsl|       1006 Begin           b bereq 1005 fetch
**** v1   vsl|       1006 VCL_use         b vcl3
**** v1   vsl|       1006 Timestamp       b Start: 1634892892.854640 0.000000 0.000000
**** v1   vsl|       1006 BereqMethod     b GET
**** v1   vsl|       1006 BereqURL        b /empty
**** v1   vsl|       1006 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1006 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1006 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1006 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1006 BereqHeader     b X-Varnish: 1006
**** v1   vsl|       1006 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1006 VCL_return      b fetch
**** v1   vsl|       1006 BackendOpen     b 28 s1 127.0.0.1 46713 127.0.0.1 56354 connect
**** v1   vsl|       1006 Timestamp       b Bereq: 1634892892.854766 0.000125 0.000125
**** v1   vsl|       1006 Timestamp       b Beresp: 1634892892.855239 0.000598 0.000473
**** v1   vsl|       1006 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1006 BerespStatus    b 200
**** v1   vsl|       1006 BerespReason    b OK
**** v1   vsl|       1006 BerespHeader    b Content-Length: 0
**** v1   vsl|       1006 BerespHeader    b Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1006 TTL             b RFC 120 10 0 1634892893 1634892893 1634892892 0 0 cacheable
**** v1   vsl|       1006 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1006 VCL_return      b deliver
**** v1   vsl|       1006 Filters         b 
**** v1   vsl|       1006 Storage         b malloc s0
**** v1   vsl|       1006 Fetch_Body      b 0 none -
**** v1   vsl|       1006 BackendClose    b 28 s1 recycle
**** v1   vsl|       1006 Timestamp       b BerespBody: 1634892892.865398 0.010757 0.010158
**** v1   vsl|       1006 Length          b 0
**** v1   vsl|       1006 BereqAcct       b 108 0 108 38 0 38
**** v1   vsl|       1006 End             b 
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7effb40113a0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7effb40113a0 e=1634893022.855239 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7effb40113a0 e=129.989736 f=0x0
**** v1   vsl|       1005 Begin           c req 1004 rxreq
**** v1   vsl|       1005 Timestamp       c Start: 1634892892.854586 0.000000 0.000000
**** v1   vsl|       1005 Timestamp       c Req: 1634892892.854586 0.000000 0.000000
**** v1   vsl|       1005 VCL_use         c vcl3
**** v1   vsl|       1005 ReqStart        c 127.0.0.1 38572 a0
**** v1   vsl|       1005 ReqMethod       c GET
**** v1   vsl|       1005 ReqURL          c /empty
**** v1   vsl|       1005 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1005 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1005 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1005 VCL_call        c RECV
**** v1   vsl|       1005 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1005 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1005 VCL_return      c hash
**** v1   vsl|       1005 VCL_call        c HASH
**** v1   vsl|       1005 VCL_return      c lookup
**** v1   vsl|       1005 VCL_call        c MISS
**** v1   vsl|       1005 VCL_return      c fetch
**** v1   vsl|       1005 Link            c bereq 1006 fetch
**** v1   vsl|       1005 Timestamp       c Fetch: 1634892892.865512 0.010926 0.010926
**** v1   vsl|       1005 RespProtocol    c HTTP/1.1
**** v1   vsl|       1005 RespStatus      c 200
**** v1   vsl|       1005 RespReason      c OK
**** v1   vsl|       1005 RespHeader      c Content-Length: 0
**** v1   vsl|       1005 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1005 RespHeader      c X-Varnish: 1005
**** v1   vsl|       1005 RespHeader      c Age: 0
**** v1   vsl|       1005 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1005 VCL_call        c DELIVER
**** v1   vsl|       1005 VCL_Error       c vmod blob error: blob is empty in blob.sub()
**** v1   vsl|       1005 RespHeader      c empty: 
**** v1   vsl|       1005 VCL_return      c fail
**** v1   vsl|       1005 Timestamp       c Process: 1634892892.865543 0.010956 0.000030
**** v1   vsl|       1005 RespProtocol    c HTTP/1.1
**** v1   vsl|       1005 RespStatus      c 503
**** v1   vsl|       1005 RespReason      c VCL failed
**** v1   vsl|       1005 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1005 RespHeader      c Server: Varnish
**** v1   vsl|       1005 RespHeader      c X-Varnish: 1005
**** v1   vsl|       1005 VCL_call        c SYNTH
**** v1   vsl|       1005 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1005 RespHeader      c Retry-After: 5
**** v1   vsl|       1005 VCL_return      c deliver
**** v1   vsl|       1005 Timestamp       c Process: 1634892892.865560 0.010973 0.000017
**** v1   vsl|       1005 RespHeader      c Content-Length: 251
**** v1   vsl|       1005 Storage         c malloc Transient
**** v1   vsl|       1005 Filters         c 
**** v1   vsl|       1005 RespHeader      c Connection: close
**** v1   vsl|       1005 Timestamp       c Resp: 1634892892.865642 0.011055 0.000081
**** v1   vsl|       1005 ReqAcct         c 40 0 40 194 251 445
**** v1   vsl|       1005 End             c 
**** v1   vsl|       1004 SessClose       c VCL_FAILURE 0.011
**** v1   vsl|       1004 End             c 
**** v1   vsl|       1007 Begin           c sess 0 HTTP/1
**** v1   vsl|       1007 SessOpen        c 127.0.0.1 38576 a0 127.0.0.1 45831 1634892892.874894 22
**** v1   vsl|       1007 Link            c req 1008 rxreq
**** v1   vsl|       1009 Begin           b bereq 1008 fetch
**** v1   vsl|       1009 VCL_use         b vcl3
**** v1   vsl|       1009 Timestamp       b Start: 1634892892.875016 0.000000 0.000000
**** v1   vsl|       1009 BereqMethod     b GET
**** v1   vsl|       1009 BereqURL        b /toolong
**** v1   vsl|       1009 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1009 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1009 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1009 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1009 BereqHeader     b X-Varnish: 1009
**** v1   vsl|       1009 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1009 VCL_return      b fetch
**** v1   vsl|       1009 BackendOpen     b 28 s1 127.0.0.1 46713 127.0.0.1 56358 connect
**** v1   vsl|       1009 Timestamp       b Bereq: 1634892892.875213 0.000197 0.000197
**** v1   vsl|       1009 Timestamp       b Beresp: 1634892892.875635 0.000619 0.000422
**** v1   vsl|       1009 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1009 BerespStatus    b 200
**** v1   vsl|       1009 BerespReason    b OK
**** v1   vsl|       1009 BerespHeader    b Content-Length: 0
**** v1   vsl|       1009 BerespHeader    b Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1009 TTL             b RFC 120 10 0 1634892893 1634892893 1634892892 0 0 cacheable
**** v1   vsl|       1009 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1009 VCL_return      b deliver
**** v1   vsl|       1009 Filters         b 
**** v1   vsl|       1009 Storage         b malloc s0
**** v1   vsl|       1009 Fetch_Body      b 0 none -
**** v1   vsl|       1009 BackendClose    b 28 s1 recycle
**** v1   vsl|       1009 Timestamp       b BerespBody: 1634892892.885809 0.010793 0.010174
**** v1   vsl|       1009 Length          b 0
**** v1   vsl|       1009 BereqAcct       b 110 0 110 38 0 38
**** v1   vsl|       1009 End             b 
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7effb40113a0 e=129.969416 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7eff9c000eb0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7eff9c000eb0 e=1634893022.875636 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7effb40113a0 e=129.969404 f=0x0
**** v1   vsl|       1008 Begin           c req 1007 rxreq
**** v1   vsl|       1008 Timestamp       c Start: 1634892892.874948 0.000000 0.000000
**** v1   vsl|       1008 Timestamp       c Req: 1634892892.874948 0.000000 0.000000
**** v1   vsl|       1008 VCL_use         c vcl3
**** v1   vsl|       1008 ReqStart        c 127.0.0.1 38576 a0
**** v1   vsl|       1008 ReqMethod       c GET
**** v1   vsl|       1008 ReqURL          c /toolong
**** v1   vsl|       1008 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1008 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1008 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1008 VCL_call        c RECV
**** v1   vsl|       1008 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1008 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1008 VCL_return      c hash
**** v1   vsl|       1008 VCL_call        c HASH
**** v1   vsl|       1008 VCL_return      c lookup
**** v1   vsl|       1008 VCL_call        c MISS
**** v1   vsl|       1008 VCL_return      c fetch
**** v1   vsl|       1008 Link            c bereq 1009 fetch
**** v1   vsl|       1008 Timestamp       c Fetch: 1634892892.885842 0.010893 0.010893
**** v1   vsl|       1008 RespProtocol    c HTTP/1.1
**** v1   vsl|       1008 RespStatus      c 200
**** v1   vsl|       1008 RespReason      c OK
**** v1   vsl|       1008 RespHeader      c Content-Length: 0
**** v1   vsl|       1008 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1008 RespHeader      c X-Varnish: 1008
**** v1   vsl|       1008 RespHeader      c Age: 0
**** v1   vsl|       1008 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1008 VCL_call        c DELIVER
**** v1   vsl|       1008 VCL_Error       c vmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub()
**** v1   vsl|       1008 RespHeader      c toolong: 
**** v1   vsl|       1008 VCL_return      c fail
**** v1   vsl|       1008 Timestamp       c Process: 1634892892.885861 0.010912 0.000018
**** v1   vsl|       1008 RespProtocol    c HTTP/1.1
**** v1   vsl|       1008 RespStatus      c 503
**** v1   vsl|       1008 RespReason      c VCL failed
**** v1   vsl|       1008 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1008 RespHeader      c Server: Varnish
**** v1   vsl|       1008 RespHeader      c X-Varnish: 1008
**** v1   vsl|       1008 VCL_call        c SYNTH
**** v1   vsl|       1008 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1008 RespHeader      c Retry-After: 5
**** v1   vsl|       1008 VCL_return      c deliver
**** v1   vsl|       1008 Timestamp       c Process: 1634892892.885877 0.010929 0.000016
**** v1   vsl|       1008 RespHeader      c Content-Length: 251
**** v1   vsl|       1008 Storage         c malloc Transient
**** v1   vsl|       1008 Filters         c 
**** v1   vsl|       1008 RespHeader      c Connection: close
**** v1   vsl|       1008 Timestamp       c Resp: 1634892892.885951 0.011003 0.000073
**** v1   vsl|       1008 ReqAcct         c 42 0 42 194 251 445
**** v1   vsl|       1008 End             c 
**** v1   vsl|       1007 SessClose       c VCL_FAILURE 0.011
**** v1   vsl|       1007 End             c 
**** v1   vsl|       1010 Begin           c sess 0 HTTP/1
**** v1   vsl|       1010 SessOpen        c 127.0.0.1 38580 a0 127.0.0.1 45831 1634892892.887268 26
**** v1   vsl|       1010 Link            c req 1011 rxreq
**** v1   vsl|       1012 Begin           b bereq 1011 fetch
**** v1   vsl|       1012 VCL_use         b vcl3
**** v1   vsl|       1012 Timestamp       b Start: 1634892892.887385 0.000000 0.000000
**** v1   vsl|       1012 BereqMethod     b GET
**** v1   vsl|       1012 BereqURL        b /badoffset
**** v1   vsl|       1012 BereqProtocol   b HTTP/1.1
**** v1   vsl|       1012 BereqHeader     b X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1012 BereqHeader     b host: 127.0.0.1
**** v1   vsl|       1012 BereqHeader     b Accept-Encoding: gzip
**** v1   vsl|       1012 BereqHeader     b X-Varnish: 1012
**** v1   vsl|       1012 VCL_call        b BACKEND_FETCH
**** v1   vsl|       1012 VCL_return      b fetch
**** v1   vsl|       1012 BackendOpen     b 28 s1 127.0.0.1 46713 127.0.0.1 56362 connect
**** v1   vsl|       1012 Timestamp       b Bereq: 1634892892.887482 0.000097 0.000097
**** v1   vsl|       1012 Timestamp       b Beresp: 1634892892.887976 0.000591 0.000494
**** v1   vsl|       1012 BerespProtocol  b HTTP/1.1
**** v1   vsl|       1012 BerespStatus    b 200
**** v1   vsl|       1012 BerespReason    b OK
**** v1   vsl|       1012 BerespHeader    b Content-Length: 0
**** v1   vsl|       1012 BerespHeader    b Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1012 TTL             b RFC 120 10 0 1634892893 1634892893 1634892892 0 0 cacheable
**** v1   vsl|       1012 VCL_call        b BACKEND_RESPONSE
**** v1   vsl|       1012 VCL_return      b deliver
**** v1   vsl|       1012 Filters         b 
**** v1   vsl|       1012 Storage         b malloc s0
**** v1   vsl|       1012 Fetch_Body      b 0 none -
**** v1   vsl|       1012 BackendClose    b 28 s1 recycle
**** v1   vsl|       1012 Timestamp       b BerespBody: 1634892892.898113 0.010727 0.010136
**** v1   vsl|       1012 Length          b 0
**** v1   vsl|       1012 BereqAcct       b 112 0 112 38 0 38
**** v1   vsl|       1012 End             b 
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7effb40113a0 e=129.957096 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_Inbox flg=1e p=0x7effb40120d0 e=0.000000 f=0x0
**** v1   vsl|          0 ExpKill         - EXP_When p=0x7effb40120d0 e=1634893022.887977 f=0x1e
**** v1   vsl|          0 ExpKill         - EXP_expire p=0x7effb40113a0 e=129.957087 f=0x0
**** v1   vsl|       1011 Begin           c req 1010 rxreq
**** v1   vsl|       1011 Timestamp       c Start: 1634892892.887342 0.000000 0.000000
**** v1   vsl|       1011 Timestamp       c Req: 1634892892.887342 0.000000 0.000000
**** v1   vsl|       1011 VCL_use         c vcl3
**** v1   vsl|       1011 ReqStart        c 127.0.0.1 38580 a0
**** v1   vsl|       1011 ReqMethod       c GET
**** v1   vsl|       1011 ReqURL          c /badoffset
**** v1   vsl|       1011 ReqProtocol     c HTTP/1.1
**** v1   vsl|       1011 ReqHeader       c Host: 127.0.0.1
**** v1   vsl|       1011 ReqHeader       c X-Forwarded-For: 127.0.0.1
**** v1   vsl|       1011 VCL_call        c RECV
**** v1   vsl|       1011 ReqUnset        c Host: 127.0.0.1
**** v1   vsl|       1011 ReqHeader       c host: 127.0.0.1
**** v1   vsl|       1011 VCL_return      c hash
**** v1   vsl|       1011 VCL_call        c HASH
**** v1   vsl|       1011 VCL_return      c lookup
**** v1   vsl|       1011 VCL_call        c MISS
**** v1   vsl|       1011 VCL_return      c fetch
**** v1   vsl|       1011 Link            c bereq 1012 fetch
**** v1   vsl|       1011 Timestamp       c Fetch: 1634892892.898161 0.010818 0.010818
**** v1   vsl|       1011 RespProtocol    c HTTP/1.1
**** v1   vsl|       1011 RespStatus      c 200
**** v1   vsl|       1011 RespReason      c OK
**** v1   vsl|       1011 RespHeader      c Content-Length: 0
**** v1   vsl|       1011 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1011 RespHeader      c X-Varnish: 1011
**** v1   vsl|       1011 RespHeader      c Age: 0
**** v1   vsl|       1011 RespHeader      c Via: 1.1 varnish (Varnish/6.5)
**** v1   vsl|       1011 VCL_call        c DELIVER
**** v1   vsl|       1011 VCL_Error       c vmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub()
**** v1   vsl|       1011 RespHeader      c badoffset: 
**** v1   vsl|       1011 VCL_return      c fail
**** v1   vsl|       1011 Timestamp       c Process: 1634892892.898177 0.010835 0.000016
**** v1   vsl|       1011 RespProtocol    c HTTP/1.1
**** v1   vsl|       1011 RespStatus      c 503
**** v1   vsl|       1011 RespReason      c VCL failed
**** v1   vsl|       1011 RespHeader      c Date: Fri, 22 Oct 2021 08:54:52 GMT
**** v1   vsl|       1011 RespHeader      c Server: Varnish
**** v1   vsl|       1011 RespHeader      c X-Varnish: 1011
**** v1   vsl|       1011 VCL_call        c SYNTH
**** v1   vsl|       1011 RespHeader      c Content-Type: text/html; charset=utf-8
**** v1   vsl|       1011 RespHeader      c Retry-After: 5
**** v1   vsl|       1011 VCL_return      c deliver
**** v1   vsl|       1011 Timestamp       c Process: 1634892892.898193 0.010850 0.000015
**** v1   vsl|       1011 RespHeader      c Content-Length: 251
**** v1   vsl|       1011 Storage         c malloc Transient
**** v1   vsl|       1011 Filters         c 
**** dT   1.444
**** v1   vsl|       1011 RespHeader      c Connection: close
**** v1   vsl|       1011 Timestamp       c Resp: 1634892892.898243 0.010900 0.000050
**** v1   vsl|       1011 ReqAcct         c 44 0 44 194 251 445
**** v1   vsl|       1011 End             c 
**** v1   vsl|       1010 SessClose       c VCL_FAILURE 0.011
**** v1   vsl|       1010 End             c 
**** dT   1.567
***  v1   CLI RX  300
**** v1   CLI RX|VCL compiled.
**** v1   CLI RX|VCL "vcl4" Failed initialization
**** v1   CLI RX|Message:
**** v1   CLI RX|\tvmod blob error: blob is empty in blob.sub()
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("vmod blob error: blob is empty in blob.sub()")
**   top  === varnish v1 -errvcl {vmod blob error: size 9 from offset 0 re...
**** v1   CLI TX|vcl.inline vcl5 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew up07 = blob.blob(BASE64, "AAECAwQFBgc=");
**** v1   CLI TX|\t\tif (blob.same(up07.get(), blob.sub(up07.get(), 9B))) {
**** v1   CLI TX|\t\t\tnew bl = blob.blob(IDENTITY, "b");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   1.644
**** v1   vsl|          0 CLI             - Rd vcl.load vcl4 vcl_vcl4.1634892892.899498/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 300 88 VCL "vcl4" Failed initialization
Message:
	vmod blob error: blob is empty in blob.sub()

**** dT   1.732
***  v1   CLI RX  300
**** v1   CLI RX|VCL compiled.
**** v1   CLI RX|VCL "vcl5" Failed initialization
**** v1   CLI RX|Message:
**** v1   CLI RX|\tvmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub()
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("vmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub()")
**   top  === varnish v1 -errvcl {vmod blob error: size 4 from offset 5 re...
**** v1   CLI TX|vcl.inline vcl6 << %XJEIFLH|)Xspa8P
**** v1   CLI TX|vcl 4.1;
**** v1   CLI TX|
**** v1   CLI TX|\timport blob;
**** v1   CLI TX|\tbackend b None;
**** v1   CLI TX|
**** v1   CLI TX|\tsub vcl_init {
**** v1   CLI TX|\t\tnew up07 = blob.blob(BASE64, "AAECAwQFBgc=");
**** v1   CLI TX|\t\tif (blob.same(up07.get(), blob.sub(up07.get(), 4B, 5B))) {
**** v1   CLI TX|\t\t\tnew bl = blob.blob(IDENTITY, "b");
**** v1   CLI TX|\t\t}
**** v1   CLI TX|\t}
**** v1   CLI TX|
**** v1   CLI TX|%XJEIFLH|)Xspa8P
**** dT   1.744
**** v1   vsl|          0 CLI             - Rd vcl.load vcl5 vcl_vcl5.1634892893.060885/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 300 134 VCL "vcl5" Failed initialization
Message:
	vmod blob error: size 9 from offset 0 requires more bytes than blob length 8 in blob.sub()

**** dT   1.900
***  v1   CLI RX  300
**** v1   CLI RX|VCL compiled.
**** v1   CLI RX|VCL "vcl6" Failed initialization
**** v1   CLI RX|Message:
**** v1   CLI RX|\tvmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub()
**   v1   VCL compilation failed (as expected)
***  v1   Found expected string: ("vmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub()")
*    top  RESETTING after ./tests/m00045.vtc
**   s1   Waiting for server (15/-1)
**   v1   Wait
**** v1   CLI TX|backend.list
***  v1   CLI RX  200
**** v1   CLI RX|Backend name   Admin      Probe    Health     Last change
**** v1   CLI RX|vcl3.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:54:52 GMT
**   v1   Stop
**** v1   CLI TX|stop
***  v1   debug|Debug: Stopping Child
**** dT   1.944
**** v1   vsl|          0 CLI             - Rd vcl.load vcl6 vcl_vcl6.1634892893.226370/vgc.so 1auto
**** v1   vsl|          0 CLI             - Wr 300 134 VCL "vcl6" Failed initialization
Message:
	vmod blob error: size 4 from offset 5 requires more bytes than blob length 8 in blob.sub()

**** v1   vsl|          0 CLI             - Rd backend.list 
**** v1   vsl|          0 CLI             - Wr 200 134 Backend name   Admin      Probe    Health     Last change
vcl3.s1        healthy    0/0      healthy    Fri, 22 Oct 2021 08:54:52 GMT

**** v1   vsl|          0 CLI             - EOF on CLI connection, worker stops
**** dT   2.901
***  v1   debug|Info: Child (71949) ended
***  v1   debug|Info: Child (71949) said Child dies
***  v1   debug|Debug: Child cleanup complete
***  v1   CLI RX  200
***  v1   wait-stopped
**** v1   CLI TX|status
***  v1   CLI RX  200
**** v1   CLI RX|Child in state stopped
**** v1   CLI TX|panic.clear
***  v1   CLI RX  300
**** v1   CLI RX|No panic to clear
***  v1   debug|Info: manager stopping child
***  v1   debug|Info: manager dies
**** dT   2.902
**** v1   STDOUT EOF
**** dT   2.946
**   v1   WAIT4 pid=71898 status=0x0000 (user 0.938049 sys 0.158389)
*    top  TEST ./tests/m00045.vtc completed
#    top  TEST ./tests/m00045.vtc passed (2.947)
