# Makefile.in generated by automake 1.16.1 from Makefile.am.
# bin/varnishd/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/varnish
pkgincludedir = $(includedir)/varnish
pkglibdir = $(libdir)/varnish
pkglibexecdir = $(libexecdir)/varnish
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-suse-linux-gnu
host_triplet = x86_64-suse-linux-gnu
target_triplet = x86_64-suse-linux-gnu
sbin_PROGRAMS = varnishd$(EXEEXT)
#am__append_1 = \
#	storage/mgt_storage_persistent.c \
#	storage/storage_persistent.c \
#	storage/storage_persistent_silo.c \
#	storage/storage_persistent_subr.c

#am__append_2 = -DUNW_LOCAL_ONLY
#am__append_3 = ${LIBUNWIND_LIBS}
noinst_PROGRAMS = vhp_gen_hufdec$(EXEEXT) vhp_table_test$(EXEEXT) \
	vhp_decode_test$(EXEEXT) esi_parse_fuzzer$(EXEEXT)
TESTS = vhp_table_test$(EXEEXT) vhp_decode_test$(EXEEXT)
subdir = bin/varnishd
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/varnish.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_lib_readline.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_with_curses.m4 \
	$(top_srcdir)/m4/ld-version-script.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(nobase_pkginclude_HEADERS) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(pkgincludedir)"
PROGRAMS = $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_esi_parse_fuzzer_OBJECTS =  \
	cache/esi_parse_fuzzer-cache_esi_parse.$(OBJEXT) \
	fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.$(OBJEXT)
esi_parse_fuzzer_OBJECTS = $(am_esi_parse_fuzzer_OBJECTS)
esi_parse_fuzzer_DEPENDENCIES =  \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvgz/libvgz.a
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
esi_parse_fuzzer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(esi_parse_fuzzer_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__varnishd_SOURCES_DIST = cache/cache_acceptor.c \
	cache/cache_backend.c cache/cache_backend_probe.c \
	cache/cache_ban.c cache/cache_ban_build.c \
	cache/cache_ban_lurker.c cache/cache_busyobj.c \
	cache/cache_cli.c cache/cache_deliver_proc.c \
	cache/cache_director.c cache/cache_esi_deliver.c \
	cache/cache_esi_fetch.c cache/cache_esi_parse.c \
	cache/cache_expire.c cache/cache_fetch.c \
	cache/cache_fetch_proc.c cache/cache_gzip.c cache/cache_hash.c \
	cache/cache_http.c cache/cache_lck.c cache/cache_main.c \
	cache/cache_mempool.c cache/cache_obj.c cache/cache_panic.c \
	cache/cache_pool.c cache/cache_range.c cache/cache_req.c \
	cache/cache_req_body.c cache/cache_req_fsm.c \
	cache/cache_rfc2616.c cache/cache_session.c \
	cache/cache_shmlog.c cache/cache_tcp_pool.c cache/cache_vary.c \
	cache/cache_vcl.c cache/cache_vpi.c cache/cache_vrt.c \
	cache/cache_vrt_filter.c cache/cache_vrt_priv.c \
	cache/cache_vrt_re.c cache/cache_vrt_var.c \
	cache/cache_vrt_vcl.c cache/cache_vrt_vmod.c cache/cache_wrk.c \
	cache/cache_ws.c common/common_vsc.c common/common_vsmw.c \
	hash/hash_classic.c hash/hash_critbit.c \
	hash/hash_simple_list.c hash/mgt_hash.c hpack/vhp_decode.c \
	hpack/vhp_table.c http1/cache_http1_deliver.c \
	http1/cache_http1_fetch.c http1/cache_http1_fsm.c \
	http1/cache_http1_line.c http1/cache_http1_pipe.c \
	http1/cache_http1_proto.c http1/cache_http1_vfp.c \
	http2/cache_http2_deliver.c http2/cache_http2_hpack.c \
	http2/cache_http2_panic.c http2/cache_http2_proto.c \
	http2/cache_http2_send.c http2/cache_http2_session.c \
	mgt/mgt_acceptor.c mgt/mgt_child.c mgt/mgt_cli.c \
	mgt/mgt_jail.c mgt/mgt_jail_solaris.c \
	mgt/mgt_jail_solaris_tbl.h mgt/mgt_jail_unix.c mgt/mgt_main.c \
	mgt/mgt_param.c mgt/mgt_param_bits.c mgt/mgt_param_tbl.c \
	mgt/mgt_param_tcp.c mgt/mgt_param_tweak.c mgt/mgt_pool.c \
	mgt/mgt_shmem.c mgt/mgt_symtab.c mgt/mgt_util.c mgt/mgt_vcc.c \
	mgt/mgt_vcl.c proxy/cache_proxy_proto.c proxy/cache_proxy.h \
	storage/mgt_stevedore.c storage/stevedore.c \
	storage/stevedore_utils.c storage/storage_file.c \
	storage/storage_lru.c storage/storage_malloc.c \
	storage/storage_simple.c storage/storage_umem.c \
	waiter/cache_waiter.c waiter/cache_waiter_epoll.c \
	waiter/cache_waiter_kqueue.c waiter/cache_waiter_poll.c \
	waiter/cache_waiter_ports.c waiter/mgt_waiter.c \
	storage/mgt_storage_persistent.c storage/storage_persistent.c \
	storage/storage_persistent_silo.c \
	storage/storage_persistent_subr.c VSC_lck.vsc VSC_main.vsc \
	VSC_mempool.vsc VSC_mgt.vsc VSC_sma.vsc VSC_smf.vsc \
	VSC_smu.vsc VSC_vbe.vsc
#am__objects_1 = storage/varnishd-mgt_storage_persistent.$(OBJEXT) \
#	storage/varnishd-storage_persistent.$(OBJEXT) \
#	storage/varnishd-storage_persistent_silo.$(OBJEXT) \
#	storage/varnishd-storage_persistent_subr.$(OBJEXT)
am__objects_2 = varnishd-VSC_lck.$(OBJEXT) varnishd-VSC_main.$(OBJEXT) \
	varnishd-VSC_mempool.$(OBJEXT) varnishd-VSC_mgt.$(OBJEXT) \
	varnishd-VSC_sma.$(OBJEXT) varnishd-VSC_smf.$(OBJEXT) \
	varnishd-VSC_smu.$(OBJEXT) varnishd-VSC_vbe.$(OBJEXT)
am_varnishd_OBJECTS = cache/varnishd-cache_acceptor.$(OBJEXT) \
	cache/varnishd-cache_backend.$(OBJEXT) \
	cache/varnishd-cache_backend_probe.$(OBJEXT) \
	cache/varnishd-cache_ban.$(OBJEXT) \
	cache/varnishd-cache_ban_build.$(OBJEXT) \
	cache/varnishd-cache_ban_lurker.$(OBJEXT) \
	cache/varnishd-cache_busyobj.$(OBJEXT) \
	cache/varnishd-cache_cli.$(OBJEXT) \
	cache/varnishd-cache_deliver_proc.$(OBJEXT) \
	cache/varnishd-cache_director.$(OBJEXT) \
	cache/varnishd-cache_esi_deliver.$(OBJEXT) \
	cache/varnishd-cache_esi_fetch.$(OBJEXT) \
	cache/varnishd-cache_esi_parse.$(OBJEXT) \
	cache/varnishd-cache_expire.$(OBJEXT) \
	cache/varnishd-cache_fetch.$(OBJEXT) \
	cache/varnishd-cache_fetch_proc.$(OBJEXT) \
	cache/varnishd-cache_gzip.$(OBJEXT) \
	cache/varnishd-cache_hash.$(OBJEXT) \
	cache/varnishd-cache_http.$(OBJEXT) \
	cache/varnishd-cache_lck.$(OBJEXT) \
	cache/varnishd-cache_main.$(OBJEXT) \
	cache/varnishd-cache_mempool.$(OBJEXT) \
	cache/varnishd-cache_obj.$(OBJEXT) \
	cache/varnishd-cache_panic.$(OBJEXT) \
	cache/varnishd-cache_pool.$(OBJEXT) \
	cache/varnishd-cache_range.$(OBJEXT) \
	cache/varnishd-cache_req.$(OBJEXT) \
	cache/varnishd-cache_req_body.$(OBJEXT) \
	cache/varnishd-cache_req_fsm.$(OBJEXT) \
	cache/varnishd-cache_rfc2616.$(OBJEXT) \
	cache/varnishd-cache_session.$(OBJEXT) \
	cache/varnishd-cache_shmlog.$(OBJEXT) \
	cache/varnishd-cache_tcp_pool.$(OBJEXT) \
	cache/varnishd-cache_vary.$(OBJEXT) \
	cache/varnishd-cache_vcl.$(OBJEXT) \
	cache/varnishd-cache_vpi.$(OBJEXT) \
	cache/varnishd-cache_vrt.$(OBJEXT) \
	cache/varnishd-cache_vrt_filter.$(OBJEXT) \
	cache/varnishd-cache_vrt_priv.$(OBJEXT) \
	cache/varnishd-cache_vrt_re.$(OBJEXT) \
	cache/varnishd-cache_vrt_var.$(OBJEXT) \
	cache/varnishd-cache_vrt_vcl.$(OBJEXT) \
	cache/varnishd-cache_vrt_vmod.$(OBJEXT) \
	cache/varnishd-cache_wrk.$(OBJEXT) \
	cache/varnishd-cache_ws.$(OBJEXT) \
	common/varnishd-common_vsc.$(OBJEXT) \
	common/varnishd-common_vsmw.$(OBJEXT) \
	hash/varnishd-hash_classic.$(OBJEXT) \
	hash/varnishd-hash_critbit.$(OBJEXT) \
	hash/varnishd-hash_simple_list.$(OBJEXT) \
	hash/varnishd-mgt_hash.$(OBJEXT) \
	hpack/varnishd-vhp_decode.$(OBJEXT) \
	hpack/varnishd-vhp_table.$(OBJEXT) \
	http1/varnishd-cache_http1_deliver.$(OBJEXT) \
	http1/varnishd-cache_http1_fetch.$(OBJEXT) \
	http1/varnishd-cache_http1_fsm.$(OBJEXT) \
	http1/varnishd-cache_http1_line.$(OBJEXT) \
	http1/varnishd-cache_http1_pipe.$(OBJEXT) \
	http1/varnishd-cache_http1_proto.$(OBJEXT) \
	http1/varnishd-cache_http1_vfp.$(OBJEXT) \
	http2/varnishd-cache_http2_deliver.$(OBJEXT) \
	http2/varnishd-cache_http2_hpack.$(OBJEXT) \
	http2/varnishd-cache_http2_panic.$(OBJEXT) \
	http2/varnishd-cache_http2_proto.$(OBJEXT) \
	http2/varnishd-cache_http2_send.$(OBJEXT) \
	http2/varnishd-cache_http2_session.$(OBJEXT) \
	mgt/varnishd-mgt_acceptor.$(OBJEXT) \
	mgt/varnishd-mgt_child.$(OBJEXT) \
	mgt/varnishd-mgt_cli.$(OBJEXT) mgt/varnishd-mgt_jail.$(OBJEXT) \
	mgt/varnishd-mgt_jail_solaris.$(OBJEXT) \
	mgt/varnishd-mgt_jail_unix.$(OBJEXT) \
	mgt/varnishd-mgt_main.$(OBJEXT) \
	mgt/varnishd-mgt_param.$(OBJEXT) \
	mgt/varnishd-mgt_param_bits.$(OBJEXT) \
	mgt/varnishd-mgt_param_tbl.$(OBJEXT) \
	mgt/varnishd-mgt_param_tcp.$(OBJEXT) \
	mgt/varnishd-mgt_param_tweak.$(OBJEXT) \
	mgt/varnishd-mgt_pool.$(OBJEXT) \
	mgt/varnishd-mgt_shmem.$(OBJEXT) \
	mgt/varnishd-mgt_symtab.$(OBJEXT) \
	mgt/varnishd-mgt_util.$(OBJEXT) mgt/varnishd-mgt_vcc.$(OBJEXT) \
	mgt/varnishd-mgt_vcl.$(OBJEXT) \
	proxy/varnishd-cache_proxy_proto.$(OBJEXT) \
	storage/varnishd-mgt_stevedore.$(OBJEXT) \
	storage/varnishd-stevedore.$(OBJEXT) \
	storage/varnishd-stevedore_utils.$(OBJEXT) \
	storage/varnishd-storage_file.$(OBJEXT) \
	storage/varnishd-storage_lru.$(OBJEXT) \
	storage/varnishd-storage_malloc.$(OBJEXT) \
	storage/varnishd-storage_simple.$(OBJEXT) \
	storage/varnishd-storage_umem.$(OBJEXT) \
	waiter/varnishd-cache_waiter.$(OBJEXT) \
	waiter/varnishd-cache_waiter_epoll.$(OBJEXT) \
	waiter/varnishd-cache_waiter_kqueue.$(OBJEXT) \
	waiter/varnishd-cache_waiter_poll.$(OBJEXT) \
	waiter/varnishd-cache_waiter_ports.$(OBJEXT) \
	waiter/varnishd-mgt_waiter.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
nodist_varnishd_OBJECTS = varnishd-builtin_vcl.$(OBJEXT)
varnishd_OBJECTS = $(am_varnishd_OBJECTS) $(nodist_varnishd_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
varnishd_DEPENDENCIES = $(top_builddir)/lib/libvcc/libvcc.a \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvgz/libvgz.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
varnishd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(varnishd_CFLAGS) \
	$(CFLAGS) $(varnishd_LDFLAGS) $(LDFLAGS) -o $@
am_vhp_decode_test_OBJECTS =  \
	hpack/vhp_decode_test-vhp_decode.$(OBJEXT) \
	hpack/vhp_decode_test-vhp_table.$(OBJEXT)
vhp_decode_test_OBJECTS = $(am_vhp_decode_test_OBJECTS)
vhp_decode_test_DEPENDENCIES =  \
	$(top_builddir)/lib/libvarnish/libvarnish.la
vhp_decode_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(vhp_decode_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_vhp_gen_hufdec_OBJECTS =  \
	hpack/vhp_gen_hufdec-vhp_gen_hufdec.$(OBJEXT)
vhp_gen_hufdec_OBJECTS = $(am_vhp_gen_hufdec_OBJECTS)
vhp_gen_hufdec_DEPENDENCIES =  \
	$(top_builddir)/lib/libvarnish/libvarnish.la
vhp_gen_hufdec_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(vhp_gen_hufdec_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_vhp_table_test_OBJECTS = hpack/vhp_table_test-vhp_table.$(OBJEXT)
vhp_table_test_OBJECTS = $(am_vhp_table_test_OBJECTS)
vhp_table_test_DEPENDENCIES =  \
	$(top_builddir)/lib/libvarnish/libvarnish.la
vhp_table_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(vhp_table_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/varnishd-VSC_lck.Po \
	./$(DEPDIR)/varnishd-VSC_main.Po \
	./$(DEPDIR)/varnishd-VSC_mempool.Po \
	./$(DEPDIR)/varnishd-VSC_mgt.Po \
	./$(DEPDIR)/varnishd-VSC_sma.Po \
	./$(DEPDIR)/varnishd-VSC_smf.Po \
	./$(DEPDIR)/varnishd-VSC_smu.Po \
	./$(DEPDIR)/varnishd-VSC_vbe.Po \
	./$(DEPDIR)/varnishd-builtin_vcl.Po \
	cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po \
	cache/$(DEPDIR)/varnishd-cache_acceptor.Po \
	cache/$(DEPDIR)/varnishd-cache_backend.Po \
	cache/$(DEPDIR)/varnishd-cache_backend_probe.Po \
	cache/$(DEPDIR)/varnishd-cache_ban.Po \
	cache/$(DEPDIR)/varnishd-cache_ban_build.Po \
	cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po \
	cache/$(DEPDIR)/varnishd-cache_busyobj.Po \
	cache/$(DEPDIR)/varnishd-cache_cli.Po \
	cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po \
	cache/$(DEPDIR)/varnishd-cache_director.Po \
	cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po \
	cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po \
	cache/$(DEPDIR)/varnishd-cache_esi_parse.Po \
	cache/$(DEPDIR)/varnishd-cache_expire.Po \
	cache/$(DEPDIR)/varnishd-cache_fetch.Po \
	cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po \
	cache/$(DEPDIR)/varnishd-cache_gzip.Po \
	cache/$(DEPDIR)/varnishd-cache_hash.Po \
	cache/$(DEPDIR)/varnishd-cache_http.Po \
	cache/$(DEPDIR)/varnishd-cache_lck.Po \
	cache/$(DEPDIR)/varnishd-cache_main.Po \
	cache/$(DEPDIR)/varnishd-cache_mempool.Po \
	cache/$(DEPDIR)/varnishd-cache_obj.Po \
	cache/$(DEPDIR)/varnishd-cache_panic.Po \
	cache/$(DEPDIR)/varnishd-cache_pool.Po \
	cache/$(DEPDIR)/varnishd-cache_range.Po \
	cache/$(DEPDIR)/varnishd-cache_req.Po \
	cache/$(DEPDIR)/varnishd-cache_req_body.Po \
	cache/$(DEPDIR)/varnishd-cache_req_fsm.Po \
	cache/$(DEPDIR)/varnishd-cache_rfc2616.Po \
	cache/$(DEPDIR)/varnishd-cache_session.Po \
	cache/$(DEPDIR)/varnishd-cache_shmlog.Po \
	cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po \
	cache/$(DEPDIR)/varnishd-cache_vary.Po \
	cache/$(DEPDIR)/varnishd-cache_vcl.Po \
	cache/$(DEPDIR)/varnishd-cache_vpi.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_re.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_var.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po \
	cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po \
	cache/$(DEPDIR)/varnishd-cache_wrk.Po \
	cache/$(DEPDIR)/varnishd-cache_ws.Po \
	common/$(DEPDIR)/varnishd-common_vsc.Po \
	common/$(DEPDIR)/varnishd-common_vsmw.Po \
	fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po \
	hash/$(DEPDIR)/varnishd-hash_classic.Po \
	hash/$(DEPDIR)/varnishd-hash_critbit.Po \
	hash/$(DEPDIR)/varnishd-hash_simple_list.Po \
	hash/$(DEPDIR)/varnishd-mgt_hash.Po \
	hpack/$(DEPDIR)/varnishd-vhp_decode.Po \
	hpack/$(DEPDIR)/varnishd-vhp_table.Po \
	hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po \
	hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po \
	hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po \
	hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_line.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_proto.Po \
	http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_panic.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_proto.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_send.Po \
	http2/$(DEPDIR)/varnishd-cache_http2_session.Po \
	mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po \
	mgt/$(DEPDIR)/varnishd-mgt_child.Po \
	mgt/$(DEPDIR)/varnishd-mgt_cli.Po \
	mgt/$(DEPDIR)/varnishd-mgt_jail.Po \
	mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po \
	mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po \
	mgt/$(DEPDIR)/varnishd-mgt_main.Po \
	mgt/$(DEPDIR)/varnishd-mgt_param.Po \
	mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po \
	mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po \
	mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po \
	mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po \
	mgt/$(DEPDIR)/varnishd-mgt_pool.Po \
	mgt/$(DEPDIR)/varnishd-mgt_shmem.Po \
	mgt/$(DEPDIR)/varnishd-mgt_symtab.Po \
	mgt/$(DEPDIR)/varnishd-mgt_util.Po \
	mgt/$(DEPDIR)/varnishd-mgt_vcc.Po \
	mgt/$(DEPDIR)/varnishd-mgt_vcl.Po \
	proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po \
	storage/$(DEPDIR)/varnishd-mgt_stevedore.Po \
	storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po \
	storage/$(DEPDIR)/varnishd-stevedore.Po \
	storage/$(DEPDIR)/varnishd-stevedore_utils.Po \
	storage/$(DEPDIR)/varnishd-storage_file.Po \
	storage/$(DEPDIR)/varnishd-storage_lru.Po \
	storage/$(DEPDIR)/varnishd-storage_malloc.Po \
	storage/$(DEPDIR)/varnishd-storage_persistent.Po \
	storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po \
	storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po \
	storage/$(DEPDIR)/varnishd-storage_simple.Po \
	storage/$(DEPDIR)/varnishd-storage_umem.Po \
	waiter/$(DEPDIR)/varnishd-cache_waiter.Po \
	waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po \
	waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po \
	waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po \
	waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po \
	waiter/$(DEPDIR)/varnishd-mgt_waiter.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(esi_parse_fuzzer_SOURCES) $(varnishd_SOURCES) \
	$(nodist_varnishd_SOURCES) $(vhp_decode_test_SOURCES) \
	$(vhp_gen_hufdec_SOURCES) $(vhp_table_test_SOURCES)
DIST_SOURCES = $(esi_parse_fuzzer_SOURCES) \
	$(am__varnishd_SOURCES_DIST) $(vhp_decode_test_SOURCES) \
	$(vhp_gen_hufdec_SOURCES) $(vhp_table_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
HEADERS = $(nobase_pkginclude_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AM_LT_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized -pthread -Wall -Werror -Wno-error=unused-result   -Werror  -Wno-format-y2k  -Wstrict-prototypes  -Wmissing-prototypes  -Wpointer-arith  -Wcast-qual  -Wwrite-strings  -Wshadow  -Wunused-parameter  -Wcast-align  -Wchar-subscripts  -Wnested-externs  -Wextra  -Wno-sign-compare  -fstack-protector -Wno-missing-field-initializers
CPP = gcc -E
CPPFLAGS = 
CURSES_CFLAGS = -D_GNU_SOURCE -D_DEFAULT_SOURCE -I/usr/include/ncursesw
CURSES_LIB = 
CURSES_LIBS = -lncursesw -ltinfo
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl 
DOT = no
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
EXTCFLAGS = -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JEMALLOC_LDADD = 
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEDIT_CFLAGS = -I/usr/include/editline
LIBEDIT_LIBS = -ledit
LIBM = -lm
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUNWIND_CFLAGS = 
LIBUNWIND_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NET_LIBS =  
NM = /usr/bin/nm -B
NMEDIT = 
NSL_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = varnish
PACKAGE_BUGREPORT = varnish-dev@varnish-cache.org
PACKAGE_NAME = Varnish
PACKAGE_STRING = Varnish 6.5.2
PACKAGE_TARNAME = varnish
PACKAGE_URL = 
PACKAGE_VERSION = 6.5.2
PATH_SEPARATOR = :
PCRE_CFLAGS = 
PCRE_CONFIG = 
PCRE_LIBS = -lpcre
PKG_CONFIG = /usr/bin/x86_64-suse-linux-gnu-pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = :/usr/lib64/pkgconfig:/usr/share/pkgconfig
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3.6
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.6
RANLIB = ranlib
RST2HTML = rst2html
RST2MAN = rst2man
RT_LIBS = -lrt 
SAN_CFLAGS = 
SAN_LDFLAGS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SOCKET_LIBS = 
SPHINX = sphinx-build-3.6
STRIP = strip
VARNISH_STATE_DIR = ${localstatedir}/varnish
VCC_CC = exec gcc -O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -fcommon -fstack-protector -Wno-error=clobbered -Werror=maybe-uninitialized -Wall -Werror -Wno-error=unused-result   -Werror  -Wno-format-y2k  -Wstrict-prototypes  -Wmissing-prototypes  -Wpointer-arith  -Wcast-qual  -Wwrite-strings  -Wshadow  -Wunused-parameter  -Wcast-align  -Wchar-subscripts  -Wnested-externs  -Wextra  -Wno-sign-compare  -fstack-protector -Wno-missing-field-initializers -pthread -fpic -shared -Wl,-x -o %o %s
VERSION = 6.5.2
VMOD_LDFLAGS = -module -export-dynamic -avoid-version -shared
VSC_GEN_C = VSC_lck.c VSC_main.c VSC_mempool.c VSC_mgt.c VSC_sma.c VSC_smf.c VSC_smu.c VSC_vbe.c
VSC_GEN_H = VSC_lck.h VSC_main.h VSC_mempool.h VSC_mgt.h VSC_sma.h VSC_smf.h VSC_smu.h VSC_vbe.h
abs_builddir = /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishd
abs_srcdir = /root/rpmbuild/BUILD/varnish-6.5.2/bin/varnishd
abs_top_builddir = /root/rpmbuild/BUILD/varnish-6.5.2
abs_top_srcdir = /root/rpmbuild/BUILD/varnish-6.5.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = /usr/bin
build = x86_64-suse-linux-gnu
build_alias = x86_64-suse-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = suse
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = /usr/share/doc/packages/varnish
dvidir = ${docdir}
exec_prefix = /usr
host = x86_64-suse-linux-gnu
host_alias = x86_64-suse-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = ${SHELL} /root/rpmbuild/BUILD/varnish-6.5.2/build-aux/install-sh
libdir = /usr/lib64
libexecdir = /usr/lib
libvgz_extra_cflags =  -Wno-unknown-warning-option -Wno-implicit-fallthrough
localedir = ${datarootdir}/locale
localstatedir = /var/cache
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/varnish
pkgpythondir = ${pythondir}/varnish
pkgsysconfdir = ${sysconfdir}/varnish
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python3.6/site-packages
pythondir = ${prefix}/lib/python3.6/site-packages
runstatedir = ${localstatedir}/run
sbindir = /usr/sbin
sharedstatedir = /var/lib
srcdir = .
sysconfdir = /etc
target = x86_64-suse-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = suse
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
vmoddir = $(pkglibdir)/vmods
AM_CPPFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/lib/libvgz \
	-I$(top_builddir)/bin/varnishd \
	-I$(top_builddir)/include

varnishd_SOURCES = cache/cache_acceptor.c cache/cache_backend.c \
	cache/cache_backend_probe.c cache/cache_ban.c \
	cache/cache_ban_build.c cache/cache_ban_lurker.c \
	cache/cache_busyobj.c cache/cache_cli.c \
	cache/cache_deliver_proc.c cache/cache_director.c \
	cache/cache_esi_deliver.c cache/cache_esi_fetch.c \
	cache/cache_esi_parse.c cache/cache_expire.c \
	cache/cache_fetch.c cache/cache_fetch_proc.c \
	cache/cache_gzip.c cache/cache_hash.c cache/cache_http.c \
	cache/cache_lck.c cache/cache_main.c cache/cache_mempool.c \
	cache/cache_obj.c cache/cache_panic.c cache/cache_pool.c \
	cache/cache_range.c cache/cache_req.c cache/cache_req_body.c \
	cache/cache_req_fsm.c cache/cache_rfc2616.c \
	cache/cache_session.c cache/cache_shmlog.c \
	cache/cache_tcp_pool.c cache/cache_vary.c cache/cache_vcl.c \
	cache/cache_vpi.c cache/cache_vrt.c cache/cache_vrt_filter.c \
	cache/cache_vrt_priv.c cache/cache_vrt_re.c \
	cache/cache_vrt_var.c cache/cache_vrt_vcl.c \
	cache/cache_vrt_vmod.c cache/cache_wrk.c cache/cache_ws.c \
	common/common_vsc.c common/common_vsmw.c hash/hash_classic.c \
	hash/hash_critbit.c hash/hash_simple_list.c hash/mgt_hash.c \
	hpack/vhp_decode.c hpack/vhp_table.c \
	http1/cache_http1_deliver.c http1/cache_http1_fetch.c \
	http1/cache_http1_fsm.c http1/cache_http1_line.c \
	http1/cache_http1_pipe.c http1/cache_http1_proto.c \
	http1/cache_http1_vfp.c http2/cache_http2_deliver.c \
	http2/cache_http2_hpack.c http2/cache_http2_panic.c \
	http2/cache_http2_proto.c http2/cache_http2_send.c \
	http2/cache_http2_session.c mgt/mgt_acceptor.c mgt/mgt_child.c \
	mgt/mgt_cli.c mgt/mgt_jail.c mgt/mgt_jail_solaris.c \
	mgt/mgt_jail_solaris_tbl.h mgt/mgt_jail_unix.c mgt/mgt_main.c \
	mgt/mgt_param.c mgt/mgt_param_bits.c mgt/mgt_param_tbl.c \
	mgt/mgt_param_tcp.c mgt/mgt_param_tweak.c mgt/mgt_pool.c \
	mgt/mgt_shmem.c mgt/mgt_symtab.c mgt/mgt_util.c mgt/mgt_vcc.c \
	mgt/mgt_vcl.c proxy/cache_proxy_proto.c proxy/cache_proxy.h \
	storage/mgt_stevedore.c storage/stevedore.c \
	storage/stevedore_utils.c storage/storage_file.c \
	storage/storage_lru.c storage/storage_malloc.c \
	storage/storage_simple.c storage/storage_umem.c \
	waiter/cache_waiter.c waiter/cache_waiter_epoll.c \
	waiter/cache_waiter_kqueue.c waiter/cache_waiter_poll.c \
	waiter/cache_waiter_ports.c waiter/mgt_waiter.c \
	$(am__append_1) $(VSC_SRC)
nodist_varnishd_SOURCES = \
	builtin_vcl.c

noinst_HEADERS = \
	cache/cache_ban.h \
	cache/cache_esi.h \
	cache/cache_obj.h \
	cache/cache_objhead.h \
	cache/cache_pool.h \
	cache/cache_tcp_pool.h \
	cache/cache_transport.h \
	cache/cache_vcl.h \
	cache/cache_vgz.h \
	common/heritage.h \
	common/vsmw.h \
	hash/hash_slinger.h \
	hpack/vhp.h \
	http1/cache_http1.h \
	http2/cache_http2.h \
	mgt/mgt.h \
	mgt/mgt_vcl.h \
	mgt/mgt_param.h \
	storage/storage.h \
	storage/storage_persistent.h \
	storage/storage_simple.h \
	waiter/mgt_waiter.h \
	waiter/waiter_priv.h


# Headers for use with vmods
nobase_pkginclude_HEADERS = \
	cache/cache.h \
	cache/cache_backend.h \
	cache/cache_director.h \
	cache/cache_filter.h \
	cache/cache_varnishd.h \
	common/common_param.h \
	waiter/waiter.h

vcldir = $(datarootdir)/$(PACKAGE)/vcl
varnishd_CFLAGS =   -DNOT_IN_A_VMOD \
	-DVARNISH_STATE_DIR='"${VARNISH_STATE_DIR}"' \
	-DVARNISH_VMOD_DIR='"${vmoddir}"' \
	-DVARNISH_VCL_DIR='"${pkgsysconfdir}:${vcldir}"' \
	$(am__append_2)
varnishd_LDFLAGS = -export-dynamic
varnishd_LDADD = $(top_builddir)/lib/libvcc/libvcc.a \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvgz/libvgz.a  \
	 -lpcre ${DL_LIBS} ${PTHREAD_LIBS} \
	${NET_LIBS} ${RT_LIBS} ${LIBM} $(am__append_3)
vhp_gen_hufdec_SOURCES = hpack/vhp_gen_hufdec.c
vhp_gen_hufdec_CFLAGS =  \
			-include config.h

vhp_gen_hufdec_LDADD = \
	$(top_builddir)/lib/libvarnish/libvarnish.la

vhp_table_test_SOURCES = hpack/vhp_table.c
vhp_table_test_CFLAGS =  \
			-DTABLE_TEST_DRIVER -include config.h

vhp_table_test_LDADD = \
	$(top_builddir)/lib/libvarnish/libvarnish.la

vhp_decode_test_SOURCES = hpack/vhp_decode.c hpack/vhp_table.c
vhp_decode_test_CFLAGS =  \
			 -DDECODE_TEST_DRIVER -include config.h

vhp_decode_test_LDADD = \
	$(top_builddir)/lib/libvarnish/libvarnish.la

esi_parse_fuzzer_SOURCES = \
	cache/cache_esi_parse.c \
	fuzzers/esi_parse_fuzzer.c

esi_parse_fuzzer_CFLAGS = \
	 -DNOT_IN_A_VMOD -DTEST_DRIVER -include config.h

esi_parse_fuzzer_LDADD = \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvgz/libvgz.a

EXTRA_DIST = builtin.vcl
DISTCLEANFILES = builtin_vcl.c vhp_hufdec.h
BUILT_SOURCES = vhp_hufdec.h $(VSC_GEN_C)
VSC_SRC = \
	VSC_lck.vsc \
	VSC_main.vsc \
	VSC_mempool.vsc \
	VSC_mgt.vsc \
	VSC_sma.vsc \
	VSC_smf.vsc \
	VSC_smu.vsc \
	VSC_vbe.vsc

CLEANFILES = $(VSC_GEN_C) $(VSC_GEN_H)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs .vsc
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign bin/varnishd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign bin/varnishd/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
cache/$(am__dirstamp):
	@$(MKDIR_P) cache
	@: > cache/$(am__dirstamp)
cache/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cache/$(DEPDIR)
	@: > cache/$(DEPDIR)/$(am__dirstamp)
cache/esi_parse_fuzzer-cache_esi_parse.$(OBJEXT):  \
	cache/$(am__dirstamp) cache/$(DEPDIR)/$(am__dirstamp)
fuzzers/$(am__dirstamp):
	@$(MKDIR_P) fuzzers
	@: > fuzzers/$(am__dirstamp)
fuzzers/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) fuzzers/$(DEPDIR)
	@: > fuzzers/$(DEPDIR)/$(am__dirstamp)
fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.$(OBJEXT):  \
	fuzzers/$(am__dirstamp) fuzzers/$(DEPDIR)/$(am__dirstamp)

esi_parse_fuzzer$(EXEEXT): $(esi_parse_fuzzer_OBJECTS) $(esi_parse_fuzzer_DEPENDENCIES) $(EXTRA_esi_parse_fuzzer_DEPENDENCIES) 
	@rm -f esi_parse_fuzzer$(EXEEXT)
	$(AM_V_CCLD)$(esi_parse_fuzzer_LINK) $(esi_parse_fuzzer_OBJECTS) $(esi_parse_fuzzer_LDADD) $(LIBS)
cache/varnishd-cache_acceptor.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_backend.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_backend_probe.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_ban.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_ban_build.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_ban_lurker.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_busyobj.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_cli.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_deliver_proc.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_director.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_esi_deliver.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_esi_fetch.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_esi_parse.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_expire.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_fetch.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_fetch_proc.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_gzip.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_hash.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_http.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_lck.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_main.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_mempool.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_obj.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_panic.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_pool.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_range.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_req.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_req_body.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_req_fsm.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_rfc2616.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_session.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_shmlog.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_tcp_pool.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vary.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vcl.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vpi.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_filter.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_priv.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_re.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_var.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_vcl.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_vrt_vmod.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_wrk.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
cache/varnishd-cache_ws.$(OBJEXT): cache/$(am__dirstamp) \
	cache/$(DEPDIR)/$(am__dirstamp)
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/varnishd-common_vsc.$(OBJEXT): common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/varnishd-common_vsmw.$(OBJEXT): common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
hash/$(am__dirstamp):
	@$(MKDIR_P) hash
	@: > hash/$(am__dirstamp)
hash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hash/$(DEPDIR)
	@: > hash/$(DEPDIR)/$(am__dirstamp)
hash/varnishd-hash_classic.$(OBJEXT): hash/$(am__dirstamp) \
	hash/$(DEPDIR)/$(am__dirstamp)
hash/varnishd-hash_critbit.$(OBJEXT): hash/$(am__dirstamp) \
	hash/$(DEPDIR)/$(am__dirstamp)
hash/varnishd-hash_simple_list.$(OBJEXT): hash/$(am__dirstamp) \
	hash/$(DEPDIR)/$(am__dirstamp)
hash/varnishd-mgt_hash.$(OBJEXT): hash/$(am__dirstamp) \
	hash/$(DEPDIR)/$(am__dirstamp)
hpack/$(am__dirstamp):
	@$(MKDIR_P) hpack
	@: > hpack/$(am__dirstamp)
hpack/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hpack/$(DEPDIR)
	@: > hpack/$(DEPDIR)/$(am__dirstamp)
hpack/varnishd-vhp_decode.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)
hpack/varnishd-vhp_table.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)
http1/$(am__dirstamp):
	@$(MKDIR_P) http1
	@: > http1/$(am__dirstamp)
http1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) http1/$(DEPDIR)
	@: > http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_deliver.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_fetch.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_fsm.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_line.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_pipe.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_proto.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http1/varnishd-cache_http1_vfp.$(OBJEXT): http1/$(am__dirstamp) \
	http1/$(DEPDIR)/$(am__dirstamp)
http2/$(am__dirstamp):
	@$(MKDIR_P) http2
	@: > http2/$(am__dirstamp)
http2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) http2/$(DEPDIR)
	@: > http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_deliver.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_hpack.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_panic.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_proto.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_send.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
http2/varnishd-cache_http2_session.$(OBJEXT): http2/$(am__dirstamp) \
	http2/$(DEPDIR)/$(am__dirstamp)
mgt/$(am__dirstamp):
	@$(MKDIR_P) mgt
	@: > mgt/$(am__dirstamp)
mgt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mgt/$(DEPDIR)
	@: > mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_acceptor.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_child.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_cli.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_jail.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_jail_solaris.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_jail_unix.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_main.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_param.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_param_bits.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_param_tbl.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_param_tcp.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_param_tweak.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_pool.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_shmem.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_symtab.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_util.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_vcc.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
mgt/varnishd-mgt_vcl.$(OBJEXT): mgt/$(am__dirstamp) \
	mgt/$(DEPDIR)/$(am__dirstamp)
proxy/$(am__dirstamp):
	@$(MKDIR_P) proxy
	@: > proxy/$(am__dirstamp)
proxy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) proxy/$(DEPDIR)
	@: > proxy/$(DEPDIR)/$(am__dirstamp)
proxy/varnishd-cache_proxy_proto.$(OBJEXT): proxy/$(am__dirstamp) \
	proxy/$(DEPDIR)/$(am__dirstamp)
storage/$(am__dirstamp):
	@$(MKDIR_P) storage
	@: > storage/$(am__dirstamp)
storage/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) storage/$(DEPDIR)
	@: > storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-mgt_stevedore.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-stevedore.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-stevedore_utils.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_file.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_lru.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_malloc.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_simple.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_umem.$(OBJEXT): storage/$(am__dirstamp) \
	storage/$(DEPDIR)/$(am__dirstamp)
waiter/$(am__dirstamp):
	@$(MKDIR_P) waiter
	@: > waiter/$(am__dirstamp)
waiter/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) waiter/$(DEPDIR)
	@: > waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-cache_waiter.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-cache_waiter_epoll.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-cache_waiter_kqueue.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-cache_waiter_poll.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-cache_waiter_ports.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
waiter/varnishd-mgt_waiter.$(OBJEXT): waiter/$(am__dirstamp) \
	waiter/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-mgt_storage_persistent.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_persistent.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_persistent_silo.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)
storage/varnishd-storage_persistent_subr.$(OBJEXT):  \
	storage/$(am__dirstamp) storage/$(DEPDIR)/$(am__dirstamp)

varnishd$(EXEEXT): $(varnishd_OBJECTS) $(varnishd_DEPENDENCIES) $(EXTRA_varnishd_DEPENDENCIES) 
	@rm -f varnishd$(EXEEXT)
	$(AM_V_CCLD)$(varnishd_LINK) $(varnishd_OBJECTS) $(varnishd_LDADD) $(LIBS)
hpack/vhp_decode_test-vhp_decode.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)
hpack/vhp_decode_test-vhp_table.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)

vhp_decode_test$(EXEEXT): $(vhp_decode_test_OBJECTS) $(vhp_decode_test_DEPENDENCIES) $(EXTRA_vhp_decode_test_DEPENDENCIES) 
	@rm -f vhp_decode_test$(EXEEXT)
	$(AM_V_CCLD)$(vhp_decode_test_LINK) $(vhp_decode_test_OBJECTS) $(vhp_decode_test_LDADD) $(LIBS)
hpack/vhp_gen_hufdec-vhp_gen_hufdec.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)

vhp_gen_hufdec$(EXEEXT): $(vhp_gen_hufdec_OBJECTS) $(vhp_gen_hufdec_DEPENDENCIES) $(EXTRA_vhp_gen_hufdec_DEPENDENCIES) 
	@rm -f vhp_gen_hufdec$(EXEEXT)
	$(AM_V_CCLD)$(vhp_gen_hufdec_LINK) $(vhp_gen_hufdec_OBJECTS) $(vhp_gen_hufdec_LDADD) $(LIBS)
hpack/vhp_table_test-vhp_table.$(OBJEXT): hpack/$(am__dirstamp) \
	hpack/$(DEPDIR)/$(am__dirstamp)

vhp_table_test$(EXEEXT): $(vhp_table_test_OBJECTS) $(vhp_table_test_DEPENDENCIES) $(EXTRA_vhp_table_test_DEPENDENCIES) 
	@rm -f vhp_table_test$(EXEEXT)
	$(AM_V_CCLD)$(vhp_table_test_LINK) $(vhp_table_test_OBJECTS) $(vhp_table_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f cache/*.$(OBJEXT)
	-rm -f common/*.$(OBJEXT)
	-rm -f fuzzers/*.$(OBJEXT)
	-rm -f hash/*.$(OBJEXT)
	-rm -f hpack/*.$(OBJEXT)
	-rm -f http1/*.$(OBJEXT)
	-rm -f http2/*.$(OBJEXT)
	-rm -f mgt/*.$(OBJEXT)
	-rm -f proxy/*.$(OBJEXT)
	-rm -f storage/*.$(OBJEXT)
	-rm -f waiter/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/varnishd-VSC_lck.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_main.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_mempool.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_mgt.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_sma.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_smf.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_smu.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-VSC_vbe.Po # am--include-marker
#include ./$(DEPDIR)/varnishd-builtin_vcl.Po # am--include-marker
#include cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_acceptor.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_backend.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_backend_probe.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_ban.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_ban_build.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_busyobj.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_cli.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_director.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_esi_parse.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_expire.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_fetch.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_gzip.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_hash.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_http.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_lck.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_main.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_mempool.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_obj.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_panic.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_pool.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_range.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_req.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_req_body.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_req_fsm.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_rfc2616.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_session.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_shmlog.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vary.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vcl.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vpi.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_re.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_var.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_wrk.Po # am--include-marker
#include cache/$(DEPDIR)/varnishd-cache_ws.Po # am--include-marker
#include common/$(DEPDIR)/varnishd-common_vsc.Po # am--include-marker
#include common/$(DEPDIR)/varnishd-common_vsmw.Po # am--include-marker
#include fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po # am--include-marker
#include hash/$(DEPDIR)/varnishd-hash_classic.Po # am--include-marker
#include hash/$(DEPDIR)/varnishd-hash_critbit.Po # am--include-marker
#include hash/$(DEPDIR)/varnishd-hash_simple_list.Po # am--include-marker
#include hash/$(DEPDIR)/varnishd-mgt_hash.Po # am--include-marker
#include hpack/$(DEPDIR)/varnishd-vhp_decode.Po # am--include-marker
#include hpack/$(DEPDIR)/varnishd-vhp_table.Po # am--include-marker
#include hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po # am--include-marker
#include hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po # am--include-marker
#include hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po # am--include-marker
#include hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_line.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_proto.Po # am--include-marker
#include http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_panic.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_proto.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_send.Po # am--include-marker
#include http2/$(DEPDIR)/varnishd-cache_http2_session.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_child.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_cli.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_jail.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_main.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_param.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_pool.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_shmem.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_symtab.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_util.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_vcc.Po # am--include-marker
#include mgt/$(DEPDIR)/varnishd-mgt_vcl.Po # am--include-marker
#include proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-mgt_stevedore.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-stevedore.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-stevedore_utils.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_file.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_lru.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_malloc.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_persistent.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_simple.Po # am--include-marker
#include storage/$(DEPDIR)/varnishd-storage_umem.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-cache_waiter.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po # am--include-marker
#include waiter/$(DEPDIR)/varnishd-mgt_waiter.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

cache/esi_parse_fuzzer-cache_esi_parse.o: cache/cache_esi_parse.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -MT cache/esi_parse_fuzzer-cache_esi_parse.o -MD -MP -MF cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Tpo -c -o cache/esi_parse_fuzzer-cache_esi_parse.o `test -f 'cache/cache_esi_parse.c' || echo '$(srcdir)/'`cache/cache_esi_parse.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Tpo cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po
#	$(AM_V_CC)source='cache/cache_esi_parse.c' object='cache/esi_parse_fuzzer-cache_esi_parse.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -c -o cache/esi_parse_fuzzer-cache_esi_parse.o `test -f 'cache/cache_esi_parse.c' || echo '$(srcdir)/'`cache/cache_esi_parse.c

cache/esi_parse_fuzzer-cache_esi_parse.obj: cache/cache_esi_parse.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -MT cache/esi_parse_fuzzer-cache_esi_parse.obj -MD -MP -MF cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Tpo -c -o cache/esi_parse_fuzzer-cache_esi_parse.obj `if test -f 'cache/cache_esi_parse.c'; then $(CYGPATH_W) 'cache/cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_parse.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Tpo cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po
#	$(AM_V_CC)source='cache/cache_esi_parse.c' object='cache/esi_parse_fuzzer-cache_esi_parse.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -c -o cache/esi_parse_fuzzer-cache_esi_parse.obj `if test -f 'cache/cache_esi_parse.c'; then $(CYGPATH_W) 'cache/cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_parse.c'; fi`

fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o: fuzzers/esi_parse_fuzzer.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -MT fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o -MD -MP -MF fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Tpo -c -o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o `test -f 'fuzzers/esi_parse_fuzzer.c' || echo '$(srcdir)/'`fuzzers/esi_parse_fuzzer.c
#	$(AM_V_at)$(am__mv) fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Tpo fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po
#	$(AM_V_CC)source='fuzzers/esi_parse_fuzzer.c' object='fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -c -o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o `test -f 'fuzzers/esi_parse_fuzzer.c' || echo '$(srcdir)/'`fuzzers/esi_parse_fuzzer.c

fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.obj: fuzzers/esi_parse_fuzzer.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -MT fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.obj -MD -MP -MF fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Tpo -c -o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.obj `if test -f 'fuzzers/esi_parse_fuzzer.c'; then $(CYGPATH_W) 'fuzzers/esi_parse_fuzzer.c'; else $(CYGPATH_W) '$(srcdir)/fuzzers/esi_parse_fuzzer.c'; fi`
#	$(AM_V_at)$(am__mv) fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Tpo fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po
#	$(AM_V_CC)source='fuzzers/esi_parse_fuzzer.c' object='fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(esi_parse_fuzzer_CFLAGS) $(CFLAGS) -c -o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.obj `if test -f 'fuzzers/esi_parse_fuzzer.c'; then $(CYGPATH_W) 'fuzzers/esi_parse_fuzzer.c'; else $(CYGPATH_W) '$(srcdir)/fuzzers/esi_parse_fuzzer.c'; fi`

cache/varnishd-cache_acceptor.o: cache/cache_acceptor.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_acceptor.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_acceptor.Tpo -c -o cache/varnishd-cache_acceptor.o `test -f 'cache/cache_acceptor.c' || echo '$(srcdir)/'`cache/cache_acceptor.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_acceptor.Tpo cache/$(DEPDIR)/varnishd-cache_acceptor.Po
#	$(AM_V_CC)source='cache/cache_acceptor.c' object='cache/varnishd-cache_acceptor.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_acceptor.o `test -f 'cache/cache_acceptor.c' || echo '$(srcdir)/'`cache/cache_acceptor.c

cache/varnishd-cache_acceptor.obj: cache/cache_acceptor.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_acceptor.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_acceptor.Tpo -c -o cache/varnishd-cache_acceptor.obj `if test -f 'cache/cache_acceptor.c'; then $(CYGPATH_W) 'cache/cache_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_acceptor.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_acceptor.Tpo cache/$(DEPDIR)/varnishd-cache_acceptor.Po
#	$(AM_V_CC)source='cache/cache_acceptor.c' object='cache/varnishd-cache_acceptor.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_acceptor.obj `if test -f 'cache/cache_acceptor.c'; then $(CYGPATH_W) 'cache/cache_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_acceptor.c'; fi`

cache/varnishd-cache_backend.o: cache/cache_backend.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_backend.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_backend.Tpo -c -o cache/varnishd-cache_backend.o `test -f 'cache/cache_backend.c' || echo '$(srcdir)/'`cache/cache_backend.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_backend.Tpo cache/$(DEPDIR)/varnishd-cache_backend.Po
#	$(AM_V_CC)source='cache/cache_backend.c' object='cache/varnishd-cache_backend.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_backend.o `test -f 'cache/cache_backend.c' || echo '$(srcdir)/'`cache/cache_backend.c

cache/varnishd-cache_backend.obj: cache/cache_backend.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_backend.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_backend.Tpo -c -o cache/varnishd-cache_backend.obj `if test -f 'cache/cache_backend.c'; then $(CYGPATH_W) 'cache/cache_backend.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_backend.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_backend.Tpo cache/$(DEPDIR)/varnishd-cache_backend.Po
#	$(AM_V_CC)source='cache/cache_backend.c' object='cache/varnishd-cache_backend.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_backend.obj `if test -f 'cache/cache_backend.c'; then $(CYGPATH_W) 'cache/cache_backend.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_backend.c'; fi`

cache/varnishd-cache_backend_probe.o: cache/cache_backend_probe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_backend_probe.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_backend_probe.Tpo -c -o cache/varnishd-cache_backend_probe.o `test -f 'cache/cache_backend_probe.c' || echo '$(srcdir)/'`cache/cache_backend_probe.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_backend_probe.Tpo cache/$(DEPDIR)/varnishd-cache_backend_probe.Po
#	$(AM_V_CC)source='cache/cache_backend_probe.c' object='cache/varnishd-cache_backend_probe.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_backend_probe.o `test -f 'cache/cache_backend_probe.c' || echo '$(srcdir)/'`cache/cache_backend_probe.c

cache/varnishd-cache_backend_probe.obj: cache/cache_backend_probe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_backend_probe.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_backend_probe.Tpo -c -o cache/varnishd-cache_backend_probe.obj `if test -f 'cache/cache_backend_probe.c'; then $(CYGPATH_W) 'cache/cache_backend_probe.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_backend_probe.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_backend_probe.Tpo cache/$(DEPDIR)/varnishd-cache_backend_probe.Po
#	$(AM_V_CC)source='cache/cache_backend_probe.c' object='cache/varnishd-cache_backend_probe.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_backend_probe.obj `if test -f 'cache/cache_backend_probe.c'; then $(CYGPATH_W) 'cache/cache_backend_probe.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_backend_probe.c'; fi`

cache/varnishd-cache_ban.o: cache/cache_ban.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban.Tpo -c -o cache/varnishd-cache_ban.o `test -f 'cache/cache_ban.c' || echo '$(srcdir)/'`cache/cache_ban.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban.Tpo cache/$(DEPDIR)/varnishd-cache_ban.Po
#	$(AM_V_CC)source='cache/cache_ban.c' object='cache/varnishd-cache_ban.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban.o `test -f 'cache/cache_ban.c' || echo '$(srcdir)/'`cache/cache_ban.c

cache/varnishd-cache_ban.obj: cache/cache_ban.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban.Tpo -c -o cache/varnishd-cache_ban.obj `if test -f 'cache/cache_ban.c'; then $(CYGPATH_W) 'cache/cache_ban.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban.Tpo cache/$(DEPDIR)/varnishd-cache_ban.Po
#	$(AM_V_CC)source='cache/cache_ban.c' object='cache/varnishd-cache_ban.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban.obj `if test -f 'cache/cache_ban.c'; then $(CYGPATH_W) 'cache/cache_ban.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban.c'; fi`

cache/varnishd-cache_ban_build.o: cache/cache_ban_build.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban_build.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban_build.Tpo -c -o cache/varnishd-cache_ban_build.o `test -f 'cache/cache_ban_build.c' || echo '$(srcdir)/'`cache/cache_ban_build.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban_build.Tpo cache/$(DEPDIR)/varnishd-cache_ban_build.Po
#	$(AM_V_CC)source='cache/cache_ban_build.c' object='cache/varnishd-cache_ban_build.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban_build.o `test -f 'cache/cache_ban_build.c' || echo '$(srcdir)/'`cache/cache_ban_build.c

cache/varnishd-cache_ban_build.obj: cache/cache_ban_build.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban_build.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban_build.Tpo -c -o cache/varnishd-cache_ban_build.obj `if test -f 'cache/cache_ban_build.c'; then $(CYGPATH_W) 'cache/cache_ban_build.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban_build.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban_build.Tpo cache/$(DEPDIR)/varnishd-cache_ban_build.Po
#	$(AM_V_CC)source='cache/cache_ban_build.c' object='cache/varnishd-cache_ban_build.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban_build.obj `if test -f 'cache/cache_ban_build.c'; then $(CYGPATH_W) 'cache/cache_ban_build.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban_build.c'; fi`

cache/varnishd-cache_ban_lurker.o: cache/cache_ban_lurker.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban_lurker.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban_lurker.Tpo -c -o cache/varnishd-cache_ban_lurker.o `test -f 'cache/cache_ban_lurker.c' || echo '$(srcdir)/'`cache/cache_ban_lurker.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban_lurker.Tpo cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po
#	$(AM_V_CC)source='cache/cache_ban_lurker.c' object='cache/varnishd-cache_ban_lurker.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban_lurker.o `test -f 'cache/cache_ban_lurker.c' || echo '$(srcdir)/'`cache/cache_ban_lurker.c

cache/varnishd-cache_ban_lurker.obj: cache/cache_ban_lurker.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ban_lurker.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ban_lurker.Tpo -c -o cache/varnishd-cache_ban_lurker.obj `if test -f 'cache/cache_ban_lurker.c'; then $(CYGPATH_W) 'cache/cache_ban_lurker.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban_lurker.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ban_lurker.Tpo cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po
#	$(AM_V_CC)source='cache/cache_ban_lurker.c' object='cache/varnishd-cache_ban_lurker.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ban_lurker.obj `if test -f 'cache/cache_ban_lurker.c'; then $(CYGPATH_W) 'cache/cache_ban_lurker.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ban_lurker.c'; fi`

cache/varnishd-cache_busyobj.o: cache/cache_busyobj.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_busyobj.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_busyobj.Tpo -c -o cache/varnishd-cache_busyobj.o `test -f 'cache/cache_busyobj.c' || echo '$(srcdir)/'`cache/cache_busyobj.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_busyobj.Tpo cache/$(DEPDIR)/varnishd-cache_busyobj.Po
#	$(AM_V_CC)source='cache/cache_busyobj.c' object='cache/varnishd-cache_busyobj.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_busyobj.o `test -f 'cache/cache_busyobj.c' || echo '$(srcdir)/'`cache/cache_busyobj.c

cache/varnishd-cache_busyobj.obj: cache/cache_busyobj.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_busyobj.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_busyobj.Tpo -c -o cache/varnishd-cache_busyobj.obj `if test -f 'cache/cache_busyobj.c'; then $(CYGPATH_W) 'cache/cache_busyobj.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_busyobj.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_busyobj.Tpo cache/$(DEPDIR)/varnishd-cache_busyobj.Po
#	$(AM_V_CC)source='cache/cache_busyobj.c' object='cache/varnishd-cache_busyobj.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_busyobj.obj `if test -f 'cache/cache_busyobj.c'; then $(CYGPATH_W) 'cache/cache_busyobj.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_busyobj.c'; fi`

cache/varnishd-cache_cli.o: cache/cache_cli.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_cli.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_cli.Tpo -c -o cache/varnishd-cache_cli.o `test -f 'cache/cache_cli.c' || echo '$(srcdir)/'`cache/cache_cli.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_cli.Tpo cache/$(DEPDIR)/varnishd-cache_cli.Po
#	$(AM_V_CC)source='cache/cache_cli.c' object='cache/varnishd-cache_cli.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_cli.o `test -f 'cache/cache_cli.c' || echo '$(srcdir)/'`cache/cache_cli.c

cache/varnishd-cache_cli.obj: cache/cache_cli.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_cli.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_cli.Tpo -c -o cache/varnishd-cache_cli.obj `if test -f 'cache/cache_cli.c'; then $(CYGPATH_W) 'cache/cache_cli.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_cli.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_cli.Tpo cache/$(DEPDIR)/varnishd-cache_cli.Po
#	$(AM_V_CC)source='cache/cache_cli.c' object='cache/varnishd-cache_cli.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_cli.obj `if test -f 'cache/cache_cli.c'; then $(CYGPATH_W) 'cache/cache_cli.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_cli.c'; fi`

cache/varnishd-cache_deliver_proc.o: cache/cache_deliver_proc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_deliver_proc.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_deliver_proc.Tpo -c -o cache/varnishd-cache_deliver_proc.o `test -f 'cache/cache_deliver_proc.c' || echo '$(srcdir)/'`cache/cache_deliver_proc.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_deliver_proc.Tpo cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po
#	$(AM_V_CC)source='cache/cache_deliver_proc.c' object='cache/varnishd-cache_deliver_proc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_deliver_proc.o `test -f 'cache/cache_deliver_proc.c' || echo '$(srcdir)/'`cache/cache_deliver_proc.c

cache/varnishd-cache_deliver_proc.obj: cache/cache_deliver_proc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_deliver_proc.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_deliver_proc.Tpo -c -o cache/varnishd-cache_deliver_proc.obj `if test -f 'cache/cache_deliver_proc.c'; then $(CYGPATH_W) 'cache/cache_deliver_proc.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_deliver_proc.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_deliver_proc.Tpo cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po
#	$(AM_V_CC)source='cache/cache_deliver_proc.c' object='cache/varnishd-cache_deliver_proc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_deliver_proc.obj `if test -f 'cache/cache_deliver_proc.c'; then $(CYGPATH_W) 'cache/cache_deliver_proc.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_deliver_proc.c'; fi`

cache/varnishd-cache_director.o: cache/cache_director.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_director.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_director.Tpo -c -o cache/varnishd-cache_director.o `test -f 'cache/cache_director.c' || echo '$(srcdir)/'`cache/cache_director.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_director.Tpo cache/$(DEPDIR)/varnishd-cache_director.Po
#	$(AM_V_CC)source='cache/cache_director.c' object='cache/varnishd-cache_director.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_director.o `test -f 'cache/cache_director.c' || echo '$(srcdir)/'`cache/cache_director.c

cache/varnishd-cache_director.obj: cache/cache_director.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_director.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_director.Tpo -c -o cache/varnishd-cache_director.obj `if test -f 'cache/cache_director.c'; then $(CYGPATH_W) 'cache/cache_director.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_director.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_director.Tpo cache/$(DEPDIR)/varnishd-cache_director.Po
#	$(AM_V_CC)source='cache/cache_director.c' object='cache/varnishd-cache_director.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_director.obj `if test -f 'cache/cache_director.c'; then $(CYGPATH_W) 'cache/cache_director.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_director.c'; fi`

cache/varnishd-cache_esi_deliver.o: cache/cache_esi_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_deliver.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_deliver.Tpo -c -o cache/varnishd-cache_esi_deliver.o `test -f 'cache/cache_esi_deliver.c' || echo '$(srcdir)/'`cache/cache_esi_deliver.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_deliver.Tpo cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po
#	$(AM_V_CC)source='cache/cache_esi_deliver.c' object='cache/varnishd-cache_esi_deliver.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_deliver.o `test -f 'cache/cache_esi_deliver.c' || echo '$(srcdir)/'`cache/cache_esi_deliver.c

cache/varnishd-cache_esi_deliver.obj: cache/cache_esi_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_deliver.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_deliver.Tpo -c -o cache/varnishd-cache_esi_deliver.obj `if test -f 'cache/cache_esi_deliver.c'; then $(CYGPATH_W) 'cache/cache_esi_deliver.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_deliver.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_deliver.Tpo cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po
#	$(AM_V_CC)source='cache/cache_esi_deliver.c' object='cache/varnishd-cache_esi_deliver.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_deliver.obj `if test -f 'cache/cache_esi_deliver.c'; then $(CYGPATH_W) 'cache/cache_esi_deliver.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_deliver.c'; fi`

cache/varnishd-cache_esi_fetch.o: cache/cache_esi_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_fetch.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_fetch.Tpo -c -o cache/varnishd-cache_esi_fetch.o `test -f 'cache/cache_esi_fetch.c' || echo '$(srcdir)/'`cache/cache_esi_fetch.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_fetch.Tpo cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po
#	$(AM_V_CC)source='cache/cache_esi_fetch.c' object='cache/varnishd-cache_esi_fetch.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_fetch.o `test -f 'cache/cache_esi_fetch.c' || echo '$(srcdir)/'`cache/cache_esi_fetch.c

cache/varnishd-cache_esi_fetch.obj: cache/cache_esi_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_fetch.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_fetch.Tpo -c -o cache/varnishd-cache_esi_fetch.obj `if test -f 'cache/cache_esi_fetch.c'; then $(CYGPATH_W) 'cache/cache_esi_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_fetch.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_fetch.Tpo cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po
#	$(AM_V_CC)source='cache/cache_esi_fetch.c' object='cache/varnishd-cache_esi_fetch.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_fetch.obj `if test -f 'cache/cache_esi_fetch.c'; then $(CYGPATH_W) 'cache/cache_esi_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_fetch.c'; fi`

cache/varnishd-cache_esi_parse.o: cache/cache_esi_parse.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_parse.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_parse.Tpo -c -o cache/varnishd-cache_esi_parse.o `test -f 'cache/cache_esi_parse.c' || echo '$(srcdir)/'`cache/cache_esi_parse.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_parse.Tpo cache/$(DEPDIR)/varnishd-cache_esi_parse.Po
#	$(AM_V_CC)source='cache/cache_esi_parse.c' object='cache/varnishd-cache_esi_parse.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_parse.o `test -f 'cache/cache_esi_parse.c' || echo '$(srcdir)/'`cache/cache_esi_parse.c

cache/varnishd-cache_esi_parse.obj: cache/cache_esi_parse.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_esi_parse.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_esi_parse.Tpo -c -o cache/varnishd-cache_esi_parse.obj `if test -f 'cache/cache_esi_parse.c'; then $(CYGPATH_W) 'cache/cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_parse.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_esi_parse.Tpo cache/$(DEPDIR)/varnishd-cache_esi_parse.Po
#	$(AM_V_CC)source='cache/cache_esi_parse.c' object='cache/varnishd-cache_esi_parse.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_esi_parse.obj `if test -f 'cache/cache_esi_parse.c'; then $(CYGPATH_W) 'cache/cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_esi_parse.c'; fi`

cache/varnishd-cache_expire.o: cache/cache_expire.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_expire.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_expire.Tpo -c -o cache/varnishd-cache_expire.o `test -f 'cache/cache_expire.c' || echo '$(srcdir)/'`cache/cache_expire.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_expire.Tpo cache/$(DEPDIR)/varnishd-cache_expire.Po
#	$(AM_V_CC)source='cache/cache_expire.c' object='cache/varnishd-cache_expire.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_expire.o `test -f 'cache/cache_expire.c' || echo '$(srcdir)/'`cache/cache_expire.c

cache/varnishd-cache_expire.obj: cache/cache_expire.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_expire.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_expire.Tpo -c -o cache/varnishd-cache_expire.obj `if test -f 'cache/cache_expire.c'; then $(CYGPATH_W) 'cache/cache_expire.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_expire.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_expire.Tpo cache/$(DEPDIR)/varnishd-cache_expire.Po
#	$(AM_V_CC)source='cache/cache_expire.c' object='cache/varnishd-cache_expire.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_expire.obj `if test -f 'cache/cache_expire.c'; then $(CYGPATH_W) 'cache/cache_expire.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_expire.c'; fi`

cache/varnishd-cache_fetch.o: cache/cache_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_fetch.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_fetch.Tpo -c -o cache/varnishd-cache_fetch.o `test -f 'cache/cache_fetch.c' || echo '$(srcdir)/'`cache/cache_fetch.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_fetch.Tpo cache/$(DEPDIR)/varnishd-cache_fetch.Po
#	$(AM_V_CC)source='cache/cache_fetch.c' object='cache/varnishd-cache_fetch.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_fetch.o `test -f 'cache/cache_fetch.c' || echo '$(srcdir)/'`cache/cache_fetch.c

cache/varnishd-cache_fetch.obj: cache/cache_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_fetch.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_fetch.Tpo -c -o cache/varnishd-cache_fetch.obj `if test -f 'cache/cache_fetch.c'; then $(CYGPATH_W) 'cache/cache_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_fetch.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_fetch.Tpo cache/$(DEPDIR)/varnishd-cache_fetch.Po
#	$(AM_V_CC)source='cache/cache_fetch.c' object='cache/varnishd-cache_fetch.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_fetch.obj `if test -f 'cache/cache_fetch.c'; then $(CYGPATH_W) 'cache/cache_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_fetch.c'; fi`

cache/varnishd-cache_fetch_proc.o: cache/cache_fetch_proc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_fetch_proc.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_fetch_proc.Tpo -c -o cache/varnishd-cache_fetch_proc.o `test -f 'cache/cache_fetch_proc.c' || echo '$(srcdir)/'`cache/cache_fetch_proc.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_fetch_proc.Tpo cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po
#	$(AM_V_CC)source='cache/cache_fetch_proc.c' object='cache/varnishd-cache_fetch_proc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_fetch_proc.o `test -f 'cache/cache_fetch_proc.c' || echo '$(srcdir)/'`cache/cache_fetch_proc.c

cache/varnishd-cache_fetch_proc.obj: cache/cache_fetch_proc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_fetch_proc.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_fetch_proc.Tpo -c -o cache/varnishd-cache_fetch_proc.obj `if test -f 'cache/cache_fetch_proc.c'; then $(CYGPATH_W) 'cache/cache_fetch_proc.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_fetch_proc.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_fetch_proc.Tpo cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po
#	$(AM_V_CC)source='cache/cache_fetch_proc.c' object='cache/varnishd-cache_fetch_proc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_fetch_proc.obj `if test -f 'cache/cache_fetch_proc.c'; then $(CYGPATH_W) 'cache/cache_fetch_proc.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_fetch_proc.c'; fi`

cache/varnishd-cache_gzip.o: cache/cache_gzip.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_gzip.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_gzip.Tpo -c -o cache/varnishd-cache_gzip.o `test -f 'cache/cache_gzip.c' || echo '$(srcdir)/'`cache/cache_gzip.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_gzip.Tpo cache/$(DEPDIR)/varnishd-cache_gzip.Po
#	$(AM_V_CC)source='cache/cache_gzip.c' object='cache/varnishd-cache_gzip.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_gzip.o `test -f 'cache/cache_gzip.c' || echo '$(srcdir)/'`cache/cache_gzip.c

cache/varnishd-cache_gzip.obj: cache/cache_gzip.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_gzip.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_gzip.Tpo -c -o cache/varnishd-cache_gzip.obj `if test -f 'cache/cache_gzip.c'; then $(CYGPATH_W) 'cache/cache_gzip.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_gzip.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_gzip.Tpo cache/$(DEPDIR)/varnishd-cache_gzip.Po
#	$(AM_V_CC)source='cache/cache_gzip.c' object='cache/varnishd-cache_gzip.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_gzip.obj `if test -f 'cache/cache_gzip.c'; then $(CYGPATH_W) 'cache/cache_gzip.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_gzip.c'; fi`

cache/varnishd-cache_hash.o: cache/cache_hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_hash.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_hash.Tpo -c -o cache/varnishd-cache_hash.o `test -f 'cache/cache_hash.c' || echo '$(srcdir)/'`cache/cache_hash.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_hash.Tpo cache/$(DEPDIR)/varnishd-cache_hash.Po
#	$(AM_V_CC)source='cache/cache_hash.c' object='cache/varnishd-cache_hash.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_hash.o `test -f 'cache/cache_hash.c' || echo '$(srcdir)/'`cache/cache_hash.c

cache/varnishd-cache_hash.obj: cache/cache_hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_hash.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_hash.Tpo -c -o cache/varnishd-cache_hash.obj `if test -f 'cache/cache_hash.c'; then $(CYGPATH_W) 'cache/cache_hash.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_hash.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_hash.Tpo cache/$(DEPDIR)/varnishd-cache_hash.Po
#	$(AM_V_CC)source='cache/cache_hash.c' object='cache/varnishd-cache_hash.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_hash.obj `if test -f 'cache/cache_hash.c'; then $(CYGPATH_W) 'cache/cache_hash.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_hash.c'; fi`

cache/varnishd-cache_http.o: cache/cache_http.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_http.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_http.Tpo -c -o cache/varnishd-cache_http.o `test -f 'cache/cache_http.c' || echo '$(srcdir)/'`cache/cache_http.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_http.Tpo cache/$(DEPDIR)/varnishd-cache_http.Po
#	$(AM_V_CC)source='cache/cache_http.c' object='cache/varnishd-cache_http.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_http.o `test -f 'cache/cache_http.c' || echo '$(srcdir)/'`cache/cache_http.c

cache/varnishd-cache_http.obj: cache/cache_http.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_http.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_http.Tpo -c -o cache/varnishd-cache_http.obj `if test -f 'cache/cache_http.c'; then $(CYGPATH_W) 'cache/cache_http.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_http.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_http.Tpo cache/$(DEPDIR)/varnishd-cache_http.Po
#	$(AM_V_CC)source='cache/cache_http.c' object='cache/varnishd-cache_http.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_http.obj `if test -f 'cache/cache_http.c'; then $(CYGPATH_W) 'cache/cache_http.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_http.c'; fi`

cache/varnishd-cache_lck.o: cache/cache_lck.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_lck.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_lck.Tpo -c -o cache/varnishd-cache_lck.o `test -f 'cache/cache_lck.c' || echo '$(srcdir)/'`cache/cache_lck.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_lck.Tpo cache/$(DEPDIR)/varnishd-cache_lck.Po
#	$(AM_V_CC)source='cache/cache_lck.c' object='cache/varnishd-cache_lck.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_lck.o `test -f 'cache/cache_lck.c' || echo '$(srcdir)/'`cache/cache_lck.c

cache/varnishd-cache_lck.obj: cache/cache_lck.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_lck.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_lck.Tpo -c -o cache/varnishd-cache_lck.obj `if test -f 'cache/cache_lck.c'; then $(CYGPATH_W) 'cache/cache_lck.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_lck.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_lck.Tpo cache/$(DEPDIR)/varnishd-cache_lck.Po
#	$(AM_V_CC)source='cache/cache_lck.c' object='cache/varnishd-cache_lck.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_lck.obj `if test -f 'cache/cache_lck.c'; then $(CYGPATH_W) 'cache/cache_lck.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_lck.c'; fi`

cache/varnishd-cache_main.o: cache/cache_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_main.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_main.Tpo -c -o cache/varnishd-cache_main.o `test -f 'cache/cache_main.c' || echo '$(srcdir)/'`cache/cache_main.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_main.Tpo cache/$(DEPDIR)/varnishd-cache_main.Po
#	$(AM_V_CC)source='cache/cache_main.c' object='cache/varnishd-cache_main.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_main.o `test -f 'cache/cache_main.c' || echo '$(srcdir)/'`cache/cache_main.c

cache/varnishd-cache_main.obj: cache/cache_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_main.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_main.Tpo -c -o cache/varnishd-cache_main.obj `if test -f 'cache/cache_main.c'; then $(CYGPATH_W) 'cache/cache_main.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_main.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_main.Tpo cache/$(DEPDIR)/varnishd-cache_main.Po
#	$(AM_V_CC)source='cache/cache_main.c' object='cache/varnishd-cache_main.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_main.obj `if test -f 'cache/cache_main.c'; then $(CYGPATH_W) 'cache/cache_main.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_main.c'; fi`

cache/varnishd-cache_mempool.o: cache/cache_mempool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_mempool.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_mempool.Tpo -c -o cache/varnishd-cache_mempool.o `test -f 'cache/cache_mempool.c' || echo '$(srcdir)/'`cache/cache_mempool.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_mempool.Tpo cache/$(DEPDIR)/varnishd-cache_mempool.Po
#	$(AM_V_CC)source='cache/cache_mempool.c' object='cache/varnishd-cache_mempool.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_mempool.o `test -f 'cache/cache_mempool.c' || echo '$(srcdir)/'`cache/cache_mempool.c

cache/varnishd-cache_mempool.obj: cache/cache_mempool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_mempool.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_mempool.Tpo -c -o cache/varnishd-cache_mempool.obj `if test -f 'cache/cache_mempool.c'; then $(CYGPATH_W) 'cache/cache_mempool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_mempool.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_mempool.Tpo cache/$(DEPDIR)/varnishd-cache_mempool.Po
#	$(AM_V_CC)source='cache/cache_mempool.c' object='cache/varnishd-cache_mempool.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_mempool.obj `if test -f 'cache/cache_mempool.c'; then $(CYGPATH_W) 'cache/cache_mempool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_mempool.c'; fi`

cache/varnishd-cache_obj.o: cache/cache_obj.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_obj.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_obj.Tpo -c -o cache/varnishd-cache_obj.o `test -f 'cache/cache_obj.c' || echo '$(srcdir)/'`cache/cache_obj.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_obj.Tpo cache/$(DEPDIR)/varnishd-cache_obj.Po
#	$(AM_V_CC)source='cache/cache_obj.c' object='cache/varnishd-cache_obj.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_obj.o `test -f 'cache/cache_obj.c' || echo '$(srcdir)/'`cache/cache_obj.c

cache/varnishd-cache_obj.obj: cache/cache_obj.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_obj.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_obj.Tpo -c -o cache/varnishd-cache_obj.obj `if test -f 'cache/cache_obj.c'; then $(CYGPATH_W) 'cache/cache_obj.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_obj.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_obj.Tpo cache/$(DEPDIR)/varnishd-cache_obj.Po
#	$(AM_V_CC)source='cache/cache_obj.c' object='cache/varnishd-cache_obj.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_obj.obj `if test -f 'cache/cache_obj.c'; then $(CYGPATH_W) 'cache/cache_obj.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_obj.c'; fi`

cache/varnishd-cache_panic.o: cache/cache_panic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_panic.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_panic.Tpo -c -o cache/varnishd-cache_panic.o `test -f 'cache/cache_panic.c' || echo '$(srcdir)/'`cache/cache_panic.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_panic.Tpo cache/$(DEPDIR)/varnishd-cache_panic.Po
#	$(AM_V_CC)source='cache/cache_panic.c' object='cache/varnishd-cache_panic.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_panic.o `test -f 'cache/cache_panic.c' || echo '$(srcdir)/'`cache/cache_panic.c

cache/varnishd-cache_panic.obj: cache/cache_panic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_panic.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_panic.Tpo -c -o cache/varnishd-cache_panic.obj `if test -f 'cache/cache_panic.c'; then $(CYGPATH_W) 'cache/cache_panic.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_panic.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_panic.Tpo cache/$(DEPDIR)/varnishd-cache_panic.Po
#	$(AM_V_CC)source='cache/cache_panic.c' object='cache/varnishd-cache_panic.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_panic.obj `if test -f 'cache/cache_panic.c'; then $(CYGPATH_W) 'cache/cache_panic.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_panic.c'; fi`

cache/varnishd-cache_pool.o: cache/cache_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_pool.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_pool.Tpo -c -o cache/varnishd-cache_pool.o `test -f 'cache/cache_pool.c' || echo '$(srcdir)/'`cache/cache_pool.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_pool.Tpo cache/$(DEPDIR)/varnishd-cache_pool.Po
#	$(AM_V_CC)source='cache/cache_pool.c' object='cache/varnishd-cache_pool.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_pool.o `test -f 'cache/cache_pool.c' || echo '$(srcdir)/'`cache/cache_pool.c

cache/varnishd-cache_pool.obj: cache/cache_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_pool.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_pool.Tpo -c -o cache/varnishd-cache_pool.obj `if test -f 'cache/cache_pool.c'; then $(CYGPATH_W) 'cache/cache_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_pool.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_pool.Tpo cache/$(DEPDIR)/varnishd-cache_pool.Po
#	$(AM_V_CC)source='cache/cache_pool.c' object='cache/varnishd-cache_pool.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_pool.obj `if test -f 'cache/cache_pool.c'; then $(CYGPATH_W) 'cache/cache_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_pool.c'; fi`

cache/varnishd-cache_range.o: cache/cache_range.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_range.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_range.Tpo -c -o cache/varnishd-cache_range.o `test -f 'cache/cache_range.c' || echo '$(srcdir)/'`cache/cache_range.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_range.Tpo cache/$(DEPDIR)/varnishd-cache_range.Po
#	$(AM_V_CC)source='cache/cache_range.c' object='cache/varnishd-cache_range.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_range.o `test -f 'cache/cache_range.c' || echo '$(srcdir)/'`cache/cache_range.c

cache/varnishd-cache_range.obj: cache/cache_range.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_range.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_range.Tpo -c -o cache/varnishd-cache_range.obj `if test -f 'cache/cache_range.c'; then $(CYGPATH_W) 'cache/cache_range.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_range.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_range.Tpo cache/$(DEPDIR)/varnishd-cache_range.Po
#	$(AM_V_CC)source='cache/cache_range.c' object='cache/varnishd-cache_range.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_range.obj `if test -f 'cache/cache_range.c'; then $(CYGPATH_W) 'cache/cache_range.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_range.c'; fi`

cache/varnishd-cache_req.o: cache/cache_req.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req.Tpo -c -o cache/varnishd-cache_req.o `test -f 'cache/cache_req.c' || echo '$(srcdir)/'`cache/cache_req.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req.Tpo cache/$(DEPDIR)/varnishd-cache_req.Po
#	$(AM_V_CC)source='cache/cache_req.c' object='cache/varnishd-cache_req.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req.o `test -f 'cache/cache_req.c' || echo '$(srcdir)/'`cache/cache_req.c

cache/varnishd-cache_req.obj: cache/cache_req.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req.Tpo -c -o cache/varnishd-cache_req.obj `if test -f 'cache/cache_req.c'; then $(CYGPATH_W) 'cache/cache_req.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req.Tpo cache/$(DEPDIR)/varnishd-cache_req.Po
#	$(AM_V_CC)source='cache/cache_req.c' object='cache/varnishd-cache_req.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req.obj `if test -f 'cache/cache_req.c'; then $(CYGPATH_W) 'cache/cache_req.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req.c'; fi`

cache/varnishd-cache_req_body.o: cache/cache_req_body.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req_body.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req_body.Tpo -c -o cache/varnishd-cache_req_body.o `test -f 'cache/cache_req_body.c' || echo '$(srcdir)/'`cache/cache_req_body.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req_body.Tpo cache/$(DEPDIR)/varnishd-cache_req_body.Po
#	$(AM_V_CC)source='cache/cache_req_body.c' object='cache/varnishd-cache_req_body.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req_body.o `test -f 'cache/cache_req_body.c' || echo '$(srcdir)/'`cache/cache_req_body.c

cache/varnishd-cache_req_body.obj: cache/cache_req_body.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req_body.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req_body.Tpo -c -o cache/varnishd-cache_req_body.obj `if test -f 'cache/cache_req_body.c'; then $(CYGPATH_W) 'cache/cache_req_body.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req_body.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req_body.Tpo cache/$(DEPDIR)/varnishd-cache_req_body.Po
#	$(AM_V_CC)source='cache/cache_req_body.c' object='cache/varnishd-cache_req_body.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req_body.obj `if test -f 'cache/cache_req_body.c'; then $(CYGPATH_W) 'cache/cache_req_body.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req_body.c'; fi`

cache/varnishd-cache_req_fsm.o: cache/cache_req_fsm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req_fsm.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req_fsm.Tpo -c -o cache/varnishd-cache_req_fsm.o `test -f 'cache/cache_req_fsm.c' || echo '$(srcdir)/'`cache/cache_req_fsm.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req_fsm.Tpo cache/$(DEPDIR)/varnishd-cache_req_fsm.Po
#	$(AM_V_CC)source='cache/cache_req_fsm.c' object='cache/varnishd-cache_req_fsm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req_fsm.o `test -f 'cache/cache_req_fsm.c' || echo '$(srcdir)/'`cache/cache_req_fsm.c

cache/varnishd-cache_req_fsm.obj: cache/cache_req_fsm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_req_fsm.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_req_fsm.Tpo -c -o cache/varnishd-cache_req_fsm.obj `if test -f 'cache/cache_req_fsm.c'; then $(CYGPATH_W) 'cache/cache_req_fsm.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req_fsm.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_req_fsm.Tpo cache/$(DEPDIR)/varnishd-cache_req_fsm.Po
#	$(AM_V_CC)source='cache/cache_req_fsm.c' object='cache/varnishd-cache_req_fsm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_req_fsm.obj `if test -f 'cache/cache_req_fsm.c'; then $(CYGPATH_W) 'cache/cache_req_fsm.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_req_fsm.c'; fi`

cache/varnishd-cache_rfc2616.o: cache/cache_rfc2616.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_rfc2616.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_rfc2616.Tpo -c -o cache/varnishd-cache_rfc2616.o `test -f 'cache/cache_rfc2616.c' || echo '$(srcdir)/'`cache/cache_rfc2616.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_rfc2616.Tpo cache/$(DEPDIR)/varnishd-cache_rfc2616.Po
#	$(AM_V_CC)source='cache/cache_rfc2616.c' object='cache/varnishd-cache_rfc2616.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_rfc2616.o `test -f 'cache/cache_rfc2616.c' || echo '$(srcdir)/'`cache/cache_rfc2616.c

cache/varnishd-cache_rfc2616.obj: cache/cache_rfc2616.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_rfc2616.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_rfc2616.Tpo -c -o cache/varnishd-cache_rfc2616.obj `if test -f 'cache/cache_rfc2616.c'; then $(CYGPATH_W) 'cache/cache_rfc2616.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_rfc2616.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_rfc2616.Tpo cache/$(DEPDIR)/varnishd-cache_rfc2616.Po
#	$(AM_V_CC)source='cache/cache_rfc2616.c' object='cache/varnishd-cache_rfc2616.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_rfc2616.obj `if test -f 'cache/cache_rfc2616.c'; then $(CYGPATH_W) 'cache/cache_rfc2616.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_rfc2616.c'; fi`

cache/varnishd-cache_session.o: cache/cache_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_session.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_session.Tpo -c -o cache/varnishd-cache_session.o `test -f 'cache/cache_session.c' || echo '$(srcdir)/'`cache/cache_session.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_session.Tpo cache/$(DEPDIR)/varnishd-cache_session.Po
#	$(AM_V_CC)source='cache/cache_session.c' object='cache/varnishd-cache_session.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_session.o `test -f 'cache/cache_session.c' || echo '$(srcdir)/'`cache/cache_session.c

cache/varnishd-cache_session.obj: cache/cache_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_session.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_session.Tpo -c -o cache/varnishd-cache_session.obj `if test -f 'cache/cache_session.c'; then $(CYGPATH_W) 'cache/cache_session.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_session.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_session.Tpo cache/$(DEPDIR)/varnishd-cache_session.Po
#	$(AM_V_CC)source='cache/cache_session.c' object='cache/varnishd-cache_session.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_session.obj `if test -f 'cache/cache_session.c'; then $(CYGPATH_W) 'cache/cache_session.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_session.c'; fi`

cache/varnishd-cache_shmlog.o: cache/cache_shmlog.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_shmlog.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_shmlog.Tpo -c -o cache/varnishd-cache_shmlog.o `test -f 'cache/cache_shmlog.c' || echo '$(srcdir)/'`cache/cache_shmlog.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_shmlog.Tpo cache/$(DEPDIR)/varnishd-cache_shmlog.Po
#	$(AM_V_CC)source='cache/cache_shmlog.c' object='cache/varnishd-cache_shmlog.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_shmlog.o `test -f 'cache/cache_shmlog.c' || echo '$(srcdir)/'`cache/cache_shmlog.c

cache/varnishd-cache_shmlog.obj: cache/cache_shmlog.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_shmlog.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_shmlog.Tpo -c -o cache/varnishd-cache_shmlog.obj `if test -f 'cache/cache_shmlog.c'; then $(CYGPATH_W) 'cache/cache_shmlog.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_shmlog.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_shmlog.Tpo cache/$(DEPDIR)/varnishd-cache_shmlog.Po
#	$(AM_V_CC)source='cache/cache_shmlog.c' object='cache/varnishd-cache_shmlog.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_shmlog.obj `if test -f 'cache/cache_shmlog.c'; then $(CYGPATH_W) 'cache/cache_shmlog.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_shmlog.c'; fi`

cache/varnishd-cache_tcp_pool.o: cache/cache_tcp_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_tcp_pool.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_tcp_pool.Tpo -c -o cache/varnishd-cache_tcp_pool.o `test -f 'cache/cache_tcp_pool.c' || echo '$(srcdir)/'`cache/cache_tcp_pool.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_tcp_pool.Tpo cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po
#	$(AM_V_CC)source='cache/cache_tcp_pool.c' object='cache/varnishd-cache_tcp_pool.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_tcp_pool.o `test -f 'cache/cache_tcp_pool.c' || echo '$(srcdir)/'`cache/cache_tcp_pool.c

cache/varnishd-cache_tcp_pool.obj: cache/cache_tcp_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_tcp_pool.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_tcp_pool.Tpo -c -o cache/varnishd-cache_tcp_pool.obj `if test -f 'cache/cache_tcp_pool.c'; then $(CYGPATH_W) 'cache/cache_tcp_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_tcp_pool.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_tcp_pool.Tpo cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po
#	$(AM_V_CC)source='cache/cache_tcp_pool.c' object='cache/varnishd-cache_tcp_pool.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_tcp_pool.obj `if test -f 'cache/cache_tcp_pool.c'; then $(CYGPATH_W) 'cache/cache_tcp_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_tcp_pool.c'; fi`

cache/varnishd-cache_vary.o: cache/cache_vary.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vary.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vary.Tpo -c -o cache/varnishd-cache_vary.o `test -f 'cache/cache_vary.c' || echo '$(srcdir)/'`cache/cache_vary.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vary.Tpo cache/$(DEPDIR)/varnishd-cache_vary.Po
#	$(AM_V_CC)source='cache/cache_vary.c' object='cache/varnishd-cache_vary.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vary.o `test -f 'cache/cache_vary.c' || echo '$(srcdir)/'`cache/cache_vary.c

cache/varnishd-cache_vary.obj: cache/cache_vary.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vary.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vary.Tpo -c -o cache/varnishd-cache_vary.obj `if test -f 'cache/cache_vary.c'; then $(CYGPATH_W) 'cache/cache_vary.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vary.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vary.Tpo cache/$(DEPDIR)/varnishd-cache_vary.Po
#	$(AM_V_CC)source='cache/cache_vary.c' object='cache/varnishd-cache_vary.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vary.obj `if test -f 'cache/cache_vary.c'; then $(CYGPATH_W) 'cache/cache_vary.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vary.c'; fi`

cache/varnishd-cache_vcl.o: cache/cache_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vcl.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vcl.Tpo -c -o cache/varnishd-cache_vcl.o `test -f 'cache/cache_vcl.c' || echo '$(srcdir)/'`cache/cache_vcl.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vcl.Tpo cache/$(DEPDIR)/varnishd-cache_vcl.Po
#	$(AM_V_CC)source='cache/cache_vcl.c' object='cache/varnishd-cache_vcl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vcl.o `test -f 'cache/cache_vcl.c' || echo '$(srcdir)/'`cache/cache_vcl.c

cache/varnishd-cache_vcl.obj: cache/cache_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vcl.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vcl.Tpo -c -o cache/varnishd-cache_vcl.obj `if test -f 'cache/cache_vcl.c'; then $(CYGPATH_W) 'cache/cache_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vcl.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vcl.Tpo cache/$(DEPDIR)/varnishd-cache_vcl.Po
#	$(AM_V_CC)source='cache/cache_vcl.c' object='cache/varnishd-cache_vcl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vcl.obj `if test -f 'cache/cache_vcl.c'; then $(CYGPATH_W) 'cache/cache_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vcl.c'; fi`

cache/varnishd-cache_vpi.o: cache/cache_vpi.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vpi.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vpi.Tpo -c -o cache/varnishd-cache_vpi.o `test -f 'cache/cache_vpi.c' || echo '$(srcdir)/'`cache/cache_vpi.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vpi.Tpo cache/$(DEPDIR)/varnishd-cache_vpi.Po
#	$(AM_V_CC)source='cache/cache_vpi.c' object='cache/varnishd-cache_vpi.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vpi.o `test -f 'cache/cache_vpi.c' || echo '$(srcdir)/'`cache/cache_vpi.c

cache/varnishd-cache_vpi.obj: cache/cache_vpi.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vpi.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vpi.Tpo -c -o cache/varnishd-cache_vpi.obj `if test -f 'cache/cache_vpi.c'; then $(CYGPATH_W) 'cache/cache_vpi.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vpi.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vpi.Tpo cache/$(DEPDIR)/varnishd-cache_vpi.Po
#	$(AM_V_CC)source='cache/cache_vpi.c' object='cache/varnishd-cache_vpi.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vpi.obj `if test -f 'cache/cache_vpi.c'; then $(CYGPATH_W) 'cache/cache_vpi.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vpi.c'; fi`

cache/varnishd-cache_vrt.o: cache/cache_vrt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt.Tpo -c -o cache/varnishd-cache_vrt.o `test -f 'cache/cache_vrt.c' || echo '$(srcdir)/'`cache/cache_vrt.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt.Tpo cache/$(DEPDIR)/varnishd-cache_vrt.Po
#	$(AM_V_CC)source='cache/cache_vrt.c' object='cache/varnishd-cache_vrt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt.o `test -f 'cache/cache_vrt.c' || echo '$(srcdir)/'`cache/cache_vrt.c

cache/varnishd-cache_vrt.obj: cache/cache_vrt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt.Tpo -c -o cache/varnishd-cache_vrt.obj `if test -f 'cache/cache_vrt.c'; then $(CYGPATH_W) 'cache/cache_vrt.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt.Tpo cache/$(DEPDIR)/varnishd-cache_vrt.Po
#	$(AM_V_CC)source='cache/cache_vrt.c' object='cache/varnishd-cache_vrt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt.obj `if test -f 'cache/cache_vrt.c'; then $(CYGPATH_W) 'cache/cache_vrt.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt.c'; fi`

cache/varnishd-cache_vrt_filter.o: cache/cache_vrt_filter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_filter.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_filter.Tpo -c -o cache/varnishd-cache_vrt_filter.o `test -f 'cache/cache_vrt_filter.c' || echo '$(srcdir)/'`cache/cache_vrt_filter.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_filter.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po
#	$(AM_V_CC)source='cache/cache_vrt_filter.c' object='cache/varnishd-cache_vrt_filter.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_filter.o `test -f 'cache/cache_vrt_filter.c' || echo '$(srcdir)/'`cache/cache_vrt_filter.c

cache/varnishd-cache_vrt_filter.obj: cache/cache_vrt_filter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_filter.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_filter.Tpo -c -o cache/varnishd-cache_vrt_filter.obj `if test -f 'cache/cache_vrt_filter.c'; then $(CYGPATH_W) 'cache/cache_vrt_filter.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_filter.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_filter.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po
#	$(AM_V_CC)source='cache/cache_vrt_filter.c' object='cache/varnishd-cache_vrt_filter.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_filter.obj `if test -f 'cache/cache_vrt_filter.c'; then $(CYGPATH_W) 'cache/cache_vrt_filter.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_filter.c'; fi`

cache/varnishd-cache_vrt_priv.o: cache/cache_vrt_priv.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_priv.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_priv.Tpo -c -o cache/varnishd-cache_vrt_priv.o `test -f 'cache/cache_vrt_priv.c' || echo '$(srcdir)/'`cache/cache_vrt_priv.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_priv.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po
#	$(AM_V_CC)source='cache/cache_vrt_priv.c' object='cache/varnishd-cache_vrt_priv.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_priv.o `test -f 'cache/cache_vrt_priv.c' || echo '$(srcdir)/'`cache/cache_vrt_priv.c

cache/varnishd-cache_vrt_priv.obj: cache/cache_vrt_priv.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_priv.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_priv.Tpo -c -o cache/varnishd-cache_vrt_priv.obj `if test -f 'cache/cache_vrt_priv.c'; then $(CYGPATH_W) 'cache/cache_vrt_priv.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_priv.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_priv.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po
#	$(AM_V_CC)source='cache/cache_vrt_priv.c' object='cache/varnishd-cache_vrt_priv.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_priv.obj `if test -f 'cache/cache_vrt_priv.c'; then $(CYGPATH_W) 'cache/cache_vrt_priv.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_priv.c'; fi`

cache/varnishd-cache_vrt_re.o: cache/cache_vrt_re.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_re.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_re.Tpo -c -o cache/varnishd-cache_vrt_re.o `test -f 'cache/cache_vrt_re.c' || echo '$(srcdir)/'`cache/cache_vrt_re.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_re.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_re.Po
#	$(AM_V_CC)source='cache/cache_vrt_re.c' object='cache/varnishd-cache_vrt_re.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_re.o `test -f 'cache/cache_vrt_re.c' || echo '$(srcdir)/'`cache/cache_vrt_re.c

cache/varnishd-cache_vrt_re.obj: cache/cache_vrt_re.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_re.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_re.Tpo -c -o cache/varnishd-cache_vrt_re.obj `if test -f 'cache/cache_vrt_re.c'; then $(CYGPATH_W) 'cache/cache_vrt_re.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_re.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_re.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_re.Po
#	$(AM_V_CC)source='cache/cache_vrt_re.c' object='cache/varnishd-cache_vrt_re.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_re.obj `if test -f 'cache/cache_vrt_re.c'; then $(CYGPATH_W) 'cache/cache_vrt_re.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_re.c'; fi`

cache/varnishd-cache_vrt_var.o: cache/cache_vrt_var.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_var.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_var.Tpo -c -o cache/varnishd-cache_vrt_var.o `test -f 'cache/cache_vrt_var.c' || echo '$(srcdir)/'`cache/cache_vrt_var.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_var.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_var.Po
#	$(AM_V_CC)source='cache/cache_vrt_var.c' object='cache/varnishd-cache_vrt_var.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_var.o `test -f 'cache/cache_vrt_var.c' || echo '$(srcdir)/'`cache/cache_vrt_var.c

cache/varnishd-cache_vrt_var.obj: cache/cache_vrt_var.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_var.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_var.Tpo -c -o cache/varnishd-cache_vrt_var.obj `if test -f 'cache/cache_vrt_var.c'; then $(CYGPATH_W) 'cache/cache_vrt_var.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_var.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_var.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_var.Po
#	$(AM_V_CC)source='cache/cache_vrt_var.c' object='cache/varnishd-cache_vrt_var.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_var.obj `if test -f 'cache/cache_vrt_var.c'; then $(CYGPATH_W) 'cache/cache_vrt_var.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_var.c'; fi`

cache/varnishd-cache_vrt_vcl.o: cache/cache_vrt_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_vcl.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Tpo -c -o cache/varnishd-cache_vrt_vcl.o `test -f 'cache/cache_vrt_vcl.c' || echo '$(srcdir)/'`cache/cache_vrt_vcl.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po
#	$(AM_V_CC)source='cache/cache_vrt_vcl.c' object='cache/varnishd-cache_vrt_vcl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_vcl.o `test -f 'cache/cache_vrt_vcl.c' || echo '$(srcdir)/'`cache/cache_vrt_vcl.c

cache/varnishd-cache_vrt_vcl.obj: cache/cache_vrt_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_vcl.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Tpo -c -o cache/varnishd-cache_vrt_vcl.obj `if test -f 'cache/cache_vrt_vcl.c'; then $(CYGPATH_W) 'cache/cache_vrt_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_vcl.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po
#	$(AM_V_CC)source='cache/cache_vrt_vcl.c' object='cache/varnishd-cache_vrt_vcl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_vcl.obj `if test -f 'cache/cache_vrt_vcl.c'; then $(CYGPATH_W) 'cache/cache_vrt_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_vcl.c'; fi`

cache/varnishd-cache_vrt_vmod.o: cache/cache_vrt_vmod.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_vmod.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Tpo -c -o cache/varnishd-cache_vrt_vmod.o `test -f 'cache/cache_vrt_vmod.c' || echo '$(srcdir)/'`cache/cache_vrt_vmod.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po
#	$(AM_V_CC)source='cache/cache_vrt_vmod.c' object='cache/varnishd-cache_vrt_vmod.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_vmod.o `test -f 'cache/cache_vrt_vmod.c' || echo '$(srcdir)/'`cache/cache_vrt_vmod.c

cache/varnishd-cache_vrt_vmod.obj: cache/cache_vrt_vmod.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_vrt_vmod.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Tpo -c -o cache/varnishd-cache_vrt_vmod.obj `if test -f 'cache/cache_vrt_vmod.c'; then $(CYGPATH_W) 'cache/cache_vrt_vmod.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_vmod.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Tpo cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po
#	$(AM_V_CC)source='cache/cache_vrt_vmod.c' object='cache/varnishd-cache_vrt_vmod.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_vrt_vmod.obj `if test -f 'cache/cache_vrt_vmod.c'; then $(CYGPATH_W) 'cache/cache_vrt_vmod.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_vrt_vmod.c'; fi`

cache/varnishd-cache_wrk.o: cache/cache_wrk.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_wrk.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_wrk.Tpo -c -o cache/varnishd-cache_wrk.o `test -f 'cache/cache_wrk.c' || echo '$(srcdir)/'`cache/cache_wrk.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_wrk.Tpo cache/$(DEPDIR)/varnishd-cache_wrk.Po
#	$(AM_V_CC)source='cache/cache_wrk.c' object='cache/varnishd-cache_wrk.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_wrk.o `test -f 'cache/cache_wrk.c' || echo '$(srcdir)/'`cache/cache_wrk.c

cache/varnishd-cache_wrk.obj: cache/cache_wrk.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_wrk.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_wrk.Tpo -c -o cache/varnishd-cache_wrk.obj `if test -f 'cache/cache_wrk.c'; then $(CYGPATH_W) 'cache/cache_wrk.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_wrk.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_wrk.Tpo cache/$(DEPDIR)/varnishd-cache_wrk.Po
#	$(AM_V_CC)source='cache/cache_wrk.c' object='cache/varnishd-cache_wrk.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_wrk.obj `if test -f 'cache/cache_wrk.c'; then $(CYGPATH_W) 'cache/cache_wrk.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_wrk.c'; fi`

cache/varnishd-cache_ws.o: cache/cache_ws.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ws.o -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ws.Tpo -c -o cache/varnishd-cache_ws.o `test -f 'cache/cache_ws.c' || echo '$(srcdir)/'`cache/cache_ws.c
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ws.Tpo cache/$(DEPDIR)/varnishd-cache_ws.Po
#	$(AM_V_CC)source='cache/cache_ws.c' object='cache/varnishd-cache_ws.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ws.o `test -f 'cache/cache_ws.c' || echo '$(srcdir)/'`cache/cache_ws.c

cache/varnishd-cache_ws.obj: cache/cache_ws.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT cache/varnishd-cache_ws.obj -MD -MP -MF cache/$(DEPDIR)/varnishd-cache_ws.Tpo -c -o cache/varnishd-cache_ws.obj `if test -f 'cache/cache_ws.c'; then $(CYGPATH_W) 'cache/cache_ws.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ws.c'; fi`
#	$(AM_V_at)$(am__mv) cache/$(DEPDIR)/varnishd-cache_ws.Tpo cache/$(DEPDIR)/varnishd-cache_ws.Po
#	$(AM_V_CC)source='cache/cache_ws.c' object='cache/varnishd-cache_ws.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o cache/varnishd-cache_ws.obj `if test -f 'cache/cache_ws.c'; then $(CYGPATH_W) 'cache/cache_ws.c'; else $(CYGPATH_W) '$(srcdir)/cache/cache_ws.c'; fi`

common/varnishd-common_vsc.o: common/common_vsc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT common/varnishd-common_vsc.o -MD -MP -MF common/$(DEPDIR)/varnishd-common_vsc.Tpo -c -o common/varnishd-common_vsc.o `test -f 'common/common_vsc.c' || echo '$(srcdir)/'`common/common_vsc.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/varnishd-common_vsc.Tpo common/$(DEPDIR)/varnishd-common_vsc.Po
#	$(AM_V_CC)source='common/common_vsc.c' object='common/varnishd-common_vsc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o common/varnishd-common_vsc.o `test -f 'common/common_vsc.c' || echo '$(srcdir)/'`common/common_vsc.c

common/varnishd-common_vsc.obj: common/common_vsc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT common/varnishd-common_vsc.obj -MD -MP -MF common/$(DEPDIR)/varnishd-common_vsc.Tpo -c -o common/varnishd-common_vsc.obj `if test -f 'common/common_vsc.c'; then $(CYGPATH_W) 'common/common_vsc.c'; else $(CYGPATH_W) '$(srcdir)/common/common_vsc.c'; fi`
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/varnishd-common_vsc.Tpo common/$(DEPDIR)/varnishd-common_vsc.Po
#	$(AM_V_CC)source='common/common_vsc.c' object='common/varnishd-common_vsc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o common/varnishd-common_vsc.obj `if test -f 'common/common_vsc.c'; then $(CYGPATH_W) 'common/common_vsc.c'; else $(CYGPATH_W) '$(srcdir)/common/common_vsc.c'; fi`

common/varnishd-common_vsmw.o: common/common_vsmw.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT common/varnishd-common_vsmw.o -MD -MP -MF common/$(DEPDIR)/varnishd-common_vsmw.Tpo -c -o common/varnishd-common_vsmw.o `test -f 'common/common_vsmw.c' || echo '$(srcdir)/'`common/common_vsmw.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/varnishd-common_vsmw.Tpo common/$(DEPDIR)/varnishd-common_vsmw.Po
#	$(AM_V_CC)source='common/common_vsmw.c' object='common/varnishd-common_vsmw.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o common/varnishd-common_vsmw.o `test -f 'common/common_vsmw.c' || echo '$(srcdir)/'`common/common_vsmw.c

common/varnishd-common_vsmw.obj: common/common_vsmw.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT common/varnishd-common_vsmw.obj -MD -MP -MF common/$(DEPDIR)/varnishd-common_vsmw.Tpo -c -o common/varnishd-common_vsmw.obj `if test -f 'common/common_vsmw.c'; then $(CYGPATH_W) 'common/common_vsmw.c'; else $(CYGPATH_W) '$(srcdir)/common/common_vsmw.c'; fi`
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/varnishd-common_vsmw.Tpo common/$(DEPDIR)/varnishd-common_vsmw.Po
#	$(AM_V_CC)source='common/common_vsmw.c' object='common/varnishd-common_vsmw.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o common/varnishd-common_vsmw.obj `if test -f 'common/common_vsmw.c'; then $(CYGPATH_W) 'common/common_vsmw.c'; else $(CYGPATH_W) '$(srcdir)/common/common_vsmw.c'; fi`

hash/varnishd-hash_classic.o: hash/hash_classic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_classic.o -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_classic.Tpo -c -o hash/varnishd-hash_classic.o `test -f 'hash/hash_classic.c' || echo '$(srcdir)/'`hash/hash_classic.c
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_classic.Tpo hash/$(DEPDIR)/varnishd-hash_classic.Po
#	$(AM_V_CC)source='hash/hash_classic.c' object='hash/varnishd-hash_classic.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_classic.o `test -f 'hash/hash_classic.c' || echo '$(srcdir)/'`hash/hash_classic.c

hash/varnishd-hash_classic.obj: hash/hash_classic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_classic.obj -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_classic.Tpo -c -o hash/varnishd-hash_classic.obj `if test -f 'hash/hash_classic.c'; then $(CYGPATH_W) 'hash/hash_classic.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_classic.c'; fi`
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_classic.Tpo hash/$(DEPDIR)/varnishd-hash_classic.Po
#	$(AM_V_CC)source='hash/hash_classic.c' object='hash/varnishd-hash_classic.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_classic.obj `if test -f 'hash/hash_classic.c'; then $(CYGPATH_W) 'hash/hash_classic.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_classic.c'; fi`

hash/varnishd-hash_critbit.o: hash/hash_critbit.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_critbit.o -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_critbit.Tpo -c -o hash/varnishd-hash_critbit.o `test -f 'hash/hash_critbit.c' || echo '$(srcdir)/'`hash/hash_critbit.c
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_critbit.Tpo hash/$(DEPDIR)/varnishd-hash_critbit.Po
#	$(AM_V_CC)source='hash/hash_critbit.c' object='hash/varnishd-hash_critbit.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_critbit.o `test -f 'hash/hash_critbit.c' || echo '$(srcdir)/'`hash/hash_critbit.c

hash/varnishd-hash_critbit.obj: hash/hash_critbit.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_critbit.obj -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_critbit.Tpo -c -o hash/varnishd-hash_critbit.obj `if test -f 'hash/hash_critbit.c'; then $(CYGPATH_W) 'hash/hash_critbit.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_critbit.c'; fi`
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_critbit.Tpo hash/$(DEPDIR)/varnishd-hash_critbit.Po
#	$(AM_V_CC)source='hash/hash_critbit.c' object='hash/varnishd-hash_critbit.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_critbit.obj `if test -f 'hash/hash_critbit.c'; then $(CYGPATH_W) 'hash/hash_critbit.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_critbit.c'; fi`

hash/varnishd-hash_simple_list.o: hash/hash_simple_list.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_simple_list.o -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_simple_list.Tpo -c -o hash/varnishd-hash_simple_list.o `test -f 'hash/hash_simple_list.c' || echo '$(srcdir)/'`hash/hash_simple_list.c
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_simple_list.Tpo hash/$(DEPDIR)/varnishd-hash_simple_list.Po
#	$(AM_V_CC)source='hash/hash_simple_list.c' object='hash/varnishd-hash_simple_list.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_simple_list.o `test -f 'hash/hash_simple_list.c' || echo '$(srcdir)/'`hash/hash_simple_list.c

hash/varnishd-hash_simple_list.obj: hash/hash_simple_list.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-hash_simple_list.obj -MD -MP -MF hash/$(DEPDIR)/varnishd-hash_simple_list.Tpo -c -o hash/varnishd-hash_simple_list.obj `if test -f 'hash/hash_simple_list.c'; then $(CYGPATH_W) 'hash/hash_simple_list.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_simple_list.c'; fi`
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-hash_simple_list.Tpo hash/$(DEPDIR)/varnishd-hash_simple_list.Po
#	$(AM_V_CC)source='hash/hash_simple_list.c' object='hash/varnishd-hash_simple_list.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-hash_simple_list.obj `if test -f 'hash/hash_simple_list.c'; then $(CYGPATH_W) 'hash/hash_simple_list.c'; else $(CYGPATH_W) '$(srcdir)/hash/hash_simple_list.c'; fi`

hash/varnishd-mgt_hash.o: hash/mgt_hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-mgt_hash.o -MD -MP -MF hash/$(DEPDIR)/varnishd-mgt_hash.Tpo -c -o hash/varnishd-mgt_hash.o `test -f 'hash/mgt_hash.c' || echo '$(srcdir)/'`hash/mgt_hash.c
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-mgt_hash.Tpo hash/$(DEPDIR)/varnishd-mgt_hash.Po
#	$(AM_V_CC)source='hash/mgt_hash.c' object='hash/varnishd-mgt_hash.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-mgt_hash.o `test -f 'hash/mgt_hash.c' || echo '$(srcdir)/'`hash/mgt_hash.c

hash/varnishd-mgt_hash.obj: hash/mgt_hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hash/varnishd-mgt_hash.obj -MD -MP -MF hash/$(DEPDIR)/varnishd-mgt_hash.Tpo -c -o hash/varnishd-mgt_hash.obj `if test -f 'hash/mgt_hash.c'; then $(CYGPATH_W) 'hash/mgt_hash.c'; else $(CYGPATH_W) '$(srcdir)/hash/mgt_hash.c'; fi`
#	$(AM_V_at)$(am__mv) hash/$(DEPDIR)/varnishd-mgt_hash.Tpo hash/$(DEPDIR)/varnishd-mgt_hash.Po
#	$(AM_V_CC)source='hash/mgt_hash.c' object='hash/varnishd-mgt_hash.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hash/varnishd-mgt_hash.obj `if test -f 'hash/mgt_hash.c'; then $(CYGPATH_W) 'hash/mgt_hash.c'; else $(CYGPATH_W) '$(srcdir)/hash/mgt_hash.c'; fi`

hpack/varnishd-vhp_decode.o: hpack/vhp_decode.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hpack/varnishd-vhp_decode.o -MD -MP -MF hpack/$(DEPDIR)/varnishd-vhp_decode.Tpo -c -o hpack/varnishd-vhp_decode.o `test -f 'hpack/vhp_decode.c' || echo '$(srcdir)/'`hpack/vhp_decode.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/varnishd-vhp_decode.Tpo hpack/$(DEPDIR)/varnishd-vhp_decode.Po
#	$(AM_V_CC)source='hpack/vhp_decode.c' object='hpack/varnishd-vhp_decode.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hpack/varnishd-vhp_decode.o `test -f 'hpack/vhp_decode.c' || echo '$(srcdir)/'`hpack/vhp_decode.c

hpack/varnishd-vhp_decode.obj: hpack/vhp_decode.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hpack/varnishd-vhp_decode.obj -MD -MP -MF hpack/$(DEPDIR)/varnishd-vhp_decode.Tpo -c -o hpack/varnishd-vhp_decode.obj `if test -f 'hpack/vhp_decode.c'; then $(CYGPATH_W) 'hpack/vhp_decode.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_decode.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/varnishd-vhp_decode.Tpo hpack/$(DEPDIR)/varnishd-vhp_decode.Po
#	$(AM_V_CC)source='hpack/vhp_decode.c' object='hpack/varnishd-vhp_decode.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hpack/varnishd-vhp_decode.obj `if test -f 'hpack/vhp_decode.c'; then $(CYGPATH_W) 'hpack/vhp_decode.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_decode.c'; fi`

hpack/varnishd-vhp_table.o: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hpack/varnishd-vhp_table.o -MD -MP -MF hpack/$(DEPDIR)/varnishd-vhp_table.Tpo -c -o hpack/varnishd-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/varnishd-vhp_table.Tpo hpack/$(DEPDIR)/varnishd-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/varnishd-vhp_table.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hpack/varnishd-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c

hpack/varnishd-vhp_table.obj: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT hpack/varnishd-vhp_table.obj -MD -MP -MF hpack/$(DEPDIR)/varnishd-vhp_table.Tpo -c -o hpack/varnishd-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/varnishd-vhp_table.Tpo hpack/$(DEPDIR)/varnishd-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/varnishd-vhp_table.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o hpack/varnishd-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`

http1/varnishd-cache_http1_deliver.o: http1/cache_http1_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_deliver.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_deliver.Tpo -c -o http1/varnishd-cache_http1_deliver.o `test -f 'http1/cache_http1_deliver.c' || echo '$(srcdir)/'`http1/cache_http1_deliver.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_deliver.Tpo http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po
#	$(AM_V_CC)source='http1/cache_http1_deliver.c' object='http1/varnishd-cache_http1_deliver.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_deliver.o `test -f 'http1/cache_http1_deliver.c' || echo '$(srcdir)/'`http1/cache_http1_deliver.c

http1/varnishd-cache_http1_deliver.obj: http1/cache_http1_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_deliver.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_deliver.Tpo -c -o http1/varnishd-cache_http1_deliver.obj `if test -f 'http1/cache_http1_deliver.c'; then $(CYGPATH_W) 'http1/cache_http1_deliver.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_deliver.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_deliver.Tpo http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po
#	$(AM_V_CC)source='http1/cache_http1_deliver.c' object='http1/varnishd-cache_http1_deliver.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_deliver.obj `if test -f 'http1/cache_http1_deliver.c'; then $(CYGPATH_W) 'http1/cache_http1_deliver.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_deliver.c'; fi`

http1/varnishd-cache_http1_fetch.o: http1/cache_http1_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_fetch.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_fetch.Tpo -c -o http1/varnishd-cache_http1_fetch.o `test -f 'http1/cache_http1_fetch.c' || echo '$(srcdir)/'`http1/cache_http1_fetch.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_fetch.Tpo http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po
#	$(AM_V_CC)source='http1/cache_http1_fetch.c' object='http1/varnishd-cache_http1_fetch.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_fetch.o `test -f 'http1/cache_http1_fetch.c' || echo '$(srcdir)/'`http1/cache_http1_fetch.c

http1/varnishd-cache_http1_fetch.obj: http1/cache_http1_fetch.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_fetch.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_fetch.Tpo -c -o http1/varnishd-cache_http1_fetch.obj `if test -f 'http1/cache_http1_fetch.c'; then $(CYGPATH_W) 'http1/cache_http1_fetch.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_fetch.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_fetch.Tpo http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po
#	$(AM_V_CC)source='http1/cache_http1_fetch.c' object='http1/varnishd-cache_http1_fetch.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_fetch.obj `if test -f 'http1/cache_http1_fetch.c'; then $(CYGPATH_W) 'http1/cache_http1_fetch.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_fetch.c'; fi`

http1/varnishd-cache_http1_fsm.o: http1/cache_http1_fsm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_fsm.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_fsm.Tpo -c -o http1/varnishd-cache_http1_fsm.o `test -f 'http1/cache_http1_fsm.c' || echo '$(srcdir)/'`http1/cache_http1_fsm.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_fsm.Tpo http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po
#	$(AM_V_CC)source='http1/cache_http1_fsm.c' object='http1/varnishd-cache_http1_fsm.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_fsm.o `test -f 'http1/cache_http1_fsm.c' || echo '$(srcdir)/'`http1/cache_http1_fsm.c

http1/varnishd-cache_http1_fsm.obj: http1/cache_http1_fsm.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_fsm.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_fsm.Tpo -c -o http1/varnishd-cache_http1_fsm.obj `if test -f 'http1/cache_http1_fsm.c'; then $(CYGPATH_W) 'http1/cache_http1_fsm.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_fsm.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_fsm.Tpo http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po
#	$(AM_V_CC)source='http1/cache_http1_fsm.c' object='http1/varnishd-cache_http1_fsm.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_fsm.obj `if test -f 'http1/cache_http1_fsm.c'; then $(CYGPATH_W) 'http1/cache_http1_fsm.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_fsm.c'; fi`

http1/varnishd-cache_http1_line.o: http1/cache_http1_line.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_line.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_line.Tpo -c -o http1/varnishd-cache_http1_line.o `test -f 'http1/cache_http1_line.c' || echo '$(srcdir)/'`http1/cache_http1_line.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_line.Tpo http1/$(DEPDIR)/varnishd-cache_http1_line.Po
#	$(AM_V_CC)source='http1/cache_http1_line.c' object='http1/varnishd-cache_http1_line.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_line.o `test -f 'http1/cache_http1_line.c' || echo '$(srcdir)/'`http1/cache_http1_line.c

http1/varnishd-cache_http1_line.obj: http1/cache_http1_line.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_line.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_line.Tpo -c -o http1/varnishd-cache_http1_line.obj `if test -f 'http1/cache_http1_line.c'; then $(CYGPATH_W) 'http1/cache_http1_line.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_line.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_line.Tpo http1/$(DEPDIR)/varnishd-cache_http1_line.Po
#	$(AM_V_CC)source='http1/cache_http1_line.c' object='http1/varnishd-cache_http1_line.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_line.obj `if test -f 'http1/cache_http1_line.c'; then $(CYGPATH_W) 'http1/cache_http1_line.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_line.c'; fi`

http1/varnishd-cache_http1_pipe.o: http1/cache_http1_pipe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_pipe.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_pipe.Tpo -c -o http1/varnishd-cache_http1_pipe.o `test -f 'http1/cache_http1_pipe.c' || echo '$(srcdir)/'`http1/cache_http1_pipe.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_pipe.Tpo http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po
#	$(AM_V_CC)source='http1/cache_http1_pipe.c' object='http1/varnishd-cache_http1_pipe.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_pipe.o `test -f 'http1/cache_http1_pipe.c' || echo '$(srcdir)/'`http1/cache_http1_pipe.c

http1/varnishd-cache_http1_pipe.obj: http1/cache_http1_pipe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_pipe.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_pipe.Tpo -c -o http1/varnishd-cache_http1_pipe.obj `if test -f 'http1/cache_http1_pipe.c'; then $(CYGPATH_W) 'http1/cache_http1_pipe.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_pipe.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_pipe.Tpo http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po
#	$(AM_V_CC)source='http1/cache_http1_pipe.c' object='http1/varnishd-cache_http1_pipe.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_pipe.obj `if test -f 'http1/cache_http1_pipe.c'; then $(CYGPATH_W) 'http1/cache_http1_pipe.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_pipe.c'; fi`

http1/varnishd-cache_http1_proto.o: http1/cache_http1_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_proto.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_proto.Tpo -c -o http1/varnishd-cache_http1_proto.o `test -f 'http1/cache_http1_proto.c' || echo '$(srcdir)/'`http1/cache_http1_proto.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_proto.Tpo http1/$(DEPDIR)/varnishd-cache_http1_proto.Po
#	$(AM_V_CC)source='http1/cache_http1_proto.c' object='http1/varnishd-cache_http1_proto.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_proto.o `test -f 'http1/cache_http1_proto.c' || echo '$(srcdir)/'`http1/cache_http1_proto.c

http1/varnishd-cache_http1_proto.obj: http1/cache_http1_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_proto.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_proto.Tpo -c -o http1/varnishd-cache_http1_proto.obj `if test -f 'http1/cache_http1_proto.c'; then $(CYGPATH_W) 'http1/cache_http1_proto.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_proto.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_proto.Tpo http1/$(DEPDIR)/varnishd-cache_http1_proto.Po
#	$(AM_V_CC)source='http1/cache_http1_proto.c' object='http1/varnishd-cache_http1_proto.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_proto.obj `if test -f 'http1/cache_http1_proto.c'; then $(CYGPATH_W) 'http1/cache_http1_proto.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_proto.c'; fi`

http1/varnishd-cache_http1_vfp.o: http1/cache_http1_vfp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_vfp.o -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_vfp.Tpo -c -o http1/varnishd-cache_http1_vfp.o `test -f 'http1/cache_http1_vfp.c' || echo '$(srcdir)/'`http1/cache_http1_vfp.c
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_vfp.Tpo http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po
#	$(AM_V_CC)source='http1/cache_http1_vfp.c' object='http1/varnishd-cache_http1_vfp.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_vfp.o `test -f 'http1/cache_http1_vfp.c' || echo '$(srcdir)/'`http1/cache_http1_vfp.c

http1/varnishd-cache_http1_vfp.obj: http1/cache_http1_vfp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http1/varnishd-cache_http1_vfp.obj -MD -MP -MF http1/$(DEPDIR)/varnishd-cache_http1_vfp.Tpo -c -o http1/varnishd-cache_http1_vfp.obj `if test -f 'http1/cache_http1_vfp.c'; then $(CYGPATH_W) 'http1/cache_http1_vfp.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_vfp.c'; fi`
#	$(AM_V_at)$(am__mv) http1/$(DEPDIR)/varnishd-cache_http1_vfp.Tpo http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po
#	$(AM_V_CC)source='http1/cache_http1_vfp.c' object='http1/varnishd-cache_http1_vfp.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http1/varnishd-cache_http1_vfp.obj `if test -f 'http1/cache_http1_vfp.c'; then $(CYGPATH_W) 'http1/cache_http1_vfp.c'; else $(CYGPATH_W) '$(srcdir)/http1/cache_http1_vfp.c'; fi`

http2/varnishd-cache_http2_deliver.o: http2/cache_http2_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_deliver.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_deliver.Tpo -c -o http2/varnishd-cache_http2_deliver.o `test -f 'http2/cache_http2_deliver.c' || echo '$(srcdir)/'`http2/cache_http2_deliver.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_deliver.Tpo http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po
#	$(AM_V_CC)source='http2/cache_http2_deliver.c' object='http2/varnishd-cache_http2_deliver.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_deliver.o `test -f 'http2/cache_http2_deliver.c' || echo '$(srcdir)/'`http2/cache_http2_deliver.c

http2/varnishd-cache_http2_deliver.obj: http2/cache_http2_deliver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_deliver.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_deliver.Tpo -c -o http2/varnishd-cache_http2_deliver.obj `if test -f 'http2/cache_http2_deliver.c'; then $(CYGPATH_W) 'http2/cache_http2_deliver.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_deliver.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_deliver.Tpo http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po
#	$(AM_V_CC)source='http2/cache_http2_deliver.c' object='http2/varnishd-cache_http2_deliver.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_deliver.obj `if test -f 'http2/cache_http2_deliver.c'; then $(CYGPATH_W) 'http2/cache_http2_deliver.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_deliver.c'; fi`

http2/varnishd-cache_http2_hpack.o: http2/cache_http2_hpack.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_hpack.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_hpack.Tpo -c -o http2/varnishd-cache_http2_hpack.o `test -f 'http2/cache_http2_hpack.c' || echo '$(srcdir)/'`http2/cache_http2_hpack.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_hpack.Tpo http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po
#	$(AM_V_CC)source='http2/cache_http2_hpack.c' object='http2/varnishd-cache_http2_hpack.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_hpack.o `test -f 'http2/cache_http2_hpack.c' || echo '$(srcdir)/'`http2/cache_http2_hpack.c

http2/varnishd-cache_http2_hpack.obj: http2/cache_http2_hpack.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_hpack.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_hpack.Tpo -c -o http2/varnishd-cache_http2_hpack.obj `if test -f 'http2/cache_http2_hpack.c'; then $(CYGPATH_W) 'http2/cache_http2_hpack.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_hpack.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_hpack.Tpo http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po
#	$(AM_V_CC)source='http2/cache_http2_hpack.c' object='http2/varnishd-cache_http2_hpack.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_hpack.obj `if test -f 'http2/cache_http2_hpack.c'; then $(CYGPATH_W) 'http2/cache_http2_hpack.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_hpack.c'; fi`

http2/varnishd-cache_http2_panic.o: http2/cache_http2_panic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_panic.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_panic.Tpo -c -o http2/varnishd-cache_http2_panic.o `test -f 'http2/cache_http2_panic.c' || echo '$(srcdir)/'`http2/cache_http2_panic.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_panic.Tpo http2/$(DEPDIR)/varnishd-cache_http2_panic.Po
#	$(AM_V_CC)source='http2/cache_http2_panic.c' object='http2/varnishd-cache_http2_panic.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_panic.o `test -f 'http2/cache_http2_panic.c' || echo '$(srcdir)/'`http2/cache_http2_panic.c

http2/varnishd-cache_http2_panic.obj: http2/cache_http2_panic.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_panic.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_panic.Tpo -c -o http2/varnishd-cache_http2_panic.obj `if test -f 'http2/cache_http2_panic.c'; then $(CYGPATH_W) 'http2/cache_http2_panic.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_panic.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_panic.Tpo http2/$(DEPDIR)/varnishd-cache_http2_panic.Po
#	$(AM_V_CC)source='http2/cache_http2_panic.c' object='http2/varnishd-cache_http2_panic.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_panic.obj `if test -f 'http2/cache_http2_panic.c'; then $(CYGPATH_W) 'http2/cache_http2_panic.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_panic.c'; fi`

http2/varnishd-cache_http2_proto.o: http2/cache_http2_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_proto.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_proto.Tpo -c -o http2/varnishd-cache_http2_proto.o `test -f 'http2/cache_http2_proto.c' || echo '$(srcdir)/'`http2/cache_http2_proto.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_proto.Tpo http2/$(DEPDIR)/varnishd-cache_http2_proto.Po
#	$(AM_V_CC)source='http2/cache_http2_proto.c' object='http2/varnishd-cache_http2_proto.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_proto.o `test -f 'http2/cache_http2_proto.c' || echo '$(srcdir)/'`http2/cache_http2_proto.c

http2/varnishd-cache_http2_proto.obj: http2/cache_http2_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_proto.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_proto.Tpo -c -o http2/varnishd-cache_http2_proto.obj `if test -f 'http2/cache_http2_proto.c'; then $(CYGPATH_W) 'http2/cache_http2_proto.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_proto.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_proto.Tpo http2/$(DEPDIR)/varnishd-cache_http2_proto.Po
#	$(AM_V_CC)source='http2/cache_http2_proto.c' object='http2/varnishd-cache_http2_proto.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_proto.obj `if test -f 'http2/cache_http2_proto.c'; then $(CYGPATH_W) 'http2/cache_http2_proto.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_proto.c'; fi`

http2/varnishd-cache_http2_send.o: http2/cache_http2_send.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_send.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_send.Tpo -c -o http2/varnishd-cache_http2_send.o `test -f 'http2/cache_http2_send.c' || echo '$(srcdir)/'`http2/cache_http2_send.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_send.Tpo http2/$(DEPDIR)/varnishd-cache_http2_send.Po
#	$(AM_V_CC)source='http2/cache_http2_send.c' object='http2/varnishd-cache_http2_send.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_send.o `test -f 'http2/cache_http2_send.c' || echo '$(srcdir)/'`http2/cache_http2_send.c

http2/varnishd-cache_http2_send.obj: http2/cache_http2_send.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_send.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_send.Tpo -c -o http2/varnishd-cache_http2_send.obj `if test -f 'http2/cache_http2_send.c'; then $(CYGPATH_W) 'http2/cache_http2_send.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_send.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_send.Tpo http2/$(DEPDIR)/varnishd-cache_http2_send.Po
#	$(AM_V_CC)source='http2/cache_http2_send.c' object='http2/varnishd-cache_http2_send.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_send.obj `if test -f 'http2/cache_http2_send.c'; then $(CYGPATH_W) 'http2/cache_http2_send.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_send.c'; fi`

http2/varnishd-cache_http2_session.o: http2/cache_http2_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_session.o -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_session.Tpo -c -o http2/varnishd-cache_http2_session.o `test -f 'http2/cache_http2_session.c' || echo '$(srcdir)/'`http2/cache_http2_session.c
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_session.Tpo http2/$(DEPDIR)/varnishd-cache_http2_session.Po
#	$(AM_V_CC)source='http2/cache_http2_session.c' object='http2/varnishd-cache_http2_session.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_session.o `test -f 'http2/cache_http2_session.c' || echo '$(srcdir)/'`http2/cache_http2_session.c

http2/varnishd-cache_http2_session.obj: http2/cache_http2_session.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT http2/varnishd-cache_http2_session.obj -MD -MP -MF http2/$(DEPDIR)/varnishd-cache_http2_session.Tpo -c -o http2/varnishd-cache_http2_session.obj `if test -f 'http2/cache_http2_session.c'; then $(CYGPATH_W) 'http2/cache_http2_session.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_session.c'; fi`
#	$(AM_V_at)$(am__mv) http2/$(DEPDIR)/varnishd-cache_http2_session.Tpo http2/$(DEPDIR)/varnishd-cache_http2_session.Po
#	$(AM_V_CC)source='http2/cache_http2_session.c' object='http2/varnishd-cache_http2_session.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o http2/varnishd-cache_http2_session.obj `if test -f 'http2/cache_http2_session.c'; then $(CYGPATH_W) 'http2/cache_http2_session.c'; else $(CYGPATH_W) '$(srcdir)/http2/cache_http2_session.c'; fi`

mgt/varnishd-mgt_acceptor.o: mgt/mgt_acceptor.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_acceptor.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_acceptor.Tpo -c -o mgt/varnishd-mgt_acceptor.o `test -f 'mgt/mgt_acceptor.c' || echo '$(srcdir)/'`mgt/mgt_acceptor.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_acceptor.Tpo mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po
#	$(AM_V_CC)source='mgt/mgt_acceptor.c' object='mgt/varnishd-mgt_acceptor.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_acceptor.o `test -f 'mgt/mgt_acceptor.c' || echo '$(srcdir)/'`mgt/mgt_acceptor.c

mgt/varnishd-mgt_acceptor.obj: mgt/mgt_acceptor.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_acceptor.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_acceptor.Tpo -c -o mgt/varnishd-mgt_acceptor.obj `if test -f 'mgt/mgt_acceptor.c'; then $(CYGPATH_W) 'mgt/mgt_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_acceptor.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_acceptor.Tpo mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po
#	$(AM_V_CC)source='mgt/mgt_acceptor.c' object='mgt/varnishd-mgt_acceptor.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_acceptor.obj `if test -f 'mgt/mgt_acceptor.c'; then $(CYGPATH_W) 'mgt/mgt_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_acceptor.c'; fi`

mgt/varnishd-mgt_child.o: mgt/mgt_child.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_child.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_child.Tpo -c -o mgt/varnishd-mgt_child.o `test -f 'mgt/mgt_child.c' || echo '$(srcdir)/'`mgt/mgt_child.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_child.Tpo mgt/$(DEPDIR)/varnishd-mgt_child.Po
#	$(AM_V_CC)source='mgt/mgt_child.c' object='mgt/varnishd-mgt_child.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_child.o `test -f 'mgt/mgt_child.c' || echo '$(srcdir)/'`mgt/mgt_child.c

mgt/varnishd-mgt_child.obj: mgt/mgt_child.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_child.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_child.Tpo -c -o mgt/varnishd-mgt_child.obj `if test -f 'mgt/mgt_child.c'; then $(CYGPATH_W) 'mgt/mgt_child.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_child.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_child.Tpo mgt/$(DEPDIR)/varnishd-mgt_child.Po
#	$(AM_V_CC)source='mgt/mgt_child.c' object='mgt/varnishd-mgt_child.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_child.obj `if test -f 'mgt/mgt_child.c'; then $(CYGPATH_W) 'mgt/mgt_child.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_child.c'; fi`

mgt/varnishd-mgt_cli.o: mgt/mgt_cli.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_cli.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_cli.Tpo -c -o mgt/varnishd-mgt_cli.o `test -f 'mgt/mgt_cli.c' || echo '$(srcdir)/'`mgt/mgt_cli.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_cli.Tpo mgt/$(DEPDIR)/varnishd-mgt_cli.Po
#	$(AM_V_CC)source='mgt/mgt_cli.c' object='mgt/varnishd-mgt_cli.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_cli.o `test -f 'mgt/mgt_cli.c' || echo '$(srcdir)/'`mgt/mgt_cli.c

mgt/varnishd-mgt_cli.obj: mgt/mgt_cli.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_cli.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_cli.Tpo -c -o mgt/varnishd-mgt_cli.obj `if test -f 'mgt/mgt_cli.c'; then $(CYGPATH_W) 'mgt/mgt_cli.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_cli.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_cli.Tpo mgt/$(DEPDIR)/varnishd-mgt_cli.Po
#	$(AM_V_CC)source='mgt/mgt_cli.c' object='mgt/varnishd-mgt_cli.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_cli.obj `if test -f 'mgt/mgt_cli.c'; then $(CYGPATH_W) 'mgt/mgt_cli.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_cli.c'; fi`

mgt/varnishd-mgt_jail.o: mgt/mgt_jail.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail.Tpo -c -o mgt/varnishd-mgt_jail.o `test -f 'mgt/mgt_jail.c' || echo '$(srcdir)/'`mgt/mgt_jail.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail.Po
#	$(AM_V_CC)source='mgt/mgt_jail.c' object='mgt/varnishd-mgt_jail.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail.o `test -f 'mgt/mgt_jail.c' || echo '$(srcdir)/'`mgt/mgt_jail.c

mgt/varnishd-mgt_jail.obj: mgt/mgt_jail.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail.Tpo -c -o mgt/varnishd-mgt_jail.obj `if test -f 'mgt/mgt_jail.c'; then $(CYGPATH_W) 'mgt/mgt_jail.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail.Po
#	$(AM_V_CC)source='mgt/mgt_jail.c' object='mgt/varnishd-mgt_jail.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail.obj `if test -f 'mgt/mgt_jail.c'; then $(CYGPATH_W) 'mgt/mgt_jail.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail.c'; fi`

mgt/varnishd-mgt_jail_solaris.o: mgt/mgt_jail_solaris.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail_solaris.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Tpo -c -o mgt/varnishd-mgt_jail_solaris.o `test -f 'mgt/mgt_jail_solaris.c' || echo '$(srcdir)/'`mgt/mgt_jail_solaris.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po
#	$(AM_V_CC)source='mgt/mgt_jail_solaris.c' object='mgt/varnishd-mgt_jail_solaris.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail_solaris.o `test -f 'mgt/mgt_jail_solaris.c' || echo '$(srcdir)/'`mgt/mgt_jail_solaris.c

mgt/varnishd-mgt_jail_solaris.obj: mgt/mgt_jail_solaris.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail_solaris.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Tpo -c -o mgt/varnishd-mgt_jail_solaris.obj `if test -f 'mgt/mgt_jail_solaris.c'; then $(CYGPATH_W) 'mgt/mgt_jail_solaris.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail_solaris.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po
#	$(AM_V_CC)source='mgt/mgt_jail_solaris.c' object='mgt/varnishd-mgt_jail_solaris.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail_solaris.obj `if test -f 'mgt/mgt_jail_solaris.c'; then $(CYGPATH_W) 'mgt/mgt_jail_solaris.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail_solaris.c'; fi`

mgt/varnishd-mgt_jail_unix.o: mgt/mgt_jail_unix.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail_unix.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Tpo -c -o mgt/varnishd-mgt_jail_unix.o `test -f 'mgt/mgt_jail_unix.c' || echo '$(srcdir)/'`mgt/mgt_jail_unix.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po
#	$(AM_V_CC)source='mgt/mgt_jail_unix.c' object='mgt/varnishd-mgt_jail_unix.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail_unix.o `test -f 'mgt/mgt_jail_unix.c' || echo '$(srcdir)/'`mgt/mgt_jail_unix.c

mgt/varnishd-mgt_jail_unix.obj: mgt/mgt_jail_unix.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_jail_unix.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Tpo -c -o mgt/varnishd-mgt_jail_unix.obj `if test -f 'mgt/mgt_jail_unix.c'; then $(CYGPATH_W) 'mgt/mgt_jail_unix.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail_unix.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Tpo mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po
#	$(AM_V_CC)source='mgt/mgt_jail_unix.c' object='mgt/varnishd-mgt_jail_unix.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_jail_unix.obj `if test -f 'mgt/mgt_jail_unix.c'; then $(CYGPATH_W) 'mgt/mgt_jail_unix.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_jail_unix.c'; fi`

mgt/varnishd-mgt_main.o: mgt/mgt_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_main.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_main.Tpo -c -o mgt/varnishd-mgt_main.o `test -f 'mgt/mgt_main.c' || echo '$(srcdir)/'`mgt/mgt_main.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_main.Tpo mgt/$(DEPDIR)/varnishd-mgt_main.Po
#	$(AM_V_CC)source='mgt/mgt_main.c' object='mgt/varnishd-mgt_main.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_main.o `test -f 'mgt/mgt_main.c' || echo '$(srcdir)/'`mgt/mgt_main.c

mgt/varnishd-mgt_main.obj: mgt/mgt_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_main.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_main.Tpo -c -o mgt/varnishd-mgt_main.obj `if test -f 'mgt/mgt_main.c'; then $(CYGPATH_W) 'mgt/mgt_main.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_main.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_main.Tpo mgt/$(DEPDIR)/varnishd-mgt_main.Po
#	$(AM_V_CC)source='mgt/mgt_main.c' object='mgt/varnishd-mgt_main.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_main.obj `if test -f 'mgt/mgt_main.c'; then $(CYGPATH_W) 'mgt/mgt_main.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_main.c'; fi`

mgt/varnishd-mgt_param.o: mgt/mgt_param.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param.Tpo -c -o mgt/varnishd-mgt_param.o `test -f 'mgt/mgt_param.c' || echo '$(srcdir)/'`mgt/mgt_param.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param.Tpo mgt/$(DEPDIR)/varnishd-mgt_param.Po
#	$(AM_V_CC)source='mgt/mgt_param.c' object='mgt/varnishd-mgt_param.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param.o `test -f 'mgt/mgt_param.c' || echo '$(srcdir)/'`mgt/mgt_param.c

mgt/varnishd-mgt_param.obj: mgt/mgt_param.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param.Tpo -c -o mgt/varnishd-mgt_param.obj `if test -f 'mgt/mgt_param.c'; then $(CYGPATH_W) 'mgt/mgt_param.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param.Tpo mgt/$(DEPDIR)/varnishd-mgt_param.Po
#	$(AM_V_CC)source='mgt/mgt_param.c' object='mgt/varnishd-mgt_param.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param.obj `if test -f 'mgt/mgt_param.c'; then $(CYGPATH_W) 'mgt/mgt_param.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param.c'; fi`

mgt/varnishd-mgt_param_bits.o: mgt/mgt_param_bits.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_bits.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_bits.Tpo -c -o mgt/varnishd-mgt_param_bits.o `test -f 'mgt/mgt_param_bits.c' || echo '$(srcdir)/'`mgt/mgt_param_bits.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_bits.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po
#	$(AM_V_CC)source='mgt/mgt_param_bits.c' object='mgt/varnishd-mgt_param_bits.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_bits.o `test -f 'mgt/mgt_param_bits.c' || echo '$(srcdir)/'`mgt/mgt_param_bits.c

mgt/varnishd-mgt_param_bits.obj: mgt/mgt_param_bits.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_bits.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_bits.Tpo -c -o mgt/varnishd-mgt_param_bits.obj `if test -f 'mgt/mgt_param_bits.c'; then $(CYGPATH_W) 'mgt/mgt_param_bits.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_bits.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_bits.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po
#	$(AM_V_CC)source='mgt/mgt_param_bits.c' object='mgt/varnishd-mgt_param_bits.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_bits.obj `if test -f 'mgt/mgt_param_bits.c'; then $(CYGPATH_W) 'mgt/mgt_param_bits.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_bits.c'; fi`

mgt/varnishd-mgt_param_tbl.o: mgt/mgt_param_tbl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tbl.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Tpo -c -o mgt/varnishd-mgt_param_tbl.o `test -f 'mgt/mgt_param_tbl.c' || echo '$(srcdir)/'`mgt/mgt_param_tbl.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po
#	$(AM_V_CC)source='mgt/mgt_param_tbl.c' object='mgt/varnishd-mgt_param_tbl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tbl.o `test -f 'mgt/mgt_param_tbl.c' || echo '$(srcdir)/'`mgt/mgt_param_tbl.c

mgt/varnishd-mgt_param_tbl.obj: mgt/mgt_param_tbl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tbl.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Tpo -c -o mgt/varnishd-mgt_param_tbl.obj `if test -f 'mgt/mgt_param_tbl.c'; then $(CYGPATH_W) 'mgt/mgt_param_tbl.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tbl.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po
#	$(AM_V_CC)source='mgt/mgt_param_tbl.c' object='mgt/varnishd-mgt_param_tbl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tbl.obj `if test -f 'mgt/mgt_param_tbl.c'; then $(CYGPATH_W) 'mgt/mgt_param_tbl.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tbl.c'; fi`

mgt/varnishd-mgt_param_tcp.o: mgt/mgt_param_tcp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tcp.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Tpo -c -o mgt/varnishd-mgt_param_tcp.o `test -f 'mgt/mgt_param_tcp.c' || echo '$(srcdir)/'`mgt/mgt_param_tcp.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po
#	$(AM_V_CC)source='mgt/mgt_param_tcp.c' object='mgt/varnishd-mgt_param_tcp.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tcp.o `test -f 'mgt/mgt_param_tcp.c' || echo '$(srcdir)/'`mgt/mgt_param_tcp.c

mgt/varnishd-mgt_param_tcp.obj: mgt/mgt_param_tcp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tcp.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Tpo -c -o mgt/varnishd-mgt_param_tcp.obj `if test -f 'mgt/mgt_param_tcp.c'; then $(CYGPATH_W) 'mgt/mgt_param_tcp.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tcp.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po
#	$(AM_V_CC)source='mgt/mgt_param_tcp.c' object='mgt/varnishd-mgt_param_tcp.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tcp.obj `if test -f 'mgt/mgt_param_tcp.c'; then $(CYGPATH_W) 'mgt/mgt_param_tcp.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tcp.c'; fi`

mgt/varnishd-mgt_param_tweak.o: mgt/mgt_param_tweak.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tweak.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Tpo -c -o mgt/varnishd-mgt_param_tweak.o `test -f 'mgt/mgt_param_tweak.c' || echo '$(srcdir)/'`mgt/mgt_param_tweak.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po
#	$(AM_V_CC)source='mgt/mgt_param_tweak.c' object='mgt/varnishd-mgt_param_tweak.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tweak.o `test -f 'mgt/mgt_param_tweak.c' || echo '$(srcdir)/'`mgt/mgt_param_tweak.c

mgt/varnishd-mgt_param_tweak.obj: mgt/mgt_param_tweak.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_param_tweak.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Tpo -c -o mgt/varnishd-mgt_param_tweak.obj `if test -f 'mgt/mgt_param_tweak.c'; then $(CYGPATH_W) 'mgt/mgt_param_tweak.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tweak.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Tpo mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po
#	$(AM_V_CC)source='mgt/mgt_param_tweak.c' object='mgt/varnishd-mgt_param_tweak.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_param_tweak.obj `if test -f 'mgt/mgt_param_tweak.c'; then $(CYGPATH_W) 'mgt/mgt_param_tweak.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_param_tweak.c'; fi`

mgt/varnishd-mgt_pool.o: mgt/mgt_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_pool.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_pool.Tpo -c -o mgt/varnishd-mgt_pool.o `test -f 'mgt/mgt_pool.c' || echo '$(srcdir)/'`mgt/mgt_pool.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_pool.Tpo mgt/$(DEPDIR)/varnishd-mgt_pool.Po
#	$(AM_V_CC)source='mgt/mgt_pool.c' object='mgt/varnishd-mgt_pool.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_pool.o `test -f 'mgt/mgt_pool.c' || echo '$(srcdir)/'`mgt/mgt_pool.c

mgt/varnishd-mgt_pool.obj: mgt/mgt_pool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_pool.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_pool.Tpo -c -o mgt/varnishd-mgt_pool.obj `if test -f 'mgt/mgt_pool.c'; then $(CYGPATH_W) 'mgt/mgt_pool.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_pool.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_pool.Tpo mgt/$(DEPDIR)/varnishd-mgt_pool.Po
#	$(AM_V_CC)source='mgt/mgt_pool.c' object='mgt/varnishd-mgt_pool.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_pool.obj `if test -f 'mgt/mgt_pool.c'; then $(CYGPATH_W) 'mgt/mgt_pool.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_pool.c'; fi`

mgt/varnishd-mgt_shmem.o: mgt/mgt_shmem.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_shmem.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_shmem.Tpo -c -o mgt/varnishd-mgt_shmem.o `test -f 'mgt/mgt_shmem.c' || echo '$(srcdir)/'`mgt/mgt_shmem.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_shmem.Tpo mgt/$(DEPDIR)/varnishd-mgt_shmem.Po
#	$(AM_V_CC)source='mgt/mgt_shmem.c' object='mgt/varnishd-mgt_shmem.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_shmem.o `test -f 'mgt/mgt_shmem.c' || echo '$(srcdir)/'`mgt/mgt_shmem.c

mgt/varnishd-mgt_shmem.obj: mgt/mgt_shmem.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_shmem.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_shmem.Tpo -c -o mgt/varnishd-mgt_shmem.obj `if test -f 'mgt/mgt_shmem.c'; then $(CYGPATH_W) 'mgt/mgt_shmem.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_shmem.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_shmem.Tpo mgt/$(DEPDIR)/varnishd-mgt_shmem.Po
#	$(AM_V_CC)source='mgt/mgt_shmem.c' object='mgt/varnishd-mgt_shmem.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_shmem.obj `if test -f 'mgt/mgt_shmem.c'; then $(CYGPATH_W) 'mgt/mgt_shmem.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_shmem.c'; fi`

mgt/varnishd-mgt_symtab.o: mgt/mgt_symtab.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_symtab.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_symtab.Tpo -c -o mgt/varnishd-mgt_symtab.o `test -f 'mgt/mgt_symtab.c' || echo '$(srcdir)/'`mgt/mgt_symtab.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_symtab.Tpo mgt/$(DEPDIR)/varnishd-mgt_symtab.Po
#	$(AM_V_CC)source='mgt/mgt_symtab.c' object='mgt/varnishd-mgt_symtab.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_symtab.o `test -f 'mgt/mgt_symtab.c' || echo '$(srcdir)/'`mgt/mgt_symtab.c

mgt/varnishd-mgt_symtab.obj: mgt/mgt_symtab.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_symtab.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_symtab.Tpo -c -o mgt/varnishd-mgt_symtab.obj `if test -f 'mgt/mgt_symtab.c'; then $(CYGPATH_W) 'mgt/mgt_symtab.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_symtab.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_symtab.Tpo mgt/$(DEPDIR)/varnishd-mgt_symtab.Po
#	$(AM_V_CC)source='mgt/mgt_symtab.c' object='mgt/varnishd-mgt_symtab.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_symtab.obj `if test -f 'mgt/mgt_symtab.c'; then $(CYGPATH_W) 'mgt/mgt_symtab.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_symtab.c'; fi`

mgt/varnishd-mgt_util.o: mgt/mgt_util.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_util.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_util.Tpo -c -o mgt/varnishd-mgt_util.o `test -f 'mgt/mgt_util.c' || echo '$(srcdir)/'`mgt/mgt_util.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_util.Tpo mgt/$(DEPDIR)/varnishd-mgt_util.Po
#	$(AM_V_CC)source='mgt/mgt_util.c' object='mgt/varnishd-mgt_util.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_util.o `test -f 'mgt/mgt_util.c' || echo '$(srcdir)/'`mgt/mgt_util.c

mgt/varnishd-mgt_util.obj: mgt/mgt_util.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_util.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_util.Tpo -c -o mgt/varnishd-mgt_util.obj `if test -f 'mgt/mgt_util.c'; then $(CYGPATH_W) 'mgt/mgt_util.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_util.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_util.Tpo mgt/$(DEPDIR)/varnishd-mgt_util.Po
#	$(AM_V_CC)source='mgt/mgt_util.c' object='mgt/varnishd-mgt_util.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_util.obj `if test -f 'mgt/mgt_util.c'; then $(CYGPATH_W) 'mgt/mgt_util.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_util.c'; fi`

mgt/varnishd-mgt_vcc.o: mgt/mgt_vcc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_vcc.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_vcc.Tpo -c -o mgt/varnishd-mgt_vcc.o `test -f 'mgt/mgt_vcc.c' || echo '$(srcdir)/'`mgt/mgt_vcc.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_vcc.Tpo mgt/$(DEPDIR)/varnishd-mgt_vcc.Po
#	$(AM_V_CC)source='mgt/mgt_vcc.c' object='mgt/varnishd-mgt_vcc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_vcc.o `test -f 'mgt/mgt_vcc.c' || echo '$(srcdir)/'`mgt/mgt_vcc.c

mgt/varnishd-mgt_vcc.obj: mgt/mgt_vcc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_vcc.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_vcc.Tpo -c -o mgt/varnishd-mgt_vcc.obj `if test -f 'mgt/mgt_vcc.c'; then $(CYGPATH_W) 'mgt/mgt_vcc.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_vcc.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_vcc.Tpo mgt/$(DEPDIR)/varnishd-mgt_vcc.Po
#	$(AM_V_CC)source='mgt/mgt_vcc.c' object='mgt/varnishd-mgt_vcc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_vcc.obj `if test -f 'mgt/mgt_vcc.c'; then $(CYGPATH_W) 'mgt/mgt_vcc.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_vcc.c'; fi`

mgt/varnishd-mgt_vcl.o: mgt/mgt_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_vcl.o -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_vcl.Tpo -c -o mgt/varnishd-mgt_vcl.o `test -f 'mgt/mgt_vcl.c' || echo '$(srcdir)/'`mgt/mgt_vcl.c
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_vcl.Tpo mgt/$(DEPDIR)/varnishd-mgt_vcl.Po
#	$(AM_V_CC)source='mgt/mgt_vcl.c' object='mgt/varnishd-mgt_vcl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_vcl.o `test -f 'mgt/mgt_vcl.c' || echo '$(srcdir)/'`mgt/mgt_vcl.c

mgt/varnishd-mgt_vcl.obj: mgt/mgt_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT mgt/varnishd-mgt_vcl.obj -MD -MP -MF mgt/$(DEPDIR)/varnishd-mgt_vcl.Tpo -c -o mgt/varnishd-mgt_vcl.obj `if test -f 'mgt/mgt_vcl.c'; then $(CYGPATH_W) 'mgt/mgt_vcl.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_vcl.c'; fi`
#	$(AM_V_at)$(am__mv) mgt/$(DEPDIR)/varnishd-mgt_vcl.Tpo mgt/$(DEPDIR)/varnishd-mgt_vcl.Po
#	$(AM_V_CC)source='mgt/mgt_vcl.c' object='mgt/varnishd-mgt_vcl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o mgt/varnishd-mgt_vcl.obj `if test -f 'mgt/mgt_vcl.c'; then $(CYGPATH_W) 'mgt/mgt_vcl.c'; else $(CYGPATH_W) '$(srcdir)/mgt/mgt_vcl.c'; fi`

proxy/varnishd-cache_proxy_proto.o: proxy/cache_proxy_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT proxy/varnishd-cache_proxy_proto.o -MD -MP -MF proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Tpo -c -o proxy/varnishd-cache_proxy_proto.o `test -f 'proxy/cache_proxy_proto.c' || echo '$(srcdir)/'`proxy/cache_proxy_proto.c
#	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Tpo proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po
#	$(AM_V_CC)source='proxy/cache_proxy_proto.c' object='proxy/varnishd-cache_proxy_proto.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o proxy/varnishd-cache_proxy_proto.o `test -f 'proxy/cache_proxy_proto.c' || echo '$(srcdir)/'`proxy/cache_proxy_proto.c

proxy/varnishd-cache_proxy_proto.obj: proxy/cache_proxy_proto.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT proxy/varnishd-cache_proxy_proto.obj -MD -MP -MF proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Tpo -c -o proxy/varnishd-cache_proxy_proto.obj `if test -f 'proxy/cache_proxy_proto.c'; then $(CYGPATH_W) 'proxy/cache_proxy_proto.c'; else $(CYGPATH_W) '$(srcdir)/proxy/cache_proxy_proto.c'; fi`
#	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Tpo proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po
#	$(AM_V_CC)source='proxy/cache_proxy_proto.c' object='proxy/varnishd-cache_proxy_proto.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o proxy/varnishd-cache_proxy_proto.obj `if test -f 'proxy/cache_proxy_proto.c'; then $(CYGPATH_W) 'proxy/cache_proxy_proto.c'; else $(CYGPATH_W) '$(srcdir)/proxy/cache_proxy_proto.c'; fi`

storage/varnishd-mgt_stevedore.o: storage/mgt_stevedore.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-mgt_stevedore.o -MD -MP -MF storage/$(DEPDIR)/varnishd-mgt_stevedore.Tpo -c -o storage/varnishd-mgt_stevedore.o `test -f 'storage/mgt_stevedore.c' || echo '$(srcdir)/'`storage/mgt_stevedore.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-mgt_stevedore.Tpo storage/$(DEPDIR)/varnishd-mgt_stevedore.Po
#	$(AM_V_CC)source='storage/mgt_stevedore.c' object='storage/varnishd-mgt_stevedore.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-mgt_stevedore.o `test -f 'storage/mgt_stevedore.c' || echo '$(srcdir)/'`storage/mgt_stevedore.c

storage/varnishd-mgt_stevedore.obj: storage/mgt_stevedore.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-mgt_stevedore.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-mgt_stevedore.Tpo -c -o storage/varnishd-mgt_stevedore.obj `if test -f 'storage/mgt_stevedore.c'; then $(CYGPATH_W) 'storage/mgt_stevedore.c'; else $(CYGPATH_W) '$(srcdir)/storage/mgt_stevedore.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-mgt_stevedore.Tpo storage/$(DEPDIR)/varnishd-mgt_stevedore.Po
#	$(AM_V_CC)source='storage/mgt_stevedore.c' object='storage/varnishd-mgt_stevedore.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-mgt_stevedore.obj `if test -f 'storage/mgt_stevedore.c'; then $(CYGPATH_W) 'storage/mgt_stevedore.c'; else $(CYGPATH_W) '$(srcdir)/storage/mgt_stevedore.c'; fi`

storage/varnishd-stevedore.o: storage/stevedore.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-stevedore.o -MD -MP -MF storage/$(DEPDIR)/varnishd-stevedore.Tpo -c -o storage/varnishd-stevedore.o `test -f 'storage/stevedore.c' || echo '$(srcdir)/'`storage/stevedore.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-stevedore.Tpo storage/$(DEPDIR)/varnishd-stevedore.Po
#	$(AM_V_CC)source='storage/stevedore.c' object='storage/varnishd-stevedore.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-stevedore.o `test -f 'storage/stevedore.c' || echo '$(srcdir)/'`storage/stevedore.c

storage/varnishd-stevedore.obj: storage/stevedore.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-stevedore.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-stevedore.Tpo -c -o storage/varnishd-stevedore.obj `if test -f 'storage/stevedore.c'; then $(CYGPATH_W) 'storage/stevedore.c'; else $(CYGPATH_W) '$(srcdir)/storage/stevedore.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-stevedore.Tpo storage/$(DEPDIR)/varnishd-stevedore.Po
#	$(AM_V_CC)source='storage/stevedore.c' object='storage/varnishd-stevedore.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-stevedore.obj `if test -f 'storage/stevedore.c'; then $(CYGPATH_W) 'storage/stevedore.c'; else $(CYGPATH_W) '$(srcdir)/storage/stevedore.c'; fi`

storage/varnishd-stevedore_utils.o: storage/stevedore_utils.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-stevedore_utils.o -MD -MP -MF storage/$(DEPDIR)/varnishd-stevedore_utils.Tpo -c -o storage/varnishd-stevedore_utils.o `test -f 'storage/stevedore_utils.c' || echo '$(srcdir)/'`storage/stevedore_utils.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-stevedore_utils.Tpo storage/$(DEPDIR)/varnishd-stevedore_utils.Po
#	$(AM_V_CC)source='storage/stevedore_utils.c' object='storage/varnishd-stevedore_utils.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-stevedore_utils.o `test -f 'storage/stevedore_utils.c' || echo '$(srcdir)/'`storage/stevedore_utils.c

storage/varnishd-stevedore_utils.obj: storage/stevedore_utils.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-stevedore_utils.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-stevedore_utils.Tpo -c -o storage/varnishd-stevedore_utils.obj `if test -f 'storage/stevedore_utils.c'; then $(CYGPATH_W) 'storage/stevedore_utils.c'; else $(CYGPATH_W) '$(srcdir)/storage/stevedore_utils.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-stevedore_utils.Tpo storage/$(DEPDIR)/varnishd-stevedore_utils.Po
#	$(AM_V_CC)source='storage/stevedore_utils.c' object='storage/varnishd-stevedore_utils.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-stevedore_utils.obj `if test -f 'storage/stevedore_utils.c'; then $(CYGPATH_W) 'storage/stevedore_utils.c'; else $(CYGPATH_W) '$(srcdir)/storage/stevedore_utils.c'; fi`

storage/varnishd-storage_file.o: storage/storage_file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_file.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_file.Tpo -c -o storage/varnishd-storage_file.o `test -f 'storage/storage_file.c' || echo '$(srcdir)/'`storage/storage_file.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_file.Tpo storage/$(DEPDIR)/varnishd-storage_file.Po
#	$(AM_V_CC)source='storage/storage_file.c' object='storage/varnishd-storage_file.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_file.o `test -f 'storage/storage_file.c' || echo '$(srcdir)/'`storage/storage_file.c

storage/varnishd-storage_file.obj: storage/storage_file.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_file.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_file.Tpo -c -o storage/varnishd-storage_file.obj `if test -f 'storage/storage_file.c'; then $(CYGPATH_W) 'storage/storage_file.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_file.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_file.Tpo storage/$(DEPDIR)/varnishd-storage_file.Po
#	$(AM_V_CC)source='storage/storage_file.c' object='storage/varnishd-storage_file.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_file.obj `if test -f 'storage/storage_file.c'; then $(CYGPATH_W) 'storage/storage_file.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_file.c'; fi`

storage/varnishd-storage_lru.o: storage/storage_lru.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_lru.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_lru.Tpo -c -o storage/varnishd-storage_lru.o `test -f 'storage/storage_lru.c' || echo '$(srcdir)/'`storage/storage_lru.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_lru.Tpo storage/$(DEPDIR)/varnishd-storage_lru.Po
#	$(AM_V_CC)source='storage/storage_lru.c' object='storage/varnishd-storage_lru.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_lru.o `test -f 'storage/storage_lru.c' || echo '$(srcdir)/'`storage/storage_lru.c

storage/varnishd-storage_lru.obj: storage/storage_lru.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_lru.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_lru.Tpo -c -o storage/varnishd-storage_lru.obj `if test -f 'storage/storage_lru.c'; then $(CYGPATH_W) 'storage/storage_lru.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_lru.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_lru.Tpo storage/$(DEPDIR)/varnishd-storage_lru.Po
#	$(AM_V_CC)source='storage/storage_lru.c' object='storage/varnishd-storage_lru.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_lru.obj `if test -f 'storage/storage_lru.c'; then $(CYGPATH_W) 'storage/storage_lru.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_lru.c'; fi`

storage/varnishd-storage_malloc.o: storage/storage_malloc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_malloc.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_malloc.Tpo -c -o storage/varnishd-storage_malloc.o `test -f 'storage/storage_malloc.c' || echo '$(srcdir)/'`storage/storage_malloc.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_malloc.Tpo storage/$(DEPDIR)/varnishd-storage_malloc.Po
#	$(AM_V_CC)source='storage/storage_malloc.c' object='storage/varnishd-storage_malloc.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_malloc.o `test -f 'storage/storage_malloc.c' || echo '$(srcdir)/'`storage/storage_malloc.c

storage/varnishd-storage_malloc.obj: storage/storage_malloc.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_malloc.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_malloc.Tpo -c -o storage/varnishd-storage_malloc.obj `if test -f 'storage/storage_malloc.c'; then $(CYGPATH_W) 'storage/storage_malloc.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_malloc.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_malloc.Tpo storage/$(DEPDIR)/varnishd-storage_malloc.Po
#	$(AM_V_CC)source='storage/storage_malloc.c' object='storage/varnishd-storage_malloc.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_malloc.obj `if test -f 'storage/storage_malloc.c'; then $(CYGPATH_W) 'storage/storage_malloc.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_malloc.c'; fi`

storage/varnishd-storage_simple.o: storage/storage_simple.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_simple.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_simple.Tpo -c -o storage/varnishd-storage_simple.o `test -f 'storage/storage_simple.c' || echo '$(srcdir)/'`storage/storage_simple.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_simple.Tpo storage/$(DEPDIR)/varnishd-storage_simple.Po
#	$(AM_V_CC)source='storage/storage_simple.c' object='storage/varnishd-storage_simple.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_simple.o `test -f 'storage/storage_simple.c' || echo '$(srcdir)/'`storage/storage_simple.c

storage/varnishd-storage_simple.obj: storage/storage_simple.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_simple.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_simple.Tpo -c -o storage/varnishd-storage_simple.obj `if test -f 'storage/storage_simple.c'; then $(CYGPATH_W) 'storage/storage_simple.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_simple.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_simple.Tpo storage/$(DEPDIR)/varnishd-storage_simple.Po
#	$(AM_V_CC)source='storage/storage_simple.c' object='storage/varnishd-storage_simple.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_simple.obj `if test -f 'storage/storage_simple.c'; then $(CYGPATH_W) 'storage/storage_simple.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_simple.c'; fi`

storage/varnishd-storage_umem.o: storage/storage_umem.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_umem.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_umem.Tpo -c -o storage/varnishd-storage_umem.o `test -f 'storage/storage_umem.c' || echo '$(srcdir)/'`storage/storage_umem.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_umem.Tpo storage/$(DEPDIR)/varnishd-storage_umem.Po
#	$(AM_V_CC)source='storage/storage_umem.c' object='storage/varnishd-storage_umem.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_umem.o `test -f 'storage/storage_umem.c' || echo '$(srcdir)/'`storage/storage_umem.c

storage/varnishd-storage_umem.obj: storage/storage_umem.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_umem.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_umem.Tpo -c -o storage/varnishd-storage_umem.obj `if test -f 'storage/storage_umem.c'; then $(CYGPATH_W) 'storage/storage_umem.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_umem.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_umem.Tpo storage/$(DEPDIR)/varnishd-storage_umem.Po
#	$(AM_V_CC)source='storage/storage_umem.c' object='storage/varnishd-storage_umem.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_umem.obj `if test -f 'storage/storage_umem.c'; then $(CYGPATH_W) 'storage/storage_umem.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_umem.c'; fi`

waiter/varnishd-cache_waiter.o: waiter/cache_waiter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter.Tpo -c -o waiter/varnishd-cache_waiter.o `test -f 'waiter/cache_waiter.c' || echo '$(srcdir)/'`waiter/cache_waiter.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter.Po
#	$(AM_V_CC)source='waiter/cache_waiter.c' object='waiter/varnishd-cache_waiter.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter.o `test -f 'waiter/cache_waiter.c' || echo '$(srcdir)/'`waiter/cache_waiter.c

waiter/varnishd-cache_waiter.obj: waiter/cache_waiter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter.Tpo -c -o waiter/varnishd-cache_waiter.obj `if test -f 'waiter/cache_waiter.c'; then $(CYGPATH_W) 'waiter/cache_waiter.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter.Po
#	$(AM_V_CC)source='waiter/cache_waiter.c' object='waiter/varnishd-cache_waiter.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter.obj `if test -f 'waiter/cache_waiter.c'; then $(CYGPATH_W) 'waiter/cache_waiter.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter.c'; fi`

waiter/varnishd-cache_waiter_epoll.o: waiter/cache_waiter_epoll.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_epoll.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Tpo -c -o waiter/varnishd-cache_waiter_epoll.o `test -f 'waiter/cache_waiter_epoll.c' || echo '$(srcdir)/'`waiter/cache_waiter_epoll.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po
#	$(AM_V_CC)source='waiter/cache_waiter_epoll.c' object='waiter/varnishd-cache_waiter_epoll.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_epoll.o `test -f 'waiter/cache_waiter_epoll.c' || echo '$(srcdir)/'`waiter/cache_waiter_epoll.c

waiter/varnishd-cache_waiter_epoll.obj: waiter/cache_waiter_epoll.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_epoll.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Tpo -c -o waiter/varnishd-cache_waiter_epoll.obj `if test -f 'waiter/cache_waiter_epoll.c'; then $(CYGPATH_W) 'waiter/cache_waiter_epoll.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_epoll.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po
#	$(AM_V_CC)source='waiter/cache_waiter_epoll.c' object='waiter/varnishd-cache_waiter_epoll.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_epoll.obj `if test -f 'waiter/cache_waiter_epoll.c'; then $(CYGPATH_W) 'waiter/cache_waiter_epoll.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_epoll.c'; fi`

waiter/varnishd-cache_waiter_kqueue.o: waiter/cache_waiter_kqueue.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_kqueue.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo -c -o waiter/varnishd-cache_waiter_kqueue.o `test -f 'waiter/cache_waiter_kqueue.c' || echo '$(srcdir)/'`waiter/cache_waiter_kqueue.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po
#	$(AM_V_CC)source='waiter/cache_waiter_kqueue.c' object='waiter/varnishd-cache_waiter_kqueue.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_kqueue.o `test -f 'waiter/cache_waiter_kqueue.c' || echo '$(srcdir)/'`waiter/cache_waiter_kqueue.c

waiter/varnishd-cache_waiter_kqueue.obj: waiter/cache_waiter_kqueue.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_kqueue.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo -c -o waiter/varnishd-cache_waiter_kqueue.obj `if test -f 'waiter/cache_waiter_kqueue.c'; then $(CYGPATH_W) 'waiter/cache_waiter_kqueue.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_kqueue.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po
#	$(AM_V_CC)source='waiter/cache_waiter_kqueue.c' object='waiter/varnishd-cache_waiter_kqueue.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_kqueue.obj `if test -f 'waiter/cache_waiter_kqueue.c'; then $(CYGPATH_W) 'waiter/cache_waiter_kqueue.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_kqueue.c'; fi`

waiter/varnishd-cache_waiter_poll.o: waiter/cache_waiter_poll.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_poll.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Tpo -c -o waiter/varnishd-cache_waiter_poll.o `test -f 'waiter/cache_waiter_poll.c' || echo '$(srcdir)/'`waiter/cache_waiter_poll.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po
#	$(AM_V_CC)source='waiter/cache_waiter_poll.c' object='waiter/varnishd-cache_waiter_poll.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_poll.o `test -f 'waiter/cache_waiter_poll.c' || echo '$(srcdir)/'`waiter/cache_waiter_poll.c

waiter/varnishd-cache_waiter_poll.obj: waiter/cache_waiter_poll.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_poll.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Tpo -c -o waiter/varnishd-cache_waiter_poll.obj `if test -f 'waiter/cache_waiter_poll.c'; then $(CYGPATH_W) 'waiter/cache_waiter_poll.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_poll.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po
#	$(AM_V_CC)source='waiter/cache_waiter_poll.c' object='waiter/varnishd-cache_waiter_poll.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_poll.obj `if test -f 'waiter/cache_waiter_poll.c'; then $(CYGPATH_W) 'waiter/cache_waiter_poll.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_poll.c'; fi`

waiter/varnishd-cache_waiter_ports.o: waiter/cache_waiter_ports.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_ports.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Tpo -c -o waiter/varnishd-cache_waiter_ports.o `test -f 'waiter/cache_waiter_ports.c' || echo '$(srcdir)/'`waiter/cache_waiter_ports.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po
#	$(AM_V_CC)source='waiter/cache_waiter_ports.c' object='waiter/varnishd-cache_waiter_ports.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_ports.o `test -f 'waiter/cache_waiter_ports.c' || echo '$(srcdir)/'`waiter/cache_waiter_ports.c

waiter/varnishd-cache_waiter_ports.obj: waiter/cache_waiter_ports.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-cache_waiter_ports.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Tpo -c -o waiter/varnishd-cache_waiter_ports.obj `if test -f 'waiter/cache_waiter_ports.c'; then $(CYGPATH_W) 'waiter/cache_waiter_ports.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_ports.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Tpo waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po
#	$(AM_V_CC)source='waiter/cache_waiter_ports.c' object='waiter/varnishd-cache_waiter_ports.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-cache_waiter_ports.obj `if test -f 'waiter/cache_waiter_ports.c'; then $(CYGPATH_W) 'waiter/cache_waiter_ports.c'; else $(CYGPATH_W) '$(srcdir)/waiter/cache_waiter_ports.c'; fi`

waiter/varnishd-mgt_waiter.o: waiter/mgt_waiter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-mgt_waiter.o -MD -MP -MF waiter/$(DEPDIR)/varnishd-mgt_waiter.Tpo -c -o waiter/varnishd-mgt_waiter.o `test -f 'waiter/mgt_waiter.c' || echo '$(srcdir)/'`waiter/mgt_waiter.c
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-mgt_waiter.Tpo waiter/$(DEPDIR)/varnishd-mgt_waiter.Po
#	$(AM_V_CC)source='waiter/mgt_waiter.c' object='waiter/varnishd-mgt_waiter.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-mgt_waiter.o `test -f 'waiter/mgt_waiter.c' || echo '$(srcdir)/'`waiter/mgt_waiter.c

waiter/varnishd-mgt_waiter.obj: waiter/mgt_waiter.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT waiter/varnishd-mgt_waiter.obj -MD -MP -MF waiter/$(DEPDIR)/varnishd-mgt_waiter.Tpo -c -o waiter/varnishd-mgt_waiter.obj `if test -f 'waiter/mgt_waiter.c'; then $(CYGPATH_W) 'waiter/mgt_waiter.c'; else $(CYGPATH_W) '$(srcdir)/waiter/mgt_waiter.c'; fi`
#	$(AM_V_at)$(am__mv) waiter/$(DEPDIR)/varnishd-mgt_waiter.Tpo waiter/$(DEPDIR)/varnishd-mgt_waiter.Po
#	$(AM_V_CC)source='waiter/mgt_waiter.c' object='waiter/varnishd-mgt_waiter.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o waiter/varnishd-mgt_waiter.obj `if test -f 'waiter/mgt_waiter.c'; then $(CYGPATH_W) 'waiter/mgt_waiter.c'; else $(CYGPATH_W) '$(srcdir)/waiter/mgt_waiter.c'; fi`

storage/varnishd-mgt_storage_persistent.o: storage/mgt_storage_persistent.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-mgt_storage_persistent.o -MD -MP -MF storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Tpo -c -o storage/varnishd-mgt_storage_persistent.o `test -f 'storage/mgt_storage_persistent.c' || echo '$(srcdir)/'`storage/mgt_storage_persistent.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Tpo storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po
#	$(AM_V_CC)source='storage/mgt_storage_persistent.c' object='storage/varnishd-mgt_storage_persistent.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-mgt_storage_persistent.o `test -f 'storage/mgt_storage_persistent.c' || echo '$(srcdir)/'`storage/mgt_storage_persistent.c

storage/varnishd-mgt_storage_persistent.obj: storage/mgt_storage_persistent.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-mgt_storage_persistent.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Tpo -c -o storage/varnishd-mgt_storage_persistent.obj `if test -f 'storage/mgt_storage_persistent.c'; then $(CYGPATH_W) 'storage/mgt_storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage/mgt_storage_persistent.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Tpo storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po
#	$(AM_V_CC)source='storage/mgt_storage_persistent.c' object='storage/varnishd-mgt_storage_persistent.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-mgt_storage_persistent.obj `if test -f 'storage/mgt_storage_persistent.c'; then $(CYGPATH_W) 'storage/mgt_storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage/mgt_storage_persistent.c'; fi`

storage/varnishd-storage_persistent.o: storage/storage_persistent.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent.Tpo -c -o storage/varnishd-storage_persistent.o `test -f 'storage/storage_persistent.c' || echo '$(srcdir)/'`storage/storage_persistent.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent.Tpo storage/$(DEPDIR)/varnishd-storage_persistent.Po
#	$(AM_V_CC)source='storage/storage_persistent.c' object='storage/varnishd-storage_persistent.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent.o `test -f 'storage/storage_persistent.c' || echo '$(srcdir)/'`storage/storage_persistent.c

storage/varnishd-storage_persistent.obj: storage/storage_persistent.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent.Tpo -c -o storage/varnishd-storage_persistent.obj `if test -f 'storage/storage_persistent.c'; then $(CYGPATH_W) 'storage/storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent.Tpo storage/$(DEPDIR)/varnishd-storage_persistent.Po
#	$(AM_V_CC)source='storage/storage_persistent.c' object='storage/varnishd-storage_persistent.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent.obj `if test -f 'storage/storage_persistent.c'; then $(CYGPATH_W) 'storage/storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent.c'; fi`

storage/varnishd-storage_persistent_silo.o: storage/storage_persistent_silo.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent_silo.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent_silo.Tpo -c -o storage/varnishd-storage_persistent_silo.o `test -f 'storage/storage_persistent_silo.c' || echo '$(srcdir)/'`storage/storage_persistent_silo.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent_silo.Tpo storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po
#	$(AM_V_CC)source='storage/storage_persistent_silo.c' object='storage/varnishd-storage_persistent_silo.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent_silo.o `test -f 'storage/storage_persistent_silo.c' || echo '$(srcdir)/'`storage/storage_persistent_silo.c

storage/varnishd-storage_persistent_silo.obj: storage/storage_persistent_silo.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent_silo.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent_silo.Tpo -c -o storage/varnishd-storage_persistent_silo.obj `if test -f 'storage/storage_persistent_silo.c'; then $(CYGPATH_W) 'storage/storage_persistent_silo.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent_silo.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent_silo.Tpo storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po
#	$(AM_V_CC)source='storage/storage_persistent_silo.c' object='storage/varnishd-storage_persistent_silo.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent_silo.obj `if test -f 'storage/storage_persistent_silo.c'; then $(CYGPATH_W) 'storage/storage_persistent_silo.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent_silo.c'; fi`

storage/varnishd-storage_persistent_subr.o: storage/storage_persistent_subr.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent_subr.o -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent_subr.Tpo -c -o storage/varnishd-storage_persistent_subr.o `test -f 'storage/storage_persistent_subr.c' || echo '$(srcdir)/'`storage/storage_persistent_subr.c
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent_subr.Tpo storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po
#	$(AM_V_CC)source='storage/storage_persistent_subr.c' object='storage/varnishd-storage_persistent_subr.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent_subr.o `test -f 'storage/storage_persistent_subr.c' || echo '$(srcdir)/'`storage/storage_persistent_subr.c

storage/varnishd-storage_persistent_subr.obj: storage/storage_persistent_subr.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT storage/varnishd-storage_persistent_subr.obj -MD -MP -MF storage/$(DEPDIR)/varnishd-storage_persistent_subr.Tpo -c -o storage/varnishd-storage_persistent_subr.obj `if test -f 'storage/storage_persistent_subr.c'; then $(CYGPATH_W) 'storage/storage_persistent_subr.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent_subr.c'; fi`
#	$(AM_V_at)$(am__mv) storage/$(DEPDIR)/varnishd-storage_persistent_subr.Tpo storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po
#	$(AM_V_CC)source='storage/storage_persistent_subr.c' object='storage/varnishd-storage_persistent_subr.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o storage/varnishd-storage_persistent_subr.obj `if test -f 'storage/storage_persistent_subr.c'; then $(CYGPATH_W) 'storage/storage_persistent_subr.c'; else $(CYGPATH_W) '$(srcdir)/storage/storage_persistent_subr.c'; fi`

varnishd-VSC_lck.o: VSC_lck.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_lck.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_lck.Tpo -c -o varnishd-VSC_lck.o `test -f 'VSC_lck.c' || echo '$(srcdir)/'`VSC_lck.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_lck.Tpo $(DEPDIR)/varnishd-VSC_lck.Po
#	$(AM_V_CC)source='VSC_lck.c' object='varnishd-VSC_lck.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_lck.o `test -f 'VSC_lck.c' || echo '$(srcdir)/'`VSC_lck.c

varnishd-VSC_lck.obj: VSC_lck.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_lck.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_lck.Tpo -c -o varnishd-VSC_lck.obj `if test -f 'VSC_lck.c'; then $(CYGPATH_W) 'VSC_lck.c'; else $(CYGPATH_W) '$(srcdir)/VSC_lck.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_lck.Tpo $(DEPDIR)/varnishd-VSC_lck.Po
#	$(AM_V_CC)source='VSC_lck.c' object='varnishd-VSC_lck.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_lck.obj `if test -f 'VSC_lck.c'; then $(CYGPATH_W) 'VSC_lck.c'; else $(CYGPATH_W) '$(srcdir)/VSC_lck.c'; fi`

varnishd-VSC_main.o: VSC_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_main.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_main.Tpo -c -o varnishd-VSC_main.o `test -f 'VSC_main.c' || echo '$(srcdir)/'`VSC_main.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_main.Tpo $(DEPDIR)/varnishd-VSC_main.Po
#	$(AM_V_CC)source='VSC_main.c' object='varnishd-VSC_main.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_main.o `test -f 'VSC_main.c' || echo '$(srcdir)/'`VSC_main.c

varnishd-VSC_main.obj: VSC_main.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_main.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_main.Tpo -c -o varnishd-VSC_main.obj `if test -f 'VSC_main.c'; then $(CYGPATH_W) 'VSC_main.c'; else $(CYGPATH_W) '$(srcdir)/VSC_main.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_main.Tpo $(DEPDIR)/varnishd-VSC_main.Po
#	$(AM_V_CC)source='VSC_main.c' object='varnishd-VSC_main.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_main.obj `if test -f 'VSC_main.c'; then $(CYGPATH_W) 'VSC_main.c'; else $(CYGPATH_W) '$(srcdir)/VSC_main.c'; fi`

varnishd-VSC_mempool.o: VSC_mempool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_mempool.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_mempool.Tpo -c -o varnishd-VSC_mempool.o `test -f 'VSC_mempool.c' || echo '$(srcdir)/'`VSC_mempool.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_mempool.Tpo $(DEPDIR)/varnishd-VSC_mempool.Po
#	$(AM_V_CC)source='VSC_mempool.c' object='varnishd-VSC_mempool.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_mempool.o `test -f 'VSC_mempool.c' || echo '$(srcdir)/'`VSC_mempool.c

varnishd-VSC_mempool.obj: VSC_mempool.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_mempool.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_mempool.Tpo -c -o varnishd-VSC_mempool.obj `if test -f 'VSC_mempool.c'; then $(CYGPATH_W) 'VSC_mempool.c'; else $(CYGPATH_W) '$(srcdir)/VSC_mempool.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_mempool.Tpo $(DEPDIR)/varnishd-VSC_mempool.Po
#	$(AM_V_CC)source='VSC_mempool.c' object='varnishd-VSC_mempool.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_mempool.obj `if test -f 'VSC_mempool.c'; then $(CYGPATH_W) 'VSC_mempool.c'; else $(CYGPATH_W) '$(srcdir)/VSC_mempool.c'; fi`

varnishd-VSC_mgt.o: VSC_mgt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_mgt.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_mgt.Tpo -c -o varnishd-VSC_mgt.o `test -f 'VSC_mgt.c' || echo '$(srcdir)/'`VSC_mgt.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_mgt.Tpo $(DEPDIR)/varnishd-VSC_mgt.Po
#	$(AM_V_CC)source='VSC_mgt.c' object='varnishd-VSC_mgt.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_mgt.o `test -f 'VSC_mgt.c' || echo '$(srcdir)/'`VSC_mgt.c

varnishd-VSC_mgt.obj: VSC_mgt.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_mgt.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_mgt.Tpo -c -o varnishd-VSC_mgt.obj `if test -f 'VSC_mgt.c'; then $(CYGPATH_W) 'VSC_mgt.c'; else $(CYGPATH_W) '$(srcdir)/VSC_mgt.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_mgt.Tpo $(DEPDIR)/varnishd-VSC_mgt.Po
#	$(AM_V_CC)source='VSC_mgt.c' object='varnishd-VSC_mgt.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_mgt.obj `if test -f 'VSC_mgt.c'; then $(CYGPATH_W) 'VSC_mgt.c'; else $(CYGPATH_W) '$(srcdir)/VSC_mgt.c'; fi`

varnishd-VSC_sma.o: VSC_sma.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_sma.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_sma.Tpo -c -o varnishd-VSC_sma.o `test -f 'VSC_sma.c' || echo '$(srcdir)/'`VSC_sma.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_sma.Tpo $(DEPDIR)/varnishd-VSC_sma.Po
#	$(AM_V_CC)source='VSC_sma.c' object='varnishd-VSC_sma.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_sma.o `test -f 'VSC_sma.c' || echo '$(srcdir)/'`VSC_sma.c

varnishd-VSC_sma.obj: VSC_sma.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_sma.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_sma.Tpo -c -o varnishd-VSC_sma.obj `if test -f 'VSC_sma.c'; then $(CYGPATH_W) 'VSC_sma.c'; else $(CYGPATH_W) '$(srcdir)/VSC_sma.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_sma.Tpo $(DEPDIR)/varnishd-VSC_sma.Po
#	$(AM_V_CC)source='VSC_sma.c' object='varnishd-VSC_sma.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_sma.obj `if test -f 'VSC_sma.c'; then $(CYGPATH_W) 'VSC_sma.c'; else $(CYGPATH_W) '$(srcdir)/VSC_sma.c'; fi`

varnishd-VSC_smf.o: VSC_smf.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_smf.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_smf.Tpo -c -o varnishd-VSC_smf.o `test -f 'VSC_smf.c' || echo '$(srcdir)/'`VSC_smf.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_smf.Tpo $(DEPDIR)/varnishd-VSC_smf.Po
#	$(AM_V_CC)source='VSC_smf.c' object='varnishd-VSC_smf.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_smf.o `test -f 'VSC_smf.c' || echo '$(srcdir)/'`VSC_smf.c

varnishd-VSC_smf.obj: VSC_smf.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_smf.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_smf.Tpo -c -o varnishd-VSC_smf.obj `if test -f 'VSC_smf.c'; then $(CYGPATH_W) 'VSC_smf.c'; else $(CYGPATH_W) '$(srcdir)/VSC_smf.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_smf.Tpo $(DEPDIR)/varnishd-VSC_smf.Po
#	$(AM_V_CC)source='VSC_smf.c' object='varnishd-VSC_smf.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_smf.obj `if test -f 'VSC_smf.c'; then $(CYGPATH_W) 'VSC_smf.c'; else $(CYGPATH_W) '$(srcdir)/VSC_smf.c'; fi`

varnishd-VSC_smu.o: VSC_smu.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_smu.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_smu.Tpo -c -o varnishd-VSC_smu.o `test -f 'VSC_smu.c' || echo '$(srcdir)/'`VSC_smu.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_smu.Tpo $(DEPDIR)/varnishd-VSC_smu.Po
#	$(AM_V_CC)source='VSC_smu.c' object='varnishd-VSC_smu.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_smu.o `test -f 'VSC_smu.c' || echo '$(srcdir)/'`VSC_smu.c

varnishd-VSC_smu.obj: VSC_smu.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_smu.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_smu.Tpo -c -o varnishd-VSC_smu.obj `if test -f 'VSC_smu.c'; then $(CYGPATH_W) 'VSC_smu.c'; else $(CYGPATH_W) '$(srcdir)/VSC_smu.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_smu.Tpo $(DEPDIR)/varnishd-VSC_smu.Po
#	$(AM_V_CC)source='VSC_smu.c' object='varnishd-VSC_smu.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_smu.obj `if test -f 'VSC_smu.c'; then $(CYGPATH_W) 'VSC_smu.c'; else $(CYGPATH_W) '$(srcdir)/VSC_smu.c'; fi`

varnishd-VSC_vbe.o: VSC_vbe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_vbe.o -MD -MP -MF $(DEPDIR)/varnishd-VSC_vbe.Tpo -c -o varnishd-VSC_vbe.o `test -f 'VSC_vbe.c' || echo '$(srcdir)/'`VSC_vbe.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_vbe.Tpo $(DEPDIR)/varnishd-VSC_vbe.Po
#	$(AM_V_CC)source='VSC_vbe.c' object='varnishd-VSC_vbe.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_vbe.o `test -f 'VSC_vbe.c' || echo '$(srcdir)/'`VSC_vbe.c

varnishd-VSC_vbe.obj: VSC_vbe.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-VSC_vbe.obj -MD -MP -MF $(DEPDIR)/varnishd-VSC_vbe.Tpo -c -o varnishd-VSC_vbe.obj `if test -f 'VSC_vbe.c'; then $(CYGPATH_W) 'VSC_vbe.c'; else $(CYGPATH_W) '$(srcdir)/VSC_vbe.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-VSC_vbe.Tpo $(DEPDIR)/varnishd-VSC_vbe.Po
#	$(AM_V_CC)source='VSC_vbe.c' object='varnishd-VSC_vbe.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-VSC_vbe.obj `if test -f 'VSC_vbe.c'; then $(CYGPATH_W) 'VSC_vbe.c'; else $(CYGPATH_W) '$(srcdir)/VSC_vbe.c'; fi`

varnishd-builtin_vcl.o: builtin_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-builtin_vcl.o -MD -MP -MF $(DEPDIR)/varnishd-builtin_vcl.Tpo -c -o varnishd-builtin_vcl.o `test -f 'builtin_vcl.c' || echo '$(srcdir)/'`builtin_vcl.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-builtin_vcl.Tpo $(DEPDIR)/varnishd-builtin_vcl.Po
#	$(AM_V_CC)source='builtin_vcl.c' object='varnishd-builtin_vcl.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-builtin_vcl.o `test -f 'builtin_vcl.c' || echo '$(srcdir)/'`builtin_vcl.c

varnishd-builtin_vcl.obj: builtin_vcl.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-builtin_vcl.obj -MD -MP -MF $(DEPDIR)/varnishd-builtin_vcl.Tpo -c -o varnishd-builtin_vcl.obj `if test -f 'builtin_vcl.c'; then $(CYGPATH_W) 'builtin_vcl.c'; else $(CYGPATH_W) '$(srcdir)/builtin_vcl.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/varnishd-builtin_vcl.Tpo $(DEPDIR)/varnishd-builtin_vcl.Po
#	$(AM_V_CC)source='builtin_vcl.c' object='varnishd-builtin_vcl.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-builtin_vcl.obj `if test -f 'builtin_vcl.c'; then $(CYGPATH_W) 'builtin_vcl.c'; else $(CYGPATH_W) '$(srcdir)/builtin_vcl.c'; fi`

hpack/vhp_decode_test-vhp_decode.o: hpack/vhp_decode.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_decode_test-vhp_decode.o -MD -MP -MF hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Tpo -c -o hpack/vhp_decode_test-vhp_decode.o `test -f 'hpack/vhp_decode.c' || echo '$(srcdir)/'`hpack/vhp_decode.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Tpo hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po
#	$(AM_V_CC)source='hpack/vhp_decode.c' object='hpack/vhp_decode_test-vhp_decode.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_decode_test-vhp_decode.o `test -f 'hpack/vhp_decode.c' || echo '$(srcdir)/'`hpack/vhp_decode.c

hpack/vhp_decode_test-vhp_decode.obj: hpack/vhp_decode.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_decode_test-vhp_decode.obj -MD -MP -MF hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Tpo -c -o hpack/vhp_decode_test-vhp_decode.obj `if test -f 'hpack/vhp_decode.c'; then $(CYGPATH_W) 'hpack/vhp_decode.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_decode.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Tpo hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po
#	$(AM_V_CC)source='hpack/vhp_decode.c' object='hpack/vhp_decode_test-vhp_decode.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_decode_test-vhp_decode.obj `if test -f 'hpack/vhp_decode.c'; then $(CYGPATH_W) 'hpack/vhp_decode.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_decode.c'; fi`

hpack/vhp_decode_test-vhp_table.o: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_decode_test-vhp_table.o -MD -MP -MF hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Tpo -c -o hpack/vhp_decode_test-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Tpo hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/vhp_decode_test-vhp_table.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_decode_test-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c

hpack/vhp_decode_test-vhp_table.obj: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_decode_test-vhp_table.obj -MD -MP -MF hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Tpo -c -o hpack/vhp_decode_test-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Tpo hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/vhp_decode_test-vhp_table.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_decode_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_decode_test-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`

hpack/vhp_gen_hufdec-vhp_gen_hufdec.o: hpack/vhp_gen_hufdec.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_gen_hufdec_CFLAGS) $(CFLAGS) -MT hpack/vhp_gen_hufdec-vhp_gen_hufdec.o -MD -MP -MF hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Tpo -c -o hpack/vhp_gen_hufdec-vhp_gen_hufdec.o `test -f 'hpack/vhp_gen_hufdec.c' || echo '$(srcdir)/'`hpack/vhp_gen_hufdec.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Tpo hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po
#	$(AM_V_CC)source='hpack/vhp_gen_hufdec.c' object='hpack/vhp_gen_hufdec-vhp_gen_hufdec.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_gen_hufdec_CFLAGS) $(CFLAGS) -c -o hpack/vhp_gen_hufdec-vhp_gen_hufdec.o `test -f 'hpack/vhp_gen_hufdec.c' || echo '$(srcdir)/'`hpack/vhp_gen_hufdec.c

hpack/vhp_gen_hufdec-vhp_gen_hufdec.obj: hpack/vhp_gen_hufdec.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_gen_hufdec_CFLAGS) $(CFLAGS) -MT hpack/vhp_gen_hufdec-vhp_gen_hufdec.obj -MD -MP -MF hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Tpo -c -o hpack/vhp_gen_hufdec-vhp_gen_hufdec.obj `if test -f 'hpack/vhp_gen_hufdec.c'; then $(CYGPATH_W) 'hpack/vhp_gen_hufdec.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_gen_hufdec.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Tpo hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po
#	$(AM_V_CC)source='hpack/vhp_gen_hufdec.c' object='hpack/vhp_gen_hufdec-vhp_gen_hufdec.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_gen_hufdec_CFLAGS) $(CFLAGS) -c -o hpack/vhp_gen_hufdec-vhp_gen_hufdec.obj `if test -f 'hpack/vhp_gen_hufdec.c'; then $(CYGPATH_W) 'hpack/vhp_gen_hufdec.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_gen_hufdec.c'; fi`

hpack/vhp_table_test-vhp_table.o: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_table_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_table_test-vhp_table.o -MD -MP -MF hpack/$(DEPDIR)/vhp_table_test-vhp_table.Tpo -c -o hpack/vhp_table_test-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_table_test-vhp_table.Tpo hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/vhp_table_test-vhp_table.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_table_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_table_test-vhp_table.o `test -f 'hpack/vhp_table.c' || echo '$(srcdir)/'`hpack/vhp_table.c

hpack/vhp_table_test-vhp_table.obj: hpack/vhp_table.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_table_test_CFLAGS) $(CFLAGS) -MT hpack/vhp_table_test-vhp_table.obj -MD -MP -MF hpack/$(DEPDIR)/vhp_table_test-vhp_table.Tpo -c -o hpack/vhp_table_test-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`
#	$(AM_V_at)$(am__mv) hpack/$(DEPDIR)/vhp_table_test-vhp_table.Tpo hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po
#	$(AM_V_CC)source='hpack/vhp_table.c' object='hpack/vhp_table_test-vhp_table.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vhp_table_test_CFLAGS) $(CFLAGS) -c -o hpack/vhp_table_test-vhp_table.obj `if test -f 'hpack/vhp_table.c'; then $(CYGPATH_W) 'hpack/vhp_table.c'; else $(CYGPATH_W) '$(srcdir)/hpack/vhp_table.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(pkgincludedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(pkgincludedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
vhp_table_test.log: vhp_table_test$(EXEEXT)
	@p='vhp_table_test$(EXEEXT)'; \
	b='vhp_table_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
vhp_decode_test.log: vhp_decode_test$(EXEEXT)
	@p='vhp_decode_test$(EXEEXT)'; \
	b='vhp_decode_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f cache/$(DEPDIR)/$(am__dirstamp)
	-rm -f cache/$(am__dirstamp)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)
	-rm -f fuzzers/$(DEPDIR)/$(am__dirstamp)
	-rm -f fuzzers/$(am__dirstamp)
	-rm -f hash/$(DEPDIR)/$(am__dirstamp)
	-rm -f hash/$(am__dirstamp)
	-rm -f hpack/$(DEPDIR)/$(am__dirstamp)
	-rm -f hpack/$(am__dirstamp)
	-rm -f http1/$(DEPDIR)/$(am__dirstamp)
	-rm -f http1/$(am__dirstamp)
	-rm -f http2/$(DEPDIR)/$(am__dirstamp)
	-rm -f http2/$(am__dirstamp)
	-rm -f mgt/$(DEPDIR)/$(am__dirstamp)
	-rm -f mgt/$(am__dirstamp)
	-rm -f proxy/$(DEPDIR)/$(am__dirstamp)
	-rm -f proxy/$(am__dirstamp)
	-rm -f storage/$(DEPDIR)/$(am__dirstamp)
	-rm -f storage/$(am__dirstamp)
	-rm -f waiter/$(DEPDIR)/$(am__dirstamp)
	-rm -f waiter/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/varnishd-VSC_lck.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_main.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_mempool.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_mgt.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_sma.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_smf.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_smu.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_vbe.Po
	-rm -f ./$(DEPDIR)/varnishd-builtin_vcl.Po
	-rm -f cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_acceptor.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_backend.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_backend_probe.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban_build.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_busyobj.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_cli.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_director.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_parse.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_expire.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_fetch.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_gzip.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_hash.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_http.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_lck.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_main.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_mempool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_obj.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_panic.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_pool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_range.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req_body.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req_fsm.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_rfc2616.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_session.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_shmlog.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vary.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vcl.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vpi.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_re.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_var.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_wrk.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ws.Po
	-rm -f common/$(DEPDIR)/varnishd-common_vsc.Po
	-rm -f common/$(DEPDIR)/varnishd-common_vsmw.Po
	-rm -f fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_classic.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_critbit.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_simple_list.Po
	-rm -f hash/$(DEPDIR)/varnishd-mgt_hash.Po
	-rm -f hpack/$(DEPDIR)/varnishd-vhp_decode.Po
	-rm -f hpack/$(DEPDIR)/varnishd-vhp_table.Po
	-rm -f hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po
	-rm -f hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po
	-rm -f hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po
	-rm -f hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_line.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_proto.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_panic.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_proto.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_send.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_session.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_child.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_cli.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_main.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_pool.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_shmem.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_symtab.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_util.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_vcc.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_vcl.Po
	-rm -f proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po
	-rm -f storage/$(DEPDIR)/varnishd-mgt_stevedore.Po
	-rm -f storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po
	-rm -f storage/$(DEPDIR)/varnishd-stevedore.Po
	-rm -f storage/$(DEPDIR)/varnishd-stevedore_utils.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_file.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_lru.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_malloc.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_simple.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_umem.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po
	-rm -f waiter/$(DEPDIR)/varnishd-mgt_waiter.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/varnishd-VSC_lck.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_main.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_mempool.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_mgt.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_sma.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_smf.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_smu.Po
	-rm -f ./$(DEPDIR)/varnishd-VSC_vbe.Po
	-rm -f ./$(DEPDIR)/varnishd-builtin_vcl.Po
	-rm -f cache/$(DEPDIR)/esi_parse_fuzzer-cache_esi_parse.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_acceptor.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_backend.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_backend_probe.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban_build.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ban_lurker.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_busyobj.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_cli.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_deliver_proc.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_director.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_deliver.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_fetch.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_esi_parse.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_expire.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_fetch.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_fetch_proc.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_gzip.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_hash.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_http.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_lck.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_main.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_mempool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_obj.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_panic.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_pool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_range.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req_body.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_req_fsm.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_rfc2616.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_session.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_shmlog.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_tcp_pool.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vary.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vcl.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vpi.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_filter.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_priv.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_re.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_var.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_vcl.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_vrt_vmod.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_wrk.Po
	-rm -f cache/$(DEPDIR)/varnishd-cache_ws.Po
	-rm -f common/$(DEPDIR)/varnishd-common_vsc.Po
	-rm -f common/$(DEPDIR)/varnishd-common_vsmw.Po
	-rm -f fuzzers/$(DEPDIR)/esi_parse_fuzzer-esi_parse_fuzzer.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_classic.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_critbit.Po
	-rm -f hash/$(DEPDIR)/varnishd-hash_simple_list.Po
	-rm -f hash/$(DEPDIR)/varnishd-mgt_hash.Po
	-rm -f hpack/$(DEPDIR)/varnishd-vhp_decode.Po
	-rm -f hpack/$(DEPDIR)/varnishd-vhp_table.Po
	-rm -f hpack/$(DEPDIR)/vhp_decode_test-vhp_decode.Po
	-rm -f hpack/$(DEPDIR)/vhp_decode_test-vhp_table.Po
	-rm -f hpack/$(DEPDIR)/vhp_gen_hufdec-vhp_gen_hufdec.Po
	-rm -f hpack/$(DEPDIR)/vhp_table_test-vhp_table.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_deliver.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_fetch.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_fsm.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_line.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_pipe.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_proto.Po
	-rm -f http1/$(DEPDIR)/varnishd-cache_http1_vfp.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_deliver.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_hpack.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_panic.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_proto.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_send.Po
	-rm -f http2/$(DEPDIR)/varnishd-cache_http2_session.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_acceptor.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_child.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_cli.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail_solaris.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_jail_unix.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_main.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_bits.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tbl.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tcp.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_param_tweak.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_pool.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_shmem.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_symtab.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_util.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_vcc.Po
	-rm -f mgt/$(DEPDIR)/varnishd-mgt_vcl.Po
	-rm -f proxy/$(DEPDIR)/varnishd-cache_proxy_proto.Po
	-rm -f storage/$(DEPDIR)/varnishd-mgt_stevedore.Po
	-rm -f storage/$(DEPDIR)/varnishd-mgt_storage_persistent.Po
	-rm -f storage/$(DEPDIR)/varnishd-stevedore.Po
	-rm -f storage/$(DEPDIR)/varnishd-stevedore_utils.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_file.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_lru.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_malloc.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent_silo.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_persistent_subr.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_simple.Po
	-rm -f storage/$(DEPDIR)/varnishd-storage_umem.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_epoll.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_kqueue.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_poll.Po
	-rm -f waiter/$(DEPDIR)/varnishd-cache_waiter_ports.Po
	-rm -f waiter/$(DEPDIR)/varnishd-mgt_waiter.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_pkgincludeHEADERS \
	uninstall-sbinPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-generic clean-libtool \
	clean-noinstPROGRAMS clean-sbinPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nobase_pkgincludeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-nobase_pkgincludeHEADERS uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


#
# Turn the builtin.vcl file into a C-string we can include in the program.
#
builtin_vcl.c:	builtin.vcl
	echo '/*' > $@
	echo ' * NB:  This file is machine generated, DO NOT EDIT!' >> $@
	echo ' *' >> $@
	echo ' * Edit builtin.vcl instead and run make' >> $@
	echo ' *' >> $@
	echo ' */' >> $@
	echo '#include "config.h"' >> $@
	echo '#include "mgt/mgt.h"' >> $@
	echo '' >> $@
	echo 'const char * const builtin_vcl =' >> $@
	sed -e 's/"/\\"/g' \
	    -e 's/$$/\\n"/' \
	    -e 's/^/ "/' $(srcdir)/builtin.vcl >> $@
	echo ';' >> $@

vhp_hufdec.h: vhp_gen_hufdec
	$(AM_V_GEN) ./vhp_gen_hufdec > vhp_hufdec.h_
	mv -f vhp_hufdec.h_ vhp_hufdec.h

#######################################################################

.vsc.c:
	$(PYTHON) $(top_srcdir)/lib/libvcc/vsctool.py -ch $<

$(VSC_GEN_C): $(top_srcdir)/lib/libvcc/vsctool.py

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
